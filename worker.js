!function(){"use strict";var o=[0];function e(e){var r=[e,(o[0]+=1,o[0])];return r.tag=248,r}var r=[];function t(o){return null==o?void 0:function(o){if(void 0===o){var e=[r,0];return e.tag=256,e}if(null!==o&&o[0]===r){var t=o[1]+1|0,s=[r,t];return s.tag=256,s}return o}(o)}e("Caml_js_exceptions.Error"),e("Array.Bottom");class s{static createEmpty(o,e){return new s(new Uint8ClampedArray(o*e),o)}constructor(o,e){this.width=e,this.height=o.length/e,this.data=o}get(o,e){return!(o<0||o>=this.width||e<0||e>=this.height)&&!!this.data[e*this.width+o]}set(o,e,r){this.data[e*this.width+o]=r?1:0}setRegion(o,e,r,t,s){for(let c=e;c<e+t;c++)for(let e=o;e<o+r;e++)this.set(e,c,!!s)}}const c=8,l=24;function d(o,e,r){return o<e?e:o>r?r:o}class n{constructor(o,e,r){this.width=o;const t=o*e;if(r&&r.length!==t)throw new Error("Wrong buffer size");this.data=r||new Uint8ClampedArray(t)}get(o,e){return this.data[e*this.width+o]}set(o,e,r){this.data[e*this.width+o]=r}}class a{constructor(o){this.byteOffset=0,this.bitOffset=0,this.bytes=o}readBits(o){if(o<1||o>32||o>this.available())throw new Error("Cannot read "+o.toString()+" bits");let e=0;if(this.bitOffset>0){const r=8-this.bitOffset,t=o<r?o:r,s=r-t,c=255>>8-t<<s;e=(this.bytes[this.byteOffset]&c)>>s,o-=t,this.bitOffset+=t,8===this.bitOffset&&(this.bitOffset=0,this.byteOffset++)}if(o>0){for(;o>=8;)e=e<<8|255&this.bytes[this.byteOffset],this.byteOffset++,o-=8;if(o>0){const r=8-o,t=255>>r<<r;e=e<<o|(this.bytes[this.byteOffset]&t)>>r,this.bitOffset+=o}}return e}available(){return 8*(this.bytes.length-this.byteOffset)-this.bitOffset}}var B,k;function i(o,e){const r=[];let t="";const s=[10,12,14][e];let c=o.readBits(s);for(;c>=3;){const e=o.readBits(10);if(e>=1e3)throw new Error("Invalid numeric value above 999");const s=Math.floor(e/100),l=Math.floor(e/10)%10,d=e%10;r.push(48+s,48+l,48+d),t+=s.toString()+l.toString()+d.toString(),c-=3}if(2===c){const e=o.readBits(7);if(e>=100)throw new Error("Invalid numeric value above 99");const s=Math.floor(e/10),c=e%10;r.push(48+s,48+c),t+=s.toString()+c.toString()}else if(1===c){const e=o.readBits(4);if(e>=10)throw new Error("Invalid numeric value above 9");r.push(48+e),t+=e.toString()}return{bytes:r,text:t}}!function(o){o.Numeric="numeric",o.Alphanumeric="alphanumeric",o.Byte="byte",o.Kanji="kanji",o.ECI="eci"}(B||(B={})),function(o){o[o.Terminator=0]="Terminator",o[o.Numeric=1]="Numeric",o[o.Alphanumeric=2]="Alphanumeric",o[o.Byte=4]="Byte",o[o.Kanji=8]="Kanji",o[o.ECI=7]="ECI"}(k||(k={}));const u=["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"," ","$","%","*","+","-",".","/",":"];function C(o,e){const r=[];let t="";const s=[9,11,13][e];let c=o.readBits(s);for(;c>=2;){const e=o.readBits(11),s=Math.floor(e/45),l=e%45;r.push(u[s].charCodeAt(0),u[l].charCodeAt(0)),t+=u[s]+u[l],c-=2}if(1===c){const e=o.readBits(6);r.push(u[e].charCodeAt(0)),t+=u[e]}return{bytes:r,text:t}}function m(o,e){const r=[];let t="";const s=[8,16,16][e],c=o.readBits(s);for(let e=0;e<c;e++){const e=o.readBits(8);r.push(e)}try{t+=decodeURIComponent(r.map(o=>`%${("0"+o.toString(16)).substr(-2)}`).join(""))}catch(o){}return{bytes:r,text:t}}function w(o,e){const r=[],t=[8,10,12][e],s=o.readBits(t);for(let e=0;e<s;e++){const e=o.readBits(13);let t=Math.floor(e/192)<<8|e%192;t+=t<7936?33088:49472,r.push(t>>8,255&t)}return{bytes:r,text:new TextDecoder("shift-jis").decode(Uint8Array.from(r))}}class P{constructor(o,e){if(0===e.length)throw new Error("No coefficients.");this.field=o;const r=e.length;if(r>1&&0===e[0]){let t=1;for(;t<r&&0===e[t];)t++;if(t===r)this.coefficients=o.zero.coefficients;else{this.coefficients=new Uint8ClampedArray(r-t);for(let o=0;o<this.coefficients.length;o++)this.coefficients[o]=e[t+o]}}else this.coefficients=e}degree(){return this.coefficients.length-1}isZero(){return 0===this.coefficients[0]}getCoefficient(o){return this.coefficients[this.coefficients.length-1-o]}addOrSubtract(o){if(this.isZero())return o;if(o.isZero())return this;let e=this.coefficients,r=o.coefficients;e.length>r.length&&([e,r]=[r,e]);const t=new Uint8ClampedArray(r.length),s=r.length-e.length;for(let o=0;o<s;o++)t[o]=r[o];for(let o=s;o<r.length;o++)t[o]=f(e[o-s],r[o]);return new P(this.field,t)}multiply(o){if(0===o)return this.field.zero;if(1===o)return this;const e=this.coefficients.length,r=new Uint8ClampedArray(e);for(let t=0;t<e;t++)r[t]=this.field.multiply(this.coefficients[t],o);return new P(this.field,r)}multiplyPoly(o){if(this.isZero()||o.isZero())return this.field.zero;const e=this.coefficients,r=e.length,t=o.coefficients,s=t.length,c=new Uint8ClampedArray(r+s-1);for(let o=0;o<r;o++){const r=e[o];for(let e=0;e<s;e++)c[o+e]=f(c[o+e],this.field.multiply(r,t[e]))}return new P(this.field,c)}multiplyByMonomial(o,e){if(o<0)throw new Error("Invalid degree less than 0");if(0===e)return this.field.zero;const r=this.coefficients.length,t=new Uint8ClampedArray(r+o);for(let o=0;o<r;o++)t[o]=this.field.multiply(this.coefficients[o],e);return new P(this.field,t)}evaluateAt(o){let e=0;if(0===o)return this.getCoefficient(0);const r=this.coefficients.length;if(1===o)return this.coefficients.forEach(o=>{e=f(e,o)}),e;e=this.coefficients[0];for(let t=1;t<r;t++)e=f(this.field.multiply(o,e),this.coefficients[t]);return e}}function f(o,e){return o^e}class h{constructor(o,e,r){this.primitive=o,this.size=e,this.generatorBase=r,this.expTable=new Array(this.size),this.logTable=new Array(this.size);let t=1;for(let o=0;o<this.size;o++)this.expTable[o]=t,(t*=2)>=this.size&&(t=(t^this.primitive)&this.size-1);for(let o=0;o<this.size-1;o++)this.logTable[this.expTable[o]]=o;this.zero=new P(this,Uint8ClampedArray.from([0])),this.one=new P(this,Uint8ClampedArray.from([1]))}multiply(o,e){return 0===o||0===e?0:this.expTable[(this.logTable[o]+this.logTable[e])%(this.size-1)]}inverse(o){if(0===o)throw new Error("Can't invert 0");return this.expTable[this.size-this.logTable[o]-1]}buildMonomial(o,e){if(o<0)throw new Error("Invalid monomial degree less than 0");if(0===e)return this.zero;const r=new Uint8ClampedArray(o+1);return r[0]=e,new P(this,r)}log(o){if(0===o)throw new Error("Can't take log(0)");return this.logTable[o]}exp(o){return this.expTable[o]}}function b(o,e){const r=new Uint8ClampedArray(o.length);r.set(o);const t=new h(285,256,0),s=new P(t,r),c=new Uint8ClampedArray(e);let l=!1;for(let o=0;o<e;o++){const e=s.evaluateAt(t.exp(o+t.generatorBase));c[c.length-1-o]=e,0!==e&&(l=!0)}if(!l)return r;const d=new P(t,c),n=function(o,e,r,t){e.degree()<r.degree()&&([e,r]=[r,e]);let s=e,c=r,l=o.zero,d=o.one;for(;c.degree()>=t/2;){const e=s,r=l;if(l=d,(s=c).isZero())return null;c=e;let t=o.zero;const n=s.getCoefficient(s.degree()),a=o.inverse(n);for(;c.degree()>=s.degree()&&!c.isZero();){const e=c.degree()-s.degree(),r=o.multiply(c.getCoefficient(c.degree()),a);t=t.addOrSubtract(o.buildMonomial(e,r)),c=c.addOrSubtract(s.multiplyByMonomial(e,r))}if(d=t.multiplyPoly(l).addOrSubtract(r),c.degree()>=s.degree())return null}const n=d.getCoefficient(0);if(0===n)return null;const a=o.inverse(n);return[d.multiply(a),c.multiply(a)]}(t,t.buildMonomial(e,1),d,e);if(null===n)return null;const a=function(o,e){const r=e.degree();if(1===r)return[e.getCoefficient(1)];const t=new Array(r);let s=0;for(let c=1;c<o.size&&s<r;c++)0===e.evaluateAt(c)&&(t[s]=o.inverse(c),s++);return s!==r?null:t}(t,n[0]);if(null==a)return null;const B=function(o,e,r){const t=r.length,s=new Array(t);for(let c=0;c<t;c++){const l=o.inverse(r[c]);let d=1;for(let e=0;e<t;e++)c!==e&&(d=o.multiply(d,f(1,o.multiply(r[e],l))));s[c]=o.multiply(e.evaluateAt(l),o.inverse(d)),0!==o.generatorBase&&(s[c]=o.multiply(s[c],l))}return s}(t,n[1],a);for(let o=0;o<a.length;o++){const e=r.length-1-t.log(a[o]);if(e<0)return null;r[e]=f(r[e],B[o])}return r}const g=[{infoBits:null,versionNumber:1,alignmentPatternCenters:[],errorCorrectionLevels:[{ecCodewordsPerBlock:7,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:19}]},{ecCodewordsPerBlock:10,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:16}]},{ecCodewordsPerBlock:13,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:13}]},{ecCodewordsPerBlock:17,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:9}]}]},{infoBits:null,versionNumber:2,alignmentPatternCenters:[6,18],errorCorrectionLevels:[{ecCodewordsPerBlock:10,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:34}]},{ecCodewordsPerBlock:16,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:28}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:22}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:16}]}]},{infoBits:null,versionNumber:3,alignmentPatternCenters:[6,22],errorCorrectionLevels:[{ecCodewordsPerBlock:15,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:55}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:44}]},{ecCodewordsPerBlock:18,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:17}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:13}]}]},{infoBits:null,versionNumber:4,alignmentPatternCenters:[6,26],errorCorrectionLevels:[{ecCodewordsPerBlock:20,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:80}]},{ecCodewordsPerBlock:18,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:32}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:24}]},{ecCodewordsPerBlock:16,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:9}]}]},{infoBits:null,versionNumber:5,alignmentPatternCenters:[6,30],errorCorrectionLevels:[{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:108}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:43}]},{ecCodewordsPerBlock:18,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:15},{numBlocks:2,dataCodewordsPerBlock:16}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:11},{numBlocks:2,dataCodewordsPerBlock:12}]}]},{infoBits:null,versionNumber:6,alignmentPatternCenters:[6,34],errorCorrectionLevels:[{ecCodewordsPerBlock:18,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:68}]},{ecCodewordsPerBlock:16,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:27}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:19}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:15}]}]},{infoBits:31892,versionNumber:7,alignmentPatternCenters:[6,22,38],errorCorrectionLevels:[{ecCodewordsPerBlock:20,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:78}]},{ecCodewordsPerBlock:18,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:31}]},{ecCodewordsPerBlock:18,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:14},{numBlocks:4,dataCodewordsPerBlock:15}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:13},{numBlocks:1,dataCodewordsPerBlock:14}]}]},{infoBits:34236,versionNumber:8,alignmentPatternCenters:[6,24,42],errorCorrectionLevels:[{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:97}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:38},{numBlocks:2,dataCodewordsPerBlock:39}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:18},{numBlocks:2,dataCodewordsPerBlock:19}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:14},{numBlocks:2,dataCodewordsPerBlock:15}]}]},{infoBits:39577,versionNumber:9,alignmentPatternCenters:[6,26,46],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:116}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:36},{numBlocks:2,dataCodewordsPerBlock:37}]},{ecCodewordsPerBlock:20,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:16},{numBlocks:4,dataCodewordsPerBlock:17}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:12},{numBlocks:4,dataCodewordsPerBlock:13}]}]},{infoBits:42195,versionNumber:10,alignmentPatternCenters:[6,28,50],errorCorrectionLevels:[{ecCodewordsPerBlock:18,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:68},{numBlocks:2,dataCodewordsPerBlock:69}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:43},{numBlocks:1,dataCodewordsPerBlock:44}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:6,dataCodewordsPerBlock:19},{numBlocks:2,dataCodewordsPerBlock:20}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:6,dataCodewordsPerBlock:15},{numBlocks:2,dataCodewordsPerBlock:16}]}]},{infoBits:48118,versionNumber:11,alignmentPatternCenters:[6,30,54],errorCorrectionLevels:[{ecCodewordsPerBlock:20,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:81}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:50},{numBlocks:4,dataCodewordsPerBlock:51}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:22},{numBlocks:4,dataCodewordsPerBlock:23}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:12},{numBlocks:8,dataCodewordsPerBlock:13}]}]},{infoBits:51042,versionNumber:12,alignmentPatternCenters:[6,32,58],errorCorrectionLevels:[{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:92},{numBlocks:2,dataCodewordsPerBlock:93}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:6,dataCodewordsPerBlock:36},{numBlocks:2,dataCodewordsPerBlock:37}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:20},{numBlocks:6,dataCodewordsPerBlock:21}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:7,dataCodewordsPerBlock:14},{numBlocks:4,dataCodewordsPerBlock:15}]}]},{infoBits:55367,versionNumber:13,alignmentPatternCenters:[6,34,62],errorCorrectionLevels:[{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:107}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:8,dataCodewordsPerBlock:37},{numBlocks:1,dataCodewordsPerBlock:38}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:8,dataCodewordsPerBlock:20},{numBlocks:4,dataCodewordsPerBlock:21}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:12,dataCodewordsPerBlock:11},{numBlocks:4,dataCodewordsPerBlock:12}]}]},{infoBits:58893,versionNumber:14,alignmentPatternCenters:[6,26,46,66],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:115},{numBlocks:1,dataCodewordsPerBlock:116}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:40},{numBlocks:5,dataCodewordsPerBlock:41}]},{ecCodewordsPerBlock:20,ecBlocks:[{numBlocks:11,dataCodewordsPerBlock:16},{numBlocks:5,dataCodewordsPerBlock:17}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:11,dataCodewordsPerBlock:12},{numBlocks:5,dataCodewordsPerBlock:13}]}]},{infoBits:63784,versionNumber:15,alignmentPatternCenters:[6,26,48,70],errorCorrectionLevels:[{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:5,dataCodewordsPerBlock:87},{numBlocks:1,dataCodewordsPerBlock:88}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:5,dataCodewordsPerBlock:41},{numBlocks:5,dataCodewordsPerBlock:42}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:5,dataCodewordsPerBlock:24},{numBlocks:7,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:11,dataCodewordsPerBlock:12},{numBlocks:7,dataCodewordsPerBlock:13}]}]},{infoBits:68472,versionNumber:16,alignmentPatternCenters:[6,26,50,74],errorCorrectionLevels:[{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:5,dataCodewordsPerBlock:98},{numBlocks:1,dataCodewordsPerBlock:99}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:7,dataCodewordsPerBlock:45},{numBlocks:3,dataCodewordsPerBlock:46}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:15,dataCodewordsPerBlock:19},{numBlocks:2,dataCodewordsPerBlock:20}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:15},{numBlocks:13,dataCodewordsPerBlock:16}]}]},{infoBits:70749,versionNumber:17,alignmentPatternCenters:[6,30,54,78],errorCorrectionLevels:[{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:107},{numBlocks:5,dataCodewordsPerBlock:108}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:10,dataCodewordsPerBlock:46},{numBlocks:1,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:22},{numBlocks:15,dataCodewordsPerBlock:23}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:14},{numBlocks:17,dataCodewordsPerBlock:15}]}]},{infoBits:76311,versionNumber:18,alignmentPatternCenters:[6,30,56,82],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:5,dataCodewordsPerBlock:120},{numBlocks:1,dataCodewordsPerBlock:121}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:9,dataCodewordsPerBlock:43},{numBlocks:4,dataCodewordsPerBlock:44}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:22},{numBlocks:1,dataCodewordsPerBlock:23}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:14},{numBlocks:19,dataCodewordsPerBlock:15}]}]},{infoBits:79154,versionNumber:19,alignmentPatternCenters:[6,30,58,86],errorCorrectionLevels:[{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:113},{numBlocks:4,dataCodewordsPerBlock:114}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:44},{numBlocks:11,dataCodewordsPerBlock:45}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:21},{numBlocks:4,dataCodewordsPerBlock:22}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:9,dataCodewordsPerBlock:13},{numBlocks:16,dataCodewordsPerBlock:14}]}]},{infoBits:84390,versionNumber:20,alignmentPatternCenters:[6,34,62,90],errorCorrectionLevels:[{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:107},{numBlocks:5,dataCodewordsPerBlock:108}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:41},{numBlocks:13,dataCodewordsPerBlock:42}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:15,dataCodewordsPerBlock:24},{numBlocks:5,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:15,dataCodewordsPerBlock:15},{numBlocks:10,dataCodewordsPerBlock:16}]}]},{infoBits:87683,versionNumber:21,alignmentPatternCenters:[6,28,50,72,94],errorCorrectionLevels:[{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:116},{numBlocks:4,dataCodewordsPerBlock:117}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:42}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:22},{numBlocks:6,dataCodewordsPerBlock:23}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:19,dataCodewordsPerBlock:16},{numBlocks:6,dataCodewordsPerBlock:17}]}]},{infoBits:92361,versionNumber:22,alignmentPatternCenters:[6,26,50,74,98],errorCorrectionLevels:[{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:111},{numBlocks:7,dataCodewordsPerBlock:112}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:46}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:7,dataCodewordsPerBlock:24},{numBlocks:16,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:34,dataCodewordsPerBlock:13}]}]},{infoBits:96236,versionNumber:23,alignmentPatternCenters:[6,30,54,74,102],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:121},{numBlocks:5,dataCodewordsPerBlock:122}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:47},{numBlocks:14,dataCodewordsPerBlock:48}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:11,dataCodewordsPerBlock:24},{numBlocks:14,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:16,dataCodewordsPerBlock:15},{numBlocks:14,dataCodewordsPerBlock:16}]}]},{infoBits:102084,versionNumber:24,alignmentPatternCenters:[6,28,54,80,106],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:6,dataCodewordsPerBlock:117},{numBlocks:4,dataCodewordsPerBlock:118}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:6,dataCodewordsPerBlock:45},{numBlocks:14,dataCodewordsPerBlock:46}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:11,dataCodewordsPerBlock:24},{numBlocks:16,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:30,dataCodewordsPerBlock:16},{numBlocks:2,dataCodewordsPerBlock:17}]}]},{infoBits:102881,versionNumber:25,alignmentPatternCenters:[6,32,58,84,110],errorCorrectionLevels:[{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:8,dataCodewordsPerBlock:106},{numBlocks:4,dataCodewordsPerBlock:107}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:8,dataCodewordsPerBlock:47},{numBlocks:13,dataCodewordsPerBlock:48}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:7,dataCodewordsPerBlock:24},{numBlocks:22,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:22,dataCodewordsPerBlock:15},{numBlocks:13,dataCodewordsPerBlock:16}]}]},{infoBits:110507,versionNumber:26,alignmentPatternCenters:[6,30,58,86,114],errorCorrectionLevels:[{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:10,dataCodewordsPerBlock:114},{numBlocks:2,dataCodewordsPerBlock:115}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:19,dataCodewordsPerBlock:46},{numBlocks:4,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:28,dataCodewordsPerBlock:22},{numBlocks:6,dataCodewordsPerBlock:23}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:33,dataCodewordsPerBlock:16},{numBlocks:4,dataCodewordsPerBlock:17}]}]},{infoBits:110734,versionNumber:27,alignmentPatternCenters:[6,34,62,90,118],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:8,dataCodewordsPerBlock:122},{numBlocks:4,dataCodewordsPerBlock:123}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:22,dataCodewordsPerBlock:45},{numBlocks:3,dataCodewordsPerBlock:46}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:8,dataCodewordsPerBlock:23},{numBlocks:26,dataCodewordsPerBlock:24}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:12,dataCodewordsPerBlock:15},{numBlocks:28,dataCodewordsPerBlock:16}]}]},{infoBits:117786,versionNumber:28,alignmentPatternCenters:[6,26,50,74,98,122],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:117},{numBlocks:10,dataCodewordsPerBlock:118}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:45},{numBlocks:23,dataCodewordsPerBlock:46}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:24},{numBlocks:31,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:11,dataCodewordsPerBlock:15},{numBlocks:31,dataCodewordsPerBlock:16}]}]},{infoBits:119615,versionNumber:29,alignmentPatternCenters:[6,30,54,78,102,126],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:7,dataCodewordsPerBlock:116},{numBlocks:7,dataCodewordsPerBlock:117}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:21,dataCodewordsPerBlock:45},{numBlocks:7,dataCodewordsPerBlock:46}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:23},{numBlocks:37,dataCodewordsPerBlock:24}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:19,dataCodewordsPerBlock:15},{numBlocks:26,dataCodewordsPerBlock:16}]}]},{infoBits:126325,versionNumber:30,alignmentPatternCenters:[6,26,52,78,104,130],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:5,dataCodewordsPerBlock:115},{numBlocks:10,dataCodewordsPerBlock:116}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:19,dataCodewordsPerBlock:47},{numBlocks:10,dataCodewordsPerBlock:48}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:15,dataCodewordsPerBlock:24},{numBlocks:25,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:23,dataCodewordsPerBlock:15},{numBlocks:25,dataCodewordsPerBlock:16}]}]},{infoBits:127568,versionNumber:31,alignmentPatternCenters:[6,30,56,82,108,134],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:13,dataCodewordsPerBlock:115},{numBlocks:3,dataCodewordsPerBlock:116}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:46},{numBlocks:29,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:42,dataCodewordsPerBlock:24},{numBlocks:1,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:23,dataCodewordsPerBlock:15},{numBlocks:28,dataCodewordsPerBlock:16}]}]},{infoBits:133589,versionNumber:32,alignmentPatternCenters:[6,34,60,86,112,138],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:115}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:10,dataCodewordsPerBlock:46},{numBlocks:23,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:10,dataCodewordsPerBlock:24},{numBlocks:35,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:19,dataCodewordsPerBlock:15},{numBlocks:35,dataCodewordsPerBlock:16}]}]},{infoBits:136944,versionNumber:33,alignmentPatternCenters:[6,30,58,86,114,142],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:115},{numBlocks:1,dataCodewordsPerBlock:116}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:14,dataCodewordsPerBlock:46},{numBlocks:21,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:29,dataCodewordsPerBlock:24},{numBlocks:19,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:11,dataCodewordsPerBlock:15},{numBlocks:46,dataCodewordsPerBlock:16}]}]},{infoBits:141498,versionNumber:34,alignmentPatternCenters:[6,34,62,90,118,146],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:13,dataCodewordsPerBlock:115},{numBlocks:6,dataCodewordsPerBlock:116}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:14,dataCodewordsPerBlock:46},{numBlocks:23,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:44,dataCodewordsPerBlock:24},{numBlocks:7,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:59,dataCodewordsPerBlock:16},{numBlocks:1,dataCodewordsPerBlock:17}]}]},{infoBits:145311,versionNumber:35,alignmentPatternCenters:[6,30,54,78,102,126,150],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:12,dataCodewordsPerBlock:121},{numBlocks:7,dataCodewordsPerBlock:122}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:12,dataCodewordsPerBlock:47},{numBlocks:26,dataCodewordsPerBlock:48}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:39,dataCodewordsPerBlock:24},{numBlocks:14,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:22,dataCodewordsPerBlock:15},{numBlocks:41,dataCodewordsPerBlock:16}]}]},{infoBits:150283,versionNumber:36,alignmentPatternCenters:[6,24,50,76,102,128,154],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:6,dataCodewordsPerBlock:121},{numBlocks:14,dataCodewordsPerBlock:122}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:6,dataCodewordsPerBlock:47},{numBlocks:34,dataCodewordsPerBlock:48}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:46,dataCodewordsPerBlock:24},{numBlocks:10,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:15},{numBlocks:64,dataCodewordsPerBlock:16}]}]},{infoBits:152622,versionNumber:37,alignmentPatternCenters:[6,28,54,80,106,132,158],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:122},{numBlocks:4,dataCodewordsPerBlock:123}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:29,dataCodewordsPerBlock:46},{numBlocks:14,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:49,dataCodewordsPerBlock:24},{numBlocks:10,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:24,dataCodewordsPerBlock:15},{numBlocks:46,dataCodewordsPerBlock:16}]}]},{infoBits:158308,versionNumber:38,alignmentPatternCenters:[6,32,58,84,110,136,162],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:122},{numBlocks:18,dataCodewordsPerBlock:123}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:13,dataCodewordsPerBlock:46},{numBlocks:32,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:48,dataCodewordsPerBlock:24},{numBlocks:14,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:42,dataCodewordsPerBlock:15},{numBlocks:32,dataCodewordsPerBlock:16}]}]},{infoBits:161089,versionNumber:39,alignmentPatternCenters:[6,26,54,82,110,138,166],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:20,dataCodewordsPerBlock:117},{numBlocks:4,dataCodewordsPerBlock:118}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:40,dataCodewordsPerBlock:47},{numBlocks:7,dataCodewordsPerBlock:48}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:43,dataCodewordsPerBlock:24},{numBlocks:22,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:10,dataCodewordsPerBlock:15},{numBlocks:67,dataCodewordsPerBlock:16}]}]},{infoBits:167017,versionNumber:40,alignmentPatternCenters:[6,30,58,86,114,142,170],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:19,dataCodewordsPerBlock:118},{numBlocks:6,dataCodewordsPerBlock:119}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:18,dataCodewordsPerBlock:47},{numBlocks:31,dataCodewordsPerBlock:48}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:34,dataCodewordsPerBlock:24},{numBlocks:34,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:20,dataCodewordsPerBlock:15},{numBlocks:61,dataCodewordsPerBlock:16}]}]}];function y(o,e){let r=o^e,t=0;for(;r;)t++,r&=r-1;return t}function v(o,e){return e<<1|o}const p=[{bits:21522,formatInfo:{errorCorrectionLevel:1,dataMask:0}},{bits:20773,formatInfo:{errorCorrectionLevel:1,dataMask:1}},{bits:24188,formatInfo:{errorCorrectionLevel:1,dataMask:2}},{bits:23371,formatInfo:{errorCorrectionLevel:1,dataMask:3}},{bits:17913,formatInfo:{errorCorrectionLevel:1,dataMask:4}},{bits:16590,formatInfo:{errorCorrectionLevel:1,dataMask:5}},{bits:20375,formatInfo:{errorCorrectionLevel:1,dataMask:6}},{bits:19104,formatInfo:{errorCorrectionLevel:1,dataMask:7}},{bits:30660,formatInfo:{errorCorrectionLevel:0,dataMask:0}},{bits:29427,formatInfo:{errorCorrectionLevel:0,dataMask:1}},{bits:32170,formatInfo:{errorCorrectionLevel:0,dataMask:2}},{bits:30877,formatInfo:{errorCorrectionLevel:0,dataMask:3}},{bits:26159,formatInfo:{errorCorrectionLevel:0,dataMask:4}},{bits:25368,formatInfo:{errorCorrectionLevel:0,dataMask:5}},{bits:27713,formatInfo:{errorCorrectionLevel:0,dataMask:6}},{bits:26998,formatInfo:{errorCorrectionLevel:0,dataMask:7}},{bits:5769,formatInfo:{errorCorrectionLevel:3,dataMask:0}},{bits:5054,formatInfo:{errorCorrectionLevel:3,dataMask:1}},{bits:7399,formatInfo:{errorCorrectionLevel:3,dataMask:2}},{bits:6608,formatInfo:{errorCorrectionLevel:3,dataMask:3}},{bits:1890,formatInfo:{errorCorrectionLevel:3,dataMask:4}},{bits:597,formatInfo:{errorCorrectionLevel:3,dataMask:5}},{bits:3340,formatInfo:{errorCorrectionLevel:3,dataMask:6}},{bits:2107,formatInfo:{errorCorrectionLevel:3,dataMask:7}},{bits:13663,formatInfo:{errorCorrectionLevel:2,dataMask:0}},{bits:12392,formatInfo:{errorCorrectionLevel:2,dataMask:1}},{bits:16177,formatInfo:{errorCorrectionLevel:2,dataMask:2}},{bits:14854,formatInfo:{errorCorrectionLevel:2,dataMask:3}},{bits:9396,formatInfo:{errorCorrectionLevel:2,dataMask:4}},{bits:8579,formatInfo:{errorCorrectionLevel:2,dataMask:5}},{bits:11994,formatInfo:{errorCorrectionLevel:2,dataMask:6}},{bits:11245,formatInfo:{errorCorrectionLevel:2,dataMask:7}}],x=[o=>(o.y+o.x)%2==0,o=>o.y%2==0,o=>o.x%3==0,o=>(o.y+o.x)%3==0,o=>(Math.floor(o.y/2)+Math.floor(o.x/3))%2==0,o=>o.x*o.y%2+o.x*o.y%3==0,o=>(o.y*o.x%2+o.y*o.x%3)%2==0,o=>((o.y+o.x)%2+o.y*o.x%3)%2==0];function M(o,e,r){const t=x[r.dataMask],c=o.height,l=function(o){const e=17+4*o.versionNumber,r=s.createEmpty(e,e);r.setRegion(0,0,9,9,!0),r.setRegion(e-8,0,8,9,!0),r.setRegion(0,e-8,9,8,!0);for(const t of o.alignmentPatternCenters)for(const s of o.alignmentPatternCenters)6===t&&6===s||6===t&&s===e-7||t===e-7&&6===s||r.setRegion(t-2,s-2,5,5,!0);return r.setRegion(6,9,1,e-17,!0),r.setRegion(9,6,e-17,1,!0),o.versionNumber>6&&(r.setRegion(e-11,0,3,6,!0),r.setRegion(0,e-11,6,3,!0)),r}(e),d=[];let n=0,a=0,B=!0;for(let e=c-1;e>0;e-=2){6===e&&e--;for(let r=0;r<c;r++){const s=B?c-1-r:r;for(let r=0;r<2;r++){const c=e-r;if(!l.get(c,s)){a++;let e=o.get(c,s);t({y:s,x:c})&&(e=!e),n=v(e,n),8===a&&(d.push(n),a=0,n=0)}}}B=!B}return d}function L(o){const e=function(o){const e=o.height,r=Math.floor((e-17)/4);if(r<=6)return g[r-1];let t=0;for(let r=5;r>=0;r--)for(let s=e-9;s>=e-11;s--)t=v(o.get(s,r),t);let s=0;for(let r=5;r>=0;r--)for(let t=e-9;t>=e-11;t--)s=v(o.get(r,t),s);let c,l=1/0;for(const o of g){if(o.infoBits===t||o.infoBits===s)return o;let e=y(t,o.infoBits);e<l&&(c=o,l=e),(e=y(s,o.infoBits))<l&&(c=o,l=e)}return l<=3?c:void 0}(o);if(!e)return null;const r=function(o){let e=0;for(let r=0;r<=8;r++)6!==r&&(e=v(o.get(r,8),e));for(let r=7;r>=0;r--)6!==r&&(e=v(o.get(8,r),e));const r=o.height;let t=0;for(let e=r-1;e>=r-7;e--)t=v(o.get(8,e),t);for(let e=r-8;e<r;e++)t=v(o.get(e,8),t);let s=1/0,c=null;for(const{bits:o,formatInfo:r}of p){if(o===e||o===t)return r;let l=y(e,o);l<s&&(c=r,s=l),e!==t&&(l=y(t,o))<s&&(c=r,s=l)}return s<=3?c:null}(o);if(!r)return null;const t=function(o,e,r){const t=e.errorCorrectionLevels[r],s=[];let c=0;if(t.ecBlocks.forEach(o=>{for(let e=0;e<o.numBlocks;e++)s.push({numDataCodewords:o.dataCodewordsPerBlock,codewords:[]}),c+=o.dataCodewordsPerBlock+t.ecCodewordsPerBlock}),o.length<c)return null;o=o.slice(0,c);const l=t.ecBlocks[0].dataCodewordsPerBlock;for(let e=0;e<l;e++)for(const e of s)e.codewords.push(o.shift());if(t.ecBlocks.length>1){const e=t.ecBlocks[0].numBlocks,r=t.ecBlocks[1].numBlocks;for(let t=0;t<r;t++)s[e+t].codewords.push(o.shift())}for(;o.length>0;)for(const e of s)e.codewords.push(o.shift());return s}(M(o,e,r),e,r.errorCorrectionLevel);if(!t)return null;const s=t.reduce((o,e)=>o+e.numDataCodewords,0),c=new Uint8ClampedArray(s);let l=0;for(const o of t){const e=b(o.codewords,o.codewords.length-o.numDataCodewords);if(!e)return null;for(let r=0;r<o.numDataCodewords;r++)c[l++]=e[r]}try{return function(o,e){const r=new a(o),t=e<=9?0:e<=26?1:2,s={text:"",bytes:[],chunks:[]};for(;r.available()>=4;){const o=r.readBits(4);if(o===k.Terminator)return s;if(o===k.ECI)0===r.readBits(1)?s.chunks.push({type:B.ECI,assignmentNumber:r.readBits(7)}):0===r.readBits(1)?s.chunks.push({type:B.ECI,assignmentNumber:r.readBits(14)}):0===r.readBits(1)?s.chunks.push({type:B.ECI,assignmentNumber:r.readBits(21)}):s.chunks.push({type:B.ECI,assignmentNumber:-1});else if(o===k.Numeric){const o=i(r,t);s.text+=o.text,s.bytes.push(...o.bytes),s.chunks.push({type:B.Numeric,text:o.text})}else if(o===k.Alphanumeric){const o=C(r,t);s.text+=o.text,s.bytes.push(...o.bytes),s.chunks.push({type:B.Alphanumeric,text:o.text})}else if(o===k.Byte){const o=m(r,t);s.text+=o.text,s.bytes.push(...o.bytes),s.chunks.push({type:B.Byte,bytes:o.bytes,text:o.text})}else if(o===k.Kanji){const o=w(r,t);s.text+=o.text,s.bytes.push(...o.bytes),s.chunks.push({type:B.Kanji,bytes:o.bytes,text:o.text})}}if(0===r.available()||0===r.readBits(r.available()))return s}(c,e.versionNumber)}catch(o){return null}}function I(o,e,r,t){const s=o.x-e.x+r.x-t.x,c=o.y-e.y+r.y-t.y;if(0===s&&0===c)return{a11:e.x-o.x,a12:e.y-o.y,a13:0,a21:r.x-e.x,a22:r.y-e.y,a23:0,a31:o.x,a32:o.y,a33:1};{const l=e.x-r.x,d=t.x-r.x,n=e.y-r.y,a=t.y-r.y,B=l*a-d*n,k=(s*a-d*c)/B,i=(l*c-s*n)/B;return{a11:e.x-o.x+k*e.x,a12:e.y-o.y+k*e.y,a13:k,a21:t.x-o.x+i*t.x,a22:t.y-o.y+i*t.y,a23:i,a31:o.x,a32:o.y,a33:1}}}function N(o,e){const r=function(o,e,r,t){const s=I(o,e,r,t);return{a11:s.a22*s.a33-s.a23*s.a32,a12:s.a13*s.a32-s.a12*s.a33,a13:s.a12*s.a23-s.a13*s.a22,a21:s.a23*s.a31-s.a21*s.a33,a22:s.a11*s.a33-s.a13*s.a31,a23:s.a13*s.a21-s.a11*s.a23,a31:s.a21*s.a32-s.a22*s.a31,a32:s.a12*s.a31-s.a11*s.a32,a33:s.a11*s.a22-s.a12*s.a21}}({x:3.5,y:3.5},{x:e.dimension-3.5,y:3.5},{x:e.dimension-6.5,y:e.dimension-6.5},{x:3.5,y:e.dimension-3.5}),t=I(e.topLeft,e.topRight,e.alignmentPattern,e.bottomLeft),c=(d=r,{a11:(l=t).a11*d.a11+l.a21*d.a12+l.a31*d.a13,a12:l.a12*d.a11+l.a22*d.a12+l.a32*d.a13,a13:l.a13*d.a11+l.a23*d.a12+l.a33*d.a13,a21:l.a11*d.a21+l.a21*d.a22+l.a31*d.a23,a22:l.a12*d.a21+l.a22*d.a22+l.a32*d.a23,a23:l.a13*d.a21+l.a23*d.a22+l.a33*d.a23,a31:l.a11*d.a31+l.a21*d.a32+l.a31*d.a33,a32:l.a12*d.a31+l.a22*d.a32+l.a32*d.a33,a33:l.a13*d.a31+l.a23*d.a32+l.a33*d.a33});var l,d;const n=s.createEmpty(e.dimension,e.dimension),a=(o,e)=>{const r=c.a13*o+c.a23*e+c.a33;return{x:(c.a11*o+c.a21*e+c.a31)/r,y:(c.a12*o+c.a22*e+c.a32)/r}};for(let r=0;r<e.dimension;r++)for(let t=0;t<e.dimension;t++){const e=a(t+.5,r+.5);n.set(t,r,o.get(Math.floor(e.x),Math.floor(e.y)))}return{matrix:n,mappingFunction:a}}const A=4,z=.5,X=1.5,E=(o,e)=>Math.sqrt(Math.pow(e.x-o.x,2)+Math.pow(e.y-o.y,2));function S(o){return o.reduce((o,e)=>o+e)}function O(o,e,r,t){const s=[{x:Math.floor(o.x),y:Math.floor(o.y)}],c=Math.abs(e.y-o.y)>Math.abs(e.x-o.x);let l,d,n,a;c?(l=Math.floor(o.y),d=Math.floor(o.x),n=Math.floor(e.y),a=Math.floor(e.x)):(l=Math.floor(o.x),d=Math.floor(o.y),n=Math.floor(e.x),a=Math.floor(e.y));const B=Math.abs(n-l),k=Math.abs(a-d);let i=Math.floor(-B/2);const u=l<n?1:-1,C=d<a?1:-1;let m=!0;for(let o=l,e=d;o!==n+u;o+=u){const l=c?e:o,d=c?o:e;if(r.get(l,d)!==m&&(m=!m,s.push({x:l,y:d}),s.length===t+1))break;if((i+=k)>0){if(e===a)break;e+=C,i-=B}}const w=[];for(let o=0;o<t;o++)s[o]&&s[o+1]?w.push(E(s[o],s[o+1])):w.push(0);return w}function R(o,e,r,t){const s=e.y-o.y,c=e.x-o.x,l=O(o,e,r,Math.ceil(t/2)),d=O(o,{x:o.x-c,y:o.y-s},r,Math.ceil(t/2)),n=l.shift()+d.shift()-1;return d.concat(n).concat(...l)}function U(o,e){const r=S(o)/S(e);let t=0;return e.forEach((e,s)=>{t+=Math.pow(o[s]-e*r,2)}),{averageSize:r,error:t}}function T(o,e,r){try{const t=R(o,{x:-1,y:o.y},r,e.length),s=R(o,{x:o.x,y:-1},r,e.length),c=R(o,{x:Math.max(0,o.x-o.y)-1,y:Math.max(0,o.y-o.x)-1},r,e.length),l=R(o,{x:Math.min(r.width,o.x+o.y)+1,y:Math.min(r.height,o.y+o.x)+1},r,e.length),d=U(t,e),n=U(s,e),a=U(c,e),B=U(l,e),k=Math.sqrt(d.error*d.error+n.error*n.error+a.error*a.error+B.error*B.error),i=(d.averageSize+n.averageSize+a.averageSize+B.averageSize)/4;return k+(Math.pow(d.averageSize-i,2)+Math.pow(n.averageSize-i,2)+Math.pow(a.averageSize-i,2)+Math.pow(B.averageSize-i,2))/i}catch(o){return 1/0}}function F(o){const e=[];let r=[];const t=[];let s=[];for(let c=0;c<=o.height;c++){let l=0,d=!1,n=[0,0,0,0,0];for(let e=-1;e<=o.width;e++){const t=o.get(e,c);if(t===d)l++;else{n=[n[1],n[2],n[3],n[4],l],l=1,d=t;const o=S(n)/7,a=Math.abs(n[0]-o)<o&&Math.abs(n[1]-o)<o&&Math.abs(n[2]-3*o)<3*o&&Math.abs(n[3]-o)<o&&Math.abs(n[4]-o)<o&&!t,B=S(n.slice(-3))/3,k=Math.abs(n[2]-B)<B&&Math.abs(n[3]-B)<B&&Math.abs(n[4]-B)<B&&t;if(a){const o=e-n[3]-n[4],t=o-n[2],s={startX:t,endX:o,y:c},l=r.filter(e=>t>=e.bottom.startX&&t<=e.bottom.endX||o>=e.bottom.startX&&t<=e.bottom.endX||t<=e.bottom.startX&&o>=e.bottom.endX&&n[2]/(e.bottom.endX-e.bottom.startX)<X&&n[2]/(e.bottom.endX-e.bottom.startX)>z);l.length>0?l[0].bottom=s:r.push({top:s,bottom:s})}if(k){const o=e-n[4],r=o-n[3],t={startX:r,y:c,endX:o},l=s.filter(e=>r>=e.bottom.startX&&r<=e.bottom.endX||o>=e.bottom.startX&&r<=e.bottom.endX||r<=e.bottom.startX&&o>=e.bottom.endX&&n[2]/(e.bottom.endX-e.bottom.startX)<X&&n[2]/(e.bottom.endX-e.bottom.startX)>z);l.length>0?l[0].bottom=t:s.push({top:t,bottom:t})}}}e.push(...r.filter(o=>o.bottom.y!==c&&o.bottom.y-o.top.y>=2)),r=r.filter(o=>o.bottom.y===c),t.push(...s.filter(o=>o.bottom.y!==c)),s=s.filter(o=>o.bottom.y===c)}e.push(...r.filter(o=>o.bottom.y-o.top.y>=2)),t.push(...s);const c=e.filter(o=>o.bottom.y-o.top.y>=2).map(e=>{const r=(e.top.startX+e.top.endX+e.bottom.startX+e.bottom.endX)/4,t=(e.top.y+e.bottom.y+1)/2;if(!o.get(Math.round(r),Math.round(t)))return;const s=[e.top.endX-e.top.startX,e.bottom.endX-e.bottom.startX,e.bottom.y-e.top.y+1],c=S(s)/s.length;return{score:T({x:Math.round(r),y:Math.round(t)},[1,1,3,1,1],o),x:r,y:t,size:c}}).filter(o=>!!o).sort((o,e)=>o.score-e.score).map((o,e,r)=>{if(e>A)return null;const t=r.filter((o,r)=>e!==r).map(e=>({x:e.x,y:e.y,score:e.score+Math.pow(e.size-o.size,2)/o.size,size:e.size})).sort((o,e)=>o.score-e.score);if(t.length<2)return null;const s=o.score+t[0].score+t[1].score;return{points:[o].concat(t.slice(0,2)),score:s}}).filter(o=>!!o).sort((o,e)=>o.score-e.score);if(0===c.length)return null;const{topRight:l,topLeft:d,bottomLeft:n}=function(o,e,r){const t=E(o,e),s=E(e,r),c=E(o,r);let l,d,n;return[l,d,n]=s>=t&&s>=c?[e,o,r]:c>=s&&c>=t?[o,e,r]:[o,r,e],(n.x-d.x)*(l.y-d.y)-(n.y-d.y)*(l.x-d.x)<0&&([l,n]=[n,l]),{bottomLeft:l,topLeft:d,topRight:n}}(c[0].points[0],c[0].points[1],c[0].points[2]);let a,B;try{({dimension:a,moduleSize:B}=function(o,e,r,t){const s=(S(R(o,r,t,5))/7+S(R(o,e,t,5))/7+S(R(r,o,t,5))/7+S(R(e,o,t,5))/7)/4;if(s<1)throw new Error("Invalid module size");const c=Math.round(E(o,e)/s),l=Math.round(E(o,r)/s);let d=Math.floor((c+l)/2)+7;switch(d%4){case 0:d++;break;case 2:d--}return{dimension:d,moduleSize:s}}(d,l,n,o))}catch(o){return null}const k=l.x-d.x+n.x,i=l.y-d.y+n.y,u=(E(d,n)+E(d,l))/2/B,C=1-3/u,m={x:d.x+C*(k-d.x),y:d.y+C*(i-d.y)},w=t.map(e=>{const r=(e.top.startX+e.top.endX+e.bottom.startX+e.bottom.endX)/4,t=(e.top.y+e.bottom.y+1)/2;if(!o.get(Math.floor(r),Math.floor(t)))return;const s=[e.top.endX-e.top.startX,e.bottom.endX-e.bottom.startX,e.bottom.y-e.top.y+1];S(s);return{x:r,y:t,score:T({x:Math.floor(r),y:Math.floor(t)},[1,1,1],o)+E({x:r,y:t},m)}}).filter(o=>!!o).sort((o,e)=>o.score-e.score),P=u>=15&&w.length?w[0]:m;return{alignmentPattern:{x:P.x,y:P.y},bottomLeft:{x:n.x,y:n.y},dimension:a,topLeft:{x:d.x,y:d.y},topRight:{x:l.x,y:l.y}}}function j(o){const e=F(o);if(!e)return null;const r=N(o,e),t=function(o){if(null==o)return null;const e=L(o);if(e)return e;for(let e=0;e<o.width;e++)for(let r=e+1;r<o.height;r++)o.get(e,r)!==o.get(r,e)&&(o.set(e,r,!o.get(e,r)),o.set(r,e,!o.get(r,e)));return L(o)}(r.matrix);return t?{binaryData:t.bytes,data:t.text,chunks:t.chunks,location:{topRightCorner:r.mappingFunction(e.dimension,0),topLeftCorner:r.mappingFunction(0,0),bottomRightCorner:r.mappingFunction(e.dimension,e.dimension),bottomLeftCorner:r.mappingFunction(0,e.dimension),topRightFinderPattern:e.topRight,topLeftFinderPattern:e.topLeft,bottomLeftFinderPattern:e.bottomLeft,bottomRightAlignmentPattern:e.alignmentPattern}}:null}const Z={inversionAttempts:"attemptBoth",greyScaleWeights:{red:.2126,green:.7152,blue:.0722,useIntegerApproximation:!1},canOverwriteImage:!0};function D(o,e){Object.keys(e).forEach(r=>{o[r]=e[r]})}function K(o,e,r,t={}){const a=Object.create(null);D(a,Z),D(a,t);const B="attemptBoth"===a.inversionAttempts||"invertFirst"===a.inversionAttempts,k="onlyInvert"===a.inversionAttempts||"invertFirst"===a.inversionAttempts,{binarized:i,inverted:u}=function(o,e,r,t,a,B){const k=e*r;if(o.length!==4*k)throw new Error("Malformed data passed to binarizer.");let i,u=0;B&&(i=new Uint8ClampedArray(o.buffer,u,k),u+=k);const C=new n(e,r,i);if(a.useIntegerApproximation)for(let t=0;t<r;t++)for(let r=0;r<e;r++){const s=4*(t*e+r),c=o[s],l=o[s+1],d=o[s+2];C.set(r,t,a.red*c+a.green*l+a.blue*d+128>>8)}else for(let t=0;t<r;t++)for(let r=0;r<e;r++){const s=4*(t*e+r),c=o[s],l=o[s+1],d=o[s+2];C.set(r,t,a.red*c+a.green*l+a.blue*d)}const m=Math.ceil(e/c),w=Math.ceil(r/c),P=m*w;let f;B&&(f=new Uint8ClampedArray(o.buffer,u,P),u+=P);const h=new n(m,w,f);for(let o=0;o<w;o++)for(let e=0;e<m;e++){let r=1/0,t=0;for(let s=0;s<c;s++)for(let l=0;l<c;l++){const d=C.get(e*c+l,o*c+s);r=Math.min(r,d),t=Math.max(t,d)}let s=(r+t)/2;const d=1.1;if(s=Math.min(255,s*d),t-r<=l&&(s=r/2,o>0&&e>0)){const t=(h.get(e,o-1)+2*h.get(e-1,o)+h.get(e-1,o-1))/4;r<t&&(s=t)}h.set(e,o,s)}let b;if(B){const r=new Uint8ClampedArray(o.buffer,u,k);u+=k,b=new s(r,e)}else b=s.createEmpty(e,r);let g=null;if(t)if(B){const r=new Uint8ClampedArray(o.buffer,u,k);g=new s(r,e)}else g=s.createEmpty(e,r);for(let o=0;o<w;o++)for(let e=0;e<m;e++){const r=d(e,2,m-3),s=d(o,2,w-3);let l=0;for(let o=-2;o<=2;o++)for(let e=-2;e<=2;e++)l+=h.get(r+o,s+e);const n=l/25;for(let r=0;r<c;r++)for(let s=0;s<c;s++){const l=e*c+r,d=o*c+s,a=C.get(l,d);b.set(l,d,a<=n),t&&g.set(l,d,!(a<=n))}}return t?{binarized:b,inverted:g}:{binarized:b}}(o,e,r,B,a.greyScaleWeights,a.canOverwriteImage);let C=j(k?u:i);return C||"attemptBoth"!==a.inversionAttempts&&"invertFirst"!==a.inversionAttempts||(C=j(k?i:u)),C}K.default=K,self.onmessage=function(o){var e,r,s,c,l=o.data,d=(e=l[0],r=l[1],s=l[2],c=l[3],t(K(e,r,s,{inversionAttempts:function(o){switch(o){case 0:return"attemptBoth";case 1:return"dontInvert";case 2:return"onlyInvert";case 3:return"invertFirst"}}(c),canOverwriteImage:!0})));return postMessage(d),0}}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
