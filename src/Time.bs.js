// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Caml_js_exceptions = require("bs-platform/lib/js/caml_js_exceptions.js");

function serializeTime(date) {
  return date.getTime().toString();
}

function deserializeTime(str) {
  var date = new Date();
  date.setTime(Number(str));
  return date;
}

function maybeDeserializeTime(str) {
  var t = Number(str);
  if (isFinite(t)) {
    var date = new Date();
    date.setTime(t);
    var val;
    try {
      val = date.toISOString();
    }
    catch (raw_err){
      var err = Caml_js_exceptions.internalToOCamlException(raw_err);
      console.error("Could not make valid date from:", t, err);
      return ;
    }
    return Caml_option.some(date);
  }
  
}

function getTimestamp(param) {
  var date = new Date();
  return date.getTime().toString();
}

function getTimestampAndLocaleString(param) {
  var date = new Date();
  return /* tuple */[
          date.getTime().toString(),
          date.toLocaleString()
        ];
}

exports.serializeTime = serializeTime;
exports.deserializeTime = deserializeTime;
exports.maybeDeserializeTime = maybeDeserializeTime;
exports.getTimestamp = getTimestamp;
exports.getTimestampAndLocaleString = getTimestampAndLocaleString;
/* No side effect */
