// Generated by BUCKLESCRIPT VERSION 5.0.2, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Instascan = require("instascan");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Js_null_undefined = require("bs-platform/lib/js/js_null_undefined.js");
var Instascan$QueerLoop = require("./Instascan.bs.js");
var QrCodeGen$QueerLoop = require("./QrCodeGen.bs.js");

function maybeSetCode(maybeEl, text) {
  Belt_Option.map(maybeEl, (function (el) {
          return QrCodeGen$QueerLoop.setSvg(qrcodegen.QrCode.encodeText(text, qrcodegen.QrCode.Ecc.MEDIUM), el);
        }));
  return /* () */0;
}

function init(param) {
  var videoEl = document.querySelector("#preview");
  var qrcodeEl = document.querySelector("#code");
  var qrcodeEl$1 = (qrcodeEl == null) ? undefined : Caml_option.some(qrcodeEl);
  maybeSetCode(qrcodeEl$1, "hello");
  var instascanOpts = {
    video: Js_null_undefined.fromOption((videoEl == null) ? undefined : Caml_option.some(videoEl))
  };
  var scanner = new Instascan.Scanner(instascanOpts);
  var response = function (input) {
    return maybeSetCode(qrcodeEl$1, input + "1");
  };
  scanner.addListener("scan", response);
  Curry._1(Instascan$QueerLoop.Camera[/* getCameras */0], /* () */0).then((function (cameras) {
            if (cameras.length !== 0) {
              scanner.start(Caml_array.caml_array_get(cameras, 0));
            } else {
              console.error("No cameras found!");
            }
            return Promise.resolve(/* () */0);
          })).catch((function (err) {
          console.error("getCameras failed", err);
          return Promise.resolve(/* () */0);
        }));
  return /* () */0;
}

window.addEventListener("load", (function (param) {
        return init(/* () */0);
      }));

exports.maybeSetCode = maybeSetCode;
exports.init = init;
/*  Not a pure module */
