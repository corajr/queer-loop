// Generated by BUCKLESCRIPT VERSION 5.0.2, PLEASE EDIT WITH CARE

import * as $$Array from "../node_modules/bs-platform/lib/es6/array.js";
import * as Belt_Option from "../node_modules/bs-platform/lib/es6/belt_Option.js";
import * as Caml_option from "../node_modules/bs-platform/lib/es6/caml_option.js";
import * as Util$QueerLoop from "./Util.bs.js";

function setAnimacy(svg, hash) {
  Util$QueerLoop.withQuerySelectorAllFrom(".animate", svg, (function (param) {
          return $$Array.map((function (animated) {
                        animated.setAttribute("class", "code previous");
                        return /* () */0;
                      }), param);
        }));
  Util$QueerLoop.withQuerySelectorAllFrom(".previous", svg, (function (param) {
          return $$Array.map((function (animated) {
                        animated.setAttribute("class", "code");
                        return /* () */0;
                      }), param);
        }));
  Util$QueerLoop.withQuerySelectorAllFrom(".selected", svg, (function (param) {
          return $$Array.map((function (animated) {
                        animated.setAttribute("class", "code");
                        return /* () */0;
                      }), param);
        }));
  return Belt_Option.map(Caml_option.nullable_to_opt(svg.querySelector("#code" + hash)), (function (toAnimate) {
                toAnimate.setAttribute("class", "code animate");
                return /* () */0;
              }));
}

function setSelection(svg, hash) {
  Util$QueerLoop.withQuerySelectorAllFrom(".animate", svg, (function (param) {
          return $$Array.map((function (animated) {
                        animated.setAttribute("class", "code");
                        return /* () */0;
                      }), param);
        }));
  Util$QueerLoop.withQuerySelectorAllFrom(".previous", svg, (function (param) {
          return $$Array.map((function (animated) {
                        animated.setAttribute("class", "code");
                        return /* () */0;
                      }), param);
        }));
  Util$QueerLoop.withQuerySelectorAllFrom(".selected", svg, (function (param) {
          return $$Array.map((function (animated) {
                        animated.setAttribute("class", "code");
                        return /* () */0;
                      }), param);
        }));
  return Belt_Option.map(Caml_option.nullable_to_opt(svg.querySelector("#code" + hash)), (function (toAnimate) {
                toAnimate.setAttribute("class", "code selected");
                return /* () */0;
              }));
}

function activateHash(hash) {
  Util$QueerLoop.withQuerySelectorDom("#queer-loop svg", (function (svg) {
          return setSelection(svg, hash);
        }));
  Util$QueerLoop.withQuerySelectorAll(".codeLink.active", (function (param) {
          return $$Array.map((function (link) {
                        var linkClasses = link.classList;
                        linkClasses.remove("active");
                        return /* () */0;
                      }), param);
        }));
  Util$QueerLoop.withQuerySelectorAll(".code" + hash, (function (param) {
          return $$Array.map((function (link) {
                        var linkClasses = link.classList;
                        linkClasses.add("active");
                        return /* () */0;
                      }), param);
        }));
  return /* () */0;
}

export {
  setAnimacy ,
  setSelection ,
  activateHash ,
  
}
/* Util-QueerLoop Not a pure module */
