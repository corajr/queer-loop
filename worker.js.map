{"version":3,"file":"worker.js","sources":["node_modules/bs-platform/lib/es6/caml_builtin_exceptions.js","node_modules/bs-platform/lib/es6/caml_array.js","node_modules/bs-platform/lib/es6/curry.js","node_modules/bs-platform/lib/es6/caml_exceptions.js","node_modules/bs-platform/lib/es6/caml_option.js","node_modules/bs-platform/lib/es6/caml_js_exceptions.js","node_modules/bs-platform/lib/es6/array.js","node_modules/jsqr-es6/dist/jsQR.js","src/JsQr.bs.js","src/DecodeWorker.bs.js"],"sourcesContent":["\n\n\nvar out_of_memory = /* tuple */[\n  \"Out_of_memory\",\n  0\n];\n\nvar sys_error = /* tuple */[\n  \"Sys_error\",\n  -1\n];\n\nvar failure = /* tuple */[\n  \"Failure\",\n  -2\n];\n\nvar invalid_argument = /* tuple */[\n  \"Invalid_argument\",\n  -3\n];\n\nvar end_of_file = /* tuple */[\n  \"End_of_file\",\n  -4\n];\n\nvar division_by_zero = /* tuple */[\n  \"Division_by_zero\",\n  -5\n];\n\nvar not_found = /* tuple */[\n  \"Not_found\",\n  -6\n];\n\nvar match_failure = /* tuple */[\n  \"Match_failure\",\n  -7\n];\n\nvar stack_overflow = /* tuple */[\n  \"Stack_overflow\",\n  -8\n];\n\nvar sys_blocked_io = /* tuple */[\n  \"Sys_blocked_io\",\n  -9\n];\n\nvar assert_failure = /* tuple */[\n  \"Assert_failure\",\n  -10\n];\n\nvar undefined_recursive_module = /* tuple */[\n  \"Undefined_recursive_module\",\n  -11\n];\n\nout_of_memory.tag = 248;\n\nsys_error.tag = 248;\n\nfailure.tag = 248;\n\ninvalid_argument.tag = 248;\n\nend_of_file.tag = 248;\n\ndivision_by_zero.tag = 248;\n\nnot_found.tag = 248;\n\nmatch_failure.tag = 248;\n\nstack_overflow.tag = 248;\n\nsys_blocked_io.tag = 248;\n\nassert_failure.tag = 248;\n\nundefined_recursive_module.tag = 248;\n\nexport {\n  out_of_memory ,\n  sys_error ,\n  failure ,\n  invalid_argument ,\n  end_of_file ,\n  division_by_zero ,\n  not_found ,\n  match_failure ,\n  stack_overflow ,\n  sys_blocked_io ,\n  assert_failure ,\n  undefined_recursive_module ,\n  \n}\n/*  Not a pure module */\n","\n\nimport * as Caml_builtin_exceptions from \"./caml_builtin_exceptions.js\";\n\nfunction caml_array_sub(x, offset, len) {\n  var result = new Array(len);\n  var j = 0;\n  var i = offset;\n  while(j < len) {\n    result[j] = x[i];\n    j = j + 1 | 0;\n    i = i + 1 | 0;\n  };\n  return result;\n}\n\nfunction len(_acc, _l) {\n  while(true) {\n    var l = _l;\n    var acc = _acc;\n    if (l) {\n      _l = l[1];\n      _acc = l[0].length + acc | 0;\n      continue ;\n    } else {\n      return acc;\n    }\n  };\n}\n\nfunction fill(arr, _i, _l) {\n  while(true) {\n    var l = _l;\n    var i = _i;\n    if (l) {\n      var x = l[0];\n      var l$1 = x.length;\n      var k = i;\n      var j = 0;\n      while(j < l$1) {\n        arr[k] = x[j];\n        k = k + 1 | 0;\n        j = j + 1 | 0;\n      };\n      _l = l[1];\n      _i = k;\n      continue ;\n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction caml_array_concat(l) {\n  var v = len(0, l);\n  var result = new Array(v);\n  fill(result, 0, l);\n  return result;\n}\n\nfunction caml_array_set(xs, index, newval) {\n  if (index < 0 || index >= xs.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"index out of bounds\"\n        ];\n  } else {\n    xs[index] = newval;\n    return /* () */0;\n  }\n}\n\nfunction caml_array_get(xs, index) {\n  if (index < 0 || index >= xs.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"index out of bounds\"\n        ];\n  } else {\n    return xs[index];\n  }\n}\n\nfunction caml_make_vect(len, init) {\n  var b = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    b[i] = init;\n  }\n  return b;\n}\n\nfunction caml_make_float_vect(len) {\n  var b = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    b[i] = 0;\n  }\n  return b;\n}\n\nfunction caml_array_blit(a1, i1, a2, i2, len) {\n  if (i2 <= i1) {\n    for(var j = 0 ,j_finish = len - 1 | 0; j <= j_finish; ++j){\n      a2[j + i2 | 0] = a1[j + i1 | 0];\n    }\n    return /* () */0;\n  } else {\n    for(var j$1 = len - 1 | 0; j$1 >= 0; --j$1){\n      a2[j$1 + i2 | 0] = a1[j$1 + i1 | 0];\n    }\n    return /* () */0;\n  }\n}\n\nfunction caml_array_dup(prim) {\n  return prim.slice(0);\n}\n\nexport {\n  caml_array_dup ,\n  caml_array_sub ,\n  caml_array_concat ,\n  caml_make_vect ,\n  caml_make_float_vect ,\n  caml_array_blit ,\n  caml_array_get ,\n  caml_array_set ,\n  \n}\n/* No side effect */\n","\n\nimport * as Caml_array from \"./caml_array.js\";\n\nfunction app(_f, _args) {\n  while(true) {\n    var args = _args;\n    var f = _f;\n    var init_arity = f.length;\n    var arity = init_arity === 0 ? 1 : init_arity;\n    var len = args.length;\n    var d = arity - len | 0;\n    if (d === 0) {\n      return f.apply(null, args);\n    } else if (d < 0) {\n      _args = Caml_array.caml_array_sub(args, arity, -d | 0);\n      _f = f.apply(null, Caml_array.caml_array_sub(args, 0, arity));\n      continue ;\n    } else {\n      return (function(f,args){\n      return function (x) {\n        return app(f, args.concat(/* array */[x]));\n      }\n      }(f,args));\n    }\n  };\n}\n\nfunction curry_1(o, a0, arity) {\n  switch (arity) {\n    case 1 : \n        return o(a0);\n    case 2 : \n        return (function (param) {\n            return o(a0, param);\n          });\n    case 3 : \n        return (function (param, param$1) {\n            return o(a0, param, param$1);\n          });\n    case 4 : \n        return (function (param, param$1, param$2) {\n            return o(a0, param, param$1, param$2);\n          });\n    case 5 : \n        return (function (param, param$1, param$2, param$3) {\n            return o(a0, param, param$1, param$2, param$3);\n          });\n    case 6 : \n        return (function (param, param$1, param$2, param$3, param$4) {\n            return o(a0, param, param$1, param$2, param$3, param$4);\n          });\n    case 7 : \n        return (function (param, param$1, param$2, param$3, param$4, param$5) {\n            return o(a0, param, param$1, param$2, param$3, param$4, param$5);\n          });\n    default:\n      return app(o, /* array */[a0]);\n  }\n}\n\nfunction _1(o, a0) {\n  var arity = o.length;\n  if (arity === 1) {\n    return o(a0);\n  } else {\n    return curry_1(o, a0, arity);\n  }\n}\n\nfunction __1(o) {\n  var arity = o.length;\n  if (arity === 1) {\n    return o;\n  } else {\n    return (function (a0) {\n        return _1(o, a0);\n      });\n  }\n}\n\nfunction curry_2(o, a0, a1, arity) {\n  switch (arity) {\n    case 1 : \n        return app(o(a0), /* array */[a1]);\n    case 2 : \n        return o(a0, a1);\n    case 3 : \n        return (function (param) {\n            return o(a0, a1, param);\n          });\n    case 4 : \n        return (function (param, param$1) {\n            return o(a0, a1, param, param$1);\n          });\n    case 5 : \n        return (function (param, param$1, param$2) {\n            return o(a0, a1, param, param$1, param$2);\n          });\n    case 6 : \n        return (function (param, param$1, param$2, param$3) {\n            return o(a0, a1, param, param$1, param$2, param$3);\n          });\n    case 7 : \n        return (function (param, param$1, param$2, param$3, param$4) {\n            return o(a0, a1, param, param$1, param$2, param$3, param$4);\n          });\n    default:\n      return app(o, /* array */[\n                  a0,\n                  a1\n                ]);\n  }\n}\n\nfunction _2(o, a0, a1) {\n  var arity = o.length;\n  if (arity === 2) {\n    return o(a0, a1);\n  } else {\n    return curry_2(o, a0, a1, arity);\n  }\n}\n\nfunction __2(o) {\n  var arity = o.length;\n  if (arity === 2) {\n    return o;\n  } else {\n    return (function (a0, a1) {\n        return _2(o, a0, a1);\n      });\n  }\n}\n\nfunction curry_3(o, a0, a1, a2, arity) {\n  switch (arity) {\n    case 1 : \n        return app(o(a0), /* array */[\n                    a1,\n                    a2\n                  ]);\n    case 2 : \n        return app(o(a0, a1), /* array */[a2]);\n    case 3 : \n        return o(a0, a1, a2);\n    case 4 : \n        return (function (param) {\n            return o(a0, a1, a2, param);\n          });\n    case 5 : \n        return (function (param, param$1) {\n            return o(a0, a1, a2, param, param$1);\n          });\n    case 6 : \n        return (function (param, param$1, param$2) {\n            return o(a0, a1, a2, param, param$1, param$2);\n          });\n    case 7 : \n        return (function (param, param$1, param$2, param$3) {\n            return o(a0, a1, a2, param, param$1, param$2, param$3);\n          });\n    default:\n      return app(o, /* array */[\n                  a0,\n                  a1,\n                  a2\n                ]);\n  }\n}\n\nfunction _3(o, a0, a1, a2) {\n  var arity = o.length;\n  if (arity === 3) {\n    return o(a0, a1, a2);\n  } else {\n    return curry_3(o, a0, a1, a2, arity);\n  }\n}\n\nfunction __3(o) {\n  var arity = o.length;\n  if (arity === 3) {\n    return o;\n  } else {\n    return (function (a0, a1, a2) {\n        return _3(o, a0, a1, a2);\n      });\n  }\n}\n\nfunction curry_4(o, a0, a1, a2, a3, arity) {\n  switch (arity) {\n    case 1 : \n        return app(o(a0), /* array */[\n                    a1,\n                    a2,\n                    a3\n                  ]);\n    case 2 : \n        return app(o(a0, a1), /* array */[\n                    a2,\n                    a3\n                  ]);\n    case 3 : \n        return app(o(a0, a1, a2), /* array */[a3]);\n    case 4 : \n        return o(a0, a1, a2, a3);\n    case 5 : \n        return (function (param) {\n            return o(a0, a1, a2, a3, param);\n          });\n    case 6 : \n        return (function (param, param$1) {\n            return o(a0, a1, a2, a3, param, param$1);\n          });\n    case 7 : \n        return (function (param, param$1, param$2) {\n            return o(a0, a1, a2, a3, param, param$1, param$2);\n          });\n    default:\n      return app(o, /* array */[\n                  a0,\n                  a1,\n                  a2,\n                  a3\n                ]);\n  }\n}\n\nfunction _4(o, a0, a1, a2, a3) {\n  var arity = o.length;\n  if (arity === 4) {\n    return o(a0, a1, a2, a3);\n  } else {\n    return curry_4(o, a0, a1, a2, a3, arity);\n  }\n}\n\nfunction __4(o) {\n  var arity = o.length;\n  if (arity === 4) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3) {\n        return _4(o, a0, a1, a2, a3);\n      });\n  }\n}\n\nfunction curry_5(o, a0, a1, a2, a3, a4, arity) {\n  switch (arity) {\n    case 1 : \n        return app(o(a0), /* array */[\n                    a1,\n                    a2,\n                    a3,\n                    a4\n                  ]);\n    case 2 : \n        return app(o(a0, a1), /* array */[\n                    a2,\n                    a3,\n                    a4\n                  ]);\n    case 3 : \n        return app(o(a0, a1, a2), /* array */[\n                    a3,\n                    a4\n                  ]);\n    case 4 : \n        return app(o(a0, a1, a2, a3), /* array */[a4]);\n    case 5 : \n        return o(a0, a1, a2, a3, a4);\n    case 6 : \n        return (function (param) {\n            return o(a0, a1, a2, a3, a4, param);\n          });\n    case 7 : \n        return (function (param, param$1) {\n            return o(a0, a1, a2, a3, a4, param, param$1);\n          });\n    default:\n      return app(o, /* array */[\n                  a0,\n                  a1,\n                  a2,\n                  a3,\n                  a4\n                ]);\n  }\n}\n\nfunction _5(o, a0, a1, a2, a3, a4) {\n  var arity = o.length;\n  if (arity === 5) {\n    return o(a0, a1, a2, a3, a4);\n  } else {\n    return curry_5(o, a0, a1, a2, a3, a4, arity);\n  }\n}\n\nfunction __5(o) {\n  var arity = o.length;\n  if (arity === 5) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3, a4) {\n        return _5(o, a0, a1, a2, a3, a4);\n      });\n  }\n}\n\nfunction curry_6(o, a0, a1, a2, a3, a4, a5, arity) {\n  switch (arity) {\n    case 1 : \n        return app(o(a0), /* array */[\n                    a1,\n                    a2,\n                    a3,\n                    a4,\n                    a5\n                  ]);\n    case 2 : \n        return app(o(a0, a1), /* array */[\n                    a2,\n                    a3,\n                    a4,\n                    a5\n                  ]);\n    case 3 : \n        return app(o(a0, a1, a2), /* array */[\n                    a3,\n                    a4,\n                    a5\n                  ]);\n    case 4 : \n        return app(o(a0, a1, a2, a3), /* array */[\n                    a4,\n                    a5\n                  ]);\n    case 5 : \n        return app(o(a0, a1, a2, a3, a4), /* array */[a5]);\n    case 6 : \n        return o(a0, a1, a2, a3, a4, a5);\n    case 7 : \n        return (function (param) {\n            return o(a0, a1, a2, a3, a4, a5, param);\n          });\n    default:\n      return app(o, /* array */[\n                  a0,\n                  a1,\n                  a2,\n                  a3,\n                  a4,\n                  a5\n                ]);\n  }\n}\n\nfunction _6(o, a0, a1, a2, a3, a4, a5) {\n  var arity = o.length;\n  if (arity === 6) {\n    return o(a0, a1, a2, a3, a4, a5);\n  } else {\n    return curry_6(o, a0, a1, a2, a3, a4, a5, arity);\n  }\n}\n\nfunction __6(o) {\n  var arity = o.length;\n  if (arity === 6) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3, a4, a5) {\n        return _6(o, a0, a1, a2, a3, a4, a5);\n      });\n  }\n}\n\nfunction curry_7(o, a0, a1, a2, a3, a4, a5, a6, arity) {\n  switch (arity) {\n    case 1 : \n        return app(o(a0), /* array */[\n                    a1,\n                    a2,\n                    a3,\n                    a4,\n                    a5,\n                    a6\n                  ]);\n    case 2 : \n        return app(o(a0, a1), /* array */[\n                    a2,\n                    a3,\n                    a4,\n                    a5,\n                    a6\n                  ]);\n    case 3 : \n        return app(o(a0, a1, a2), /* array */[\n                    a3,\n                    a4,\n                    a5,\n                    a6\n                  ]);\n    case 4 : \n        return app(o(a0, a1, a2, a3), /* array */[\n                    a4,\n                    a5,\n                    a6\n                  ]);\n    case 5 : \n        return app(o(a0, a1, a2, a3, a4), /* array */[\n                    a5,\n                    a6\n                  ]);\n    case 6 : \n        return app(o(a0, a1, a2, a3, a4, a5), /* array */[a6]);\n    case 7 : \n        return o(a0, a1, a2, a3, a4, a5, a6);\n    default:\n      return app(o, /* array */[\n                  a0,\n                  a1,\n                  a2,\n                  a3,\n                  a4,\n                  a5,\n                  a6\n                ]);\n  }\n}\n\nfunction _7(o, a0, a1, a2, a3, a4, a5, a6) {\n  var arity = o.length;\n  if (arity === 7) {\n    return o(a0, a1, a2, a3, a4, a5, a6);\n  } else {\n    return curry_7(o, a0, a1, a2, a3, a4, a5, a6, arity);\n  }\n}\n\nfunction __7(o) {\n  var arity = o.length;\n  if (arity === 7) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3, a4, a5, a6) {\n        return _7(o, a0, a1, a2, a3, a4, a5, a6);\n      });\n  }\n}\n\nfunction curry_8(o, a0, a1, a2, a3, a4, a5, a6, a7, arity) {\n  switch (arity) {\n    case 1 : \n        return app(o(a0), /* array */[\n                    a1,\n                    a2,\n                    a3,\n                    a4,\n                    a5,\n                    a6,\n                    a7\n                  ]);\n    case 2 : \n        return app(o(a0, a1), /* array */[\n                    a2,\n                    a3,\n                    a4,\n                    a5,\n                    a6,\n                    a7\n                  ]);\n    case 3 : \n        return app(o(a0, a1, a2), /* array */[\n                    a3,\n                    a4,\n                    a5,\n                    a6,\n                    a7\n                  ]);\n    case 4 : \n        return app(o(a0, a1, a2, a3), /* array */[\n                    a4,\n                    a5,\n                    a6,\n                    a7\n                  ]);\n    case 5 : \n        return app(o(a0, a1, a2, a3, a4), /* array */[\n                    a5,\n                    a6,\n                    a7\n                  ]);\n    case 6 : \n        return app(o(a0, a1, a2, a3, a4, a5), /* array */[\n                    a6,\n                    a7\n                  ]);\n    case 7 : \n        return app(o(a0, a1, a2, a3, a4, a5, a6), /* array */[a7]);\n    default:\n      return app(o, /* array */[\n                  a0,\n                  a1,\n                  a2,\n                  a3,\n                  a4,\n                  a5,\n                  a6,\n                  a7\n                ]);\n  }\n}\n\nfunction _8(o, a0, a1, a2, a3, a4, a5, a6, a7) {\n  var arity = o.length;\n  if (arity === 8) {\n    return o(a0, a1, a2, a3, a4, a5, a6, a7);\n  } else {\n    return curry_8(o, a0, a1, a2, a3, a4, a5, a6, a7, arity);\n  }\n}\n\nfunction __8(o) {\n  var arity = o.length;\n  if (arity === 8) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return _8(o, a0, a1, a2, a3, a4, a5, a6, a7);\n      });\n  }\n}\n\nexport {\n  app ,\n  curry_1 ,\n  _1 ,\n  __1 ,\n  curry_2 ,\n  _2 ,\n  __2 ,\n  curry_3 ,\n  _3 ,\n  __3 ,\n  curry_4 ,\n  _4 ,\n  __4 ,\n  curry_5 ,\n  _5 ,\n  __5 ,\n  curry_6 ,\n  _6 ,\n  __6 ,\n  curry_7 ,\n  _7 ,\n  __7 ,\n  curry_8 ,\n  _8 ,\n  __8 ,\n  \n}\n/* No side effect */\n","\n\n\nvar id = /* record */[/* contents */0];\n\nfunction caml_set_oo_id(b) {\n  b[1] = id[0];\n  id[0] += 1;\n  return b;\n}\n\nfunction caml_fresh_oo_id(param) {\n  id[0] += 1;\n  return id[0];\n}\n\nfunction create(str) {\n  var v_001 = caml_fresh_oo_id(/* () */0);\n  var v = /* tuple */[\n    str,\n    v_001\n  ];\n  v.tag = 248;\n  return v;\n}\n\nfunction caml_is_extension(e) {\n  if (e === undefined) {\n    return false;\n  } else if (e.tag === 248) {\n    return true;\n  } else {\n    var slot = e[0];\n    if (slot !== undefined) {\n      return slot.tag === 248;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport {\n  caml_set_oo_id ,\n  caml_fresh_oo_id ,\n  create ,\n  caml_is_extension ,\n  \n}\n/* No side effect */\n","\n\n\nvar undefinedHeader = /* array */[];\n\nfunction some(x) {\n  if (x === undefined) {\n    var block = /* tuple */[\n      undefinedHeader,\n      0\n    ];\n    block.tag = 256;\n    return block;\n  } else if (x !== null && x[0] === undefinedHeader) {\n    var nid = x[1] + 1 | 0;\n    var block$1 = /* tuple */[\n      undefinedHeader,\n      nid\n    ];\n    block$1.tag = 256;\n    return block$1;\n  } else {\n    return x;\n  }\n}\n\nfunction nullable_to_opt(x) {\n  if (x === null || x === undefined) {\n    return undefined;\n  } else {\n    return some(x);\n  }\n}\n\nfunction undefined_to_opt(x) {\n  if (x === undefined) {\n    return undefined;\n  } else {\n    return some(x);\n  }\n}\n\nfunction null_to_opt(x) {\n  if (x === null) {\n    return undefined;\n  } else {\n    return some(x);\n  }\n}\n\nfunction valFromOption(x) {\n  if (x !== null && x[0] === undefinedHeader) {\n    var depth = x[1];\n    if (depth === 0) {\n      return undefined;\n    } else {\n      return /* tuple */[\n              undefinedHeader,\n              depth - 1 | 0\n            ];\n    }\n  } else {\n    return x;\n  }\n}\n\nfunction option_get(x) {\n  if (x === undefined) {\n    return undefined;\n  } else {\n    return valFromOption(x);\n  }\n}\n\nfunction option_get_unwrap(x) {\n  if (x === undefined) {\n    return undefined;\n  } else {\n    return valFromOption(x)[1];\n  }\n}\n\nexport {\n  nullable_to_opt ,\n  undefined_to_opt ,\n  null_to_opt ,\n  valFromOption ,\n  some ,\n  option_get ,\n  option_get_unwrap ,\n  \n}\n/* No side effect */\n","\n\nimport * as Caml_option from \"./caml_option.js\";\nimport * as Caml_exceptions from \"./caml_exceptions.js\";\n\nvar $$Error = Caml_exceptions.create(\"Caml_js_exceptions.Error\");\n\nfunction internalToOCamlException(e) {\n  if (Caml_exceptions.caml_is_extension(e)) {\n    return e;\n  } else {\n    return [\n            $$Error,\n            e\n          ];\n  }\n}\n\nfunction caml_as_js_exn(exn) {\n  if (exn[0] === $$Error) {\n    return Caml_option.some(exn[1]);\n  }\n  \n}\n\nexport {\n  $$Error ,\n  internalToOCamlException ,\n  caml_as_js_exn ,\n  \n}\n/* No side effect */\n","\n\nimport * as Curry from \"./curry.js\";\nimport * as Caml_array from \"./caml_array.js\";\nimport * as Caml_exceptions from \"./caml_exceptions.js\";\nimport * as Caml_js_exceptions from \"./caml_js_exceptions.js\";\nimport * as Caml_builtin_exceptions from \"./caml_builtin_exceptions.js\";\n\nfunction init(l, f) {\n  if (l === 0) {\n    return /* array */[];\n  } else if (l < 0) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Array.init\"\n        ];\n  } else {\n    var res = Caml_array.caml_make_vect(l, Curry._1(f, 0));\n    for(var i = 1 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n      res[i] = Curry._1(f, i);\n    }\n    return res;\n  }\n}\n\nfunction make_matrix(sx, sy, init) {\n  var res = Caml_array.caml_make_vect(sx, /* array */[]);\n  for(var x = 0 ,x_finish = sx - 1 | 0; x <= x_finish; ++x){\n    res[x] = Caml_array.caml_make_vect(sy, init);\n  }\n  return res;\n}\n\nfunction copy(a) {\n  var l = a.length;\n  if (l === 0) {\n    return /* array */[];\n  } else {\n    return Caml_array.caml_array_sub(a, 0, l);\n  }\n}\n\nfunction append(a1, a2) {\n  var l1 = a1.length;\n  if (l1 === 0) {\n    return copy(a2);\n  } else if (a2.length === 0) {\n    return Caml_array.caml_array_sub(a1, 0, l1);\n  } else {\n    return a1.concat(a2);\n  }\n}\n\nfunction sub(a, ofs, len) {\n  if (len < 0 || ofs > (a.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Array.sub\"\n        ];\n  } else {\n    return Caml_array.caml_array_sub(a, ofs, len);\n  }\n}\n\nfunction fill(a, ofs, len, v) {\n  if (ofs < 0 || len < 0 || ofs > (a.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Array.fill\"\n        ];\n  } else {\n    for(var i = ofs ,i_finish = (ofs + len | 0) - 1 | 0; i <= i_finish; ++i){\n      a[i] = v;\n    }\n    return /* () */0;\n  }\n}\n\nfunction blit(a1, ofs1, a2, ofs2, len) {\n  if (len < 0 || ofs1 < 0 || ofs1 > (a1.length - len | 0) || ofs2 < 0 || ofs2 > (a2.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Array.blit\"\n        ];\n  } else {\n    return Caml_array.caml_array_blit(a1, ofs1, a2, ofs2, len);\n  }\n}\n\nfunction iter(f, a) {\n  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){\n    Curry._1(f, a[i]);\n  }\n  return /* () */0;\n}\n\nfunction map(f, a) {\n  var l = a.length;\n  if (l === 0) {\n    return /* array */[];\n  } else {\n    var r = Caml_array.caml_make_vect(l, Curry._1(f, a[0]));\n    for(var i = 1 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n      r[i] = Curry._1(f, a[i]);\n    }\n    return r;\n  }\n}\n\nfunction iteri(f, a) {\n  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){\n    Curry._2(f, i, a[i]);\n  }\n  return /* () */0;\n}\n\nfunction mapi(f, a) {\n  var l = a.length;\n  if (l === 0) {\n    return /* array */[];\n  } else {\n    var r = Caml_array.caml_make_vect(l, Curry._2(f, 0, a[0]));\n    for(var i = 1 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n      r[i] = Curry._2(f, i, a[i]);\n    }\n    return r;\n  }\n}\n\nfunction to_list(a) {\n  var _i = a.length - 1 | 0;\n  var _res = /* [] */0;\n  while(true) {\n    var res = _res;\n    var i = _i;\n    if (i < 0) {\n      return res;\n    } else {\n      _res = /* :: */[\n        a[i],\n        res\n      ];\n      _i = i - 1 | 0;\n      continue ;\n    }\n  };\n}\n\nfunction list_length(_accu, _param) {\n  while(true) {\n    var param = _param;\n    var accu = _accu;\n    if (param) {\n      _param = param[1];\n      _accu = accu + 1 | 0;\n      continue ;\n    } else {\n      return accu;\n    }\n  };\n}\n\nfunction of_list(l) {\n  if (l) {\n    var a = Caml_array.caml_make_vect(list_length(0, l), l[0]);\n    var _i = 1;\n    var _param = l[1];\n    while(true) {\n      var param = _param;\n      var i = _i;\n      if (param) {\n        a[i] = param[0];\n        _param = param[1];\n        _i = i + 1 | 0;\n        continue ;\n      } else {\n        return a;\n      }\n    };\n  } else {\n    return /* array */[];\n  }\n}\n\nfunction fold_left(f, x, a) {\n  var r = x;\n  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){\n    r = Curry._2(f, r, a[i]);\n  }\n  return r;\n}\n\nfunction fold_right(f, a, x) {\n  var r = x;\n  for(var i = a.length - 1 | 0; i >= 0; --i){\n    r = Curry._2(f, a[i], r);\n  }\n  return r;\n}\n\nvar Bottom = Caml_exceptions.create(\"Array.Bottom\");\n\nfunction sort(cmp, a) {\n  var maxson = function (l, i) {\n    var i31 = ((i + i | 0) + i | 0) + 1 | 0;\n    var x = i31;\n    if ((i31 + 2 | 0) < l) {\n      if (Curry._2(cmp, Caml_array.caml_array_get(a, i31), Caml_array.caml_array_get(a, i31 + 1 | 0)) < 0) {\n        x = i31 + 1 | 0;\n      }\n      if (Curry._2(cmp, Caml_array.caml_array_get(a, x), Caml_array.caml_array_get(a, i31 + 2 | 0)) < 0) {\n        x = i31 + 2 | 0;\n      }\n      return x;\n    } else if ((i31 + 1 | 0) < l && Curry._2(cmp, Caml_array.caml_array_get(a, i31), Caml_array.caml_array_get(a, i31 + 1 | 0)) < 0) {\n      return i31 + 1 | 0;\n    } else if (i31 < l) {\n      return i31;\n    } else {\n      throw [\n            Bottom,\n            i\n          ];\n    }\n  };\n  var trickle = function (l, i, e) {\n    try {\n      var l$1 = l;\n      var _i = i;\n      var e$1 = e;\n      while(true) {\n        var i$1 = _i;\n        var j = maxson(l$1, i$1);\n        if (Curry._2(cmp, Caml_array.caml_array_get(a, j), e$1) > 0) {\n          Caml_array.caml_array_set(a, i$1, Caml_array.caml_array_get(a, j));\n          _i = j;\n          continue ;\n        } else {\n          return Caml_array.caml_array_set(a, i$1, e$1);\n        }\n      };\n    }\n    catch (raw_exn){\n      var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);\n      if (exn[0] === Bottom) {\n        return Caml_array.caml_array_set(a, exn[1], e);\n      } else {\n        throw exn;\n      }\n    }\n  };\n  var bubble = function (l, i) {\n    try {\n      var l$1 = l;\n      var _i = i;\n      while(true) {\n        var i$1 = _i;\n        var j = maxson(l$1, i$1);\n        Caml_array.caml_array_set(a, i$1, Caml_array.caml_array_get(a, j));\n        _i = j;\n        continue ;\n      };\n    }\n    catch (raw_exn){\n      var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);\n      if (exn[0] === Bottom) {\n        return exn[1];\n      } else {\n        throw exn;\n      }\n    }\n  };\n  var trickleup = function (_i, e) {\n    while(true) {\n      var i = _i;\n      var father = (i - 1 | 0) / 3 | 0;\n      if (i === father) {\n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              /* tuple */[\n                \"array.ml\",\n                173,\n                4\n              ]\n            ];\n      }\n      if (Curry._2(cmp, Caml_array.caml_array_get(a, father), e) < 0) {\n        Caml_array.caml_array_set(a, i, Caml_array.caml_array_get(a, father));\n        if (father > 0) {\n          _i = father;\n          continue ;\n        } else {\n          return Caml_array.caml_array_set(a, 0, e);\n        }\n      } else {\n        return Caml_array.caml_array_set(a, i, e);\n      }\n    };\n  };\n  var l = a.length;\n  for(var i = ((l + 1 | 0) / 3 | 0) - 1 | 0; i >= 0; --i){\n    trickle(l, i, Caml_array.caml_array_get(a, i));\n  }\n  for(var i$1 = l - 1 | 0; i$1 >= 2; --i$1){\n    var e = Caml_array.caml_array_get(a, i$1);\n    Caml_array.caml_array_set(a, i$1, Caml_array.caml_array_get(a, 0));\n    trickleup(bubble(i$1, 0), e);\n  }\n  if (l > 1) {\n    var e$1 = Caml_array.caml_array_get(a, 1);\n    Caml_array.caml_array_set(a, 1, Caml_array.caml_array_get(a, 0));\n    return Caml_array.caml_array_set(a, 0, e$1);\n  } else {\n    return 0;\n  }\n}\n\nfunction stable_sort(cmp, a) {\n  var merge = function (src1ofs, src1len, src2, src2ofs, src2len, dst, dstofs) {\n    var src1r = src1ofs + src1len | 0;\n    var src2r = src2ofs + src2len | 0;\n    var _i1 = src1ofs;\n    var _s1 = Caml_array.caml_array_get(a, src1ofs);\n    var _i2 = src2ofs;\n    var _s2 = Caml_array.caml_array_get(src2, src2ofs);\n    var _d = dstofs;\n    while(true) {\n      var d = _d;\n      var s2 = _s2;\n      var i2 = _i2;\n      var s1 = _s1;\n      var i1 = _i1;\n      if (Curry._2(cmp, s1, s2) <= 0) {\n        Caml_array.caml_array_set(dst, d, s1);\n        var i1$1 = i1 + 1 | 0;\n        if (i1$1 < src1r) {\n          _d = d + 1 | 0;\n          _s1 = Caml_array.caml_array_get(a, i1$1);\n          _i1 = i1$1;\n          continue ;\n        } else {\n          return blit(src2, i2, dst, d + 1 | 0, src2r - i2 | 0);\n        }\n      } else {\n        Caml_array.caml_array_set(dst, d, s2);\n        var i2$1 = i2 + 1 | 0;\n        if (i2$1 < src2r) {\n          _d = d + 1 | 0;\n          _s2 = Caml_array.caml_array_get(src2, i2$1);\n          _i2 = i2$1;\n          continue ;\n        } else {\n          return blit(a, i1, dst, d + 1 | 0, src1r - i1 | 0);\n        }\n      }\n    };\n  };\n  var isortto = function (srcofs, dst, dstofs, len) {\n    for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n      var e = Caml_array.caml_array_get(a, srcofs + i | 0);\n      var j = (dstofs + i | 0) - 1 | 0;\n      while(j >= dstofs && Curry._2(cmp, Caml_array.caml_array_get(dst, j), e) > 0) {\n        Caml_array.caml_array_set(dst, j + 1 | 0, Caml_array.caml_array_get(dst, j));\n        j = j - 1 | 0;\n      };\n      Caml_array.caml_array_set(dst, j + 1 | 0, e);\n    }\n    return /* () */0;\n  };\n  var sortto = function (srcofs, dst, dstofs, len) {\n    if (len <= 5) {\n      return isortto(srcofs, dst, dstofs, len);\n    } else {\n      var l1 = len / 2 | 0;\n      var l2 = len - l1 | 0;\n      sortto(srcofs + l1 | 0, dst, dstofs + l1 | 0, l2);\n      sortto(srcofs, a, srcofs + l2 | 0, l1);\n      return merge(srcofs + l2 | 0, l1, dst, dstofs + l1 | 0, l2, dst, dstofs);\n    }\n  };\n  var l = a.length;\n  if (l <= 5) {\n    return isortto(0, a, 0, l);\n  } else {\n    var l1 = l / 2 | 0;\n    var l2 = l - l1 | 0;\n    var t = Caml_array.caml_make_vect(l2, Caml_array.caml_array_get(a, 0));\n    sortto(l1, t, 0, l2);\n    sortto(0, a, l2, l1);\n    return merge(l2, l1, t, 0, l2, a, 0);\n  }\n}\n\nvar create_matrix = make_matrix;\n\nvar concat = Caml_array.caml_array_concat;\n\nvar fast_sort = stable_sort;\n\nexport {\n  init ,\n  make_matrix ,\n  create_matrix ,\n  append ,\n  concat ,\n  sub ,\n  copy ,\n  fill ,\n  blit ,\n  to_list ,\n  of_list ,\n  iter ,\n  map ,\n  iteri ,\n  mapi ,\n  fold_left ,\n  fold_right ,\n  sort ,\n  stable_sort ,\n  fast_sort ,\n  \n}\n/* No side effect */\n","class BitMatrix {\n    static createEmpty(width, height) {\n        return new BitMatrix(new Uint8ClampedArray(width * height), width);\n    }\n    constructor(data, width) {\n        this.width = width;\n        this.height = data.length / width;\n        this.data = data;\n    }\n    get(x, y) {\n        if (x < 0 || x >= this.width || y < 0 || y >= this.height) {\n            return false;\n        }\n        return !!this.data[y * this.width + x];\n    }\n    set(x, y, v) {\n        this.data[y * this.width + x] = v ? 1 : 0;\n    }\n    setRegion(left, top, width, height, v) {\n        for (let y = top; y < top + height; y++) {\n            for (let x = left; x < left + width; x++) {\n                this.set(x, y, !!v);\n            }\n        }\n    }\n}\n\nconst REGION_SIZE = 8;\nconst MIN_DYNAMIC_RANGE = 24;\nfunction numBetween(value, min, max) {\n    return value < min ? min : value > max ? max : value;\n}\n// Like BitMatrix but accepts arbitry Uint8 values\nclass Matrix {\n    constructor(width, height, buffer) {\n        this.width = width;\n        const bufferSize = width * height;\n        if (buffer && buffer.length !== bufferSize) {\n            throw new Error(\"Wrong buffer size\");\n        }\n        this.data = buffer || new Uint8ClampedArray(bufferSize);\n    }\n    get(x, y) {\n        return this.data[y * this.width + x];\n    }\n    set(x, y, value) {\n        this.data[y * this.width + x] = value;\n    }\n}\nfunction binarize(data, width, height, returnInverted, greyscaleWeights, canOverwriteImage) {\n    const pixelCount = width * height;\n    if (data.length !== pixelCount * 4) {\n        throw new Error(\"Malformed data passed to binarizer.\");\n    }\n    // assign the greyscale and binary image within the rgba buffer as the rgba image will not be needed after conversion\n    let bufferOffset = 0;\n    // Convert image to greyscale\n    let greyscaleBuffer;\n    if (canOverwriteImage) {\n        greyscaleBuffer = new Uint8ClampedArray(data.buffer, bufferOffset, pixelCount);\n        bufferOffset += pixelCount;\n    }\n    const greyscalePixels = new Matrix(width, height, greyscaleBuffer);\n    if (greyscaleWeights.useIntegerApproximation) {\n        for (let y = 0; y < height; y++) {\n            for (let x = 0; x < width; x++) {\n                const pixelPosition = (y * width + x) * 4;\n                const r = data[pixelPosition];\n                const g = data[pixelPosition + 1];\n                const b = data[pixelPosition + 2];\n                greyscalePixels.set(x, y, \n                // tslint:disable-next-line no-bitwise\n                (greyscaleWeights.red * r + greyscaleWeights.green * g + greyscaleWeights.blue * b + 128) >> 8);\n            }\n        }\n    }\n    else {\n        for (let y = 0; y < height; y++) {\n            for (let x = 0; x < width; x++) {\n                const pixelPosition = (y * width + x) * 4;\n                const r = data[pixelPosition];\n                const g = data[pixelPosition + 1];\n                const b = data[pixelPosition + 2];\n                greyscalePixels.set(x, y, greyscaleWeights.red * r + greyscaleWeights.green * g + greyscaleWeights.blue * b);\n            }\n        }\n    }\n    const horizontalRegionCount = Math.ceil(width / REGION_SIZE);\n    const verticalRegionCount = Math.ceil(height / REGION_SIZE);\n    const blackPointsCount = horizontalRegionCount * verticalRegionCount;\n    let blackPointsBuffer;\n    if (canOverwriteImage) {\n        blackPointsBuffer = new Uint8ClampedArray(data.buffer, bufferOffset, blackPointsCount);\n        bufferOffset += blackPointsCount;\n    }\n    const blackPoints = new Matrix(horizontalRegionCount, verticalRegionCount, blackPointsBuffer);\n    for (let verticalRegion = 0; verticalRegion < verticalRegionCount; verticalRegion++) {\n        for (let hortizontalRegion = 0; hortizontalRegion < horizontalRegionCount; hortizontalRegion++) {\n            let min = Infinity;\n            let max = 0;\n            for (let y = 0; y < REGION_SIZE; y++) {\n                for (let x = 0; x < REGION_SIZE; x++) {\n                    const pixelLumosity = greyscalePixels.get(hortizontalRegion * REGION_SIZE + x, verticalRegion * REGION_SIZE + y);\n                    min = Math.min(min, pixelLumosity);\n                    max = Math.max(max, pixelLumosity);\n                }\n            }\n            // We could also compute the real average of all pixels but following the assumption that the qr code consists\n            // of bright and dark pixels and essentially not much in between, by (min + max)/2 we make the cut really between\n            // those two classes. If using the average over all pixel in a block of mostly bright pixels and few dark pixels,\n            // the avg would tend to the bright side and darker bright pixels could be interpreted as dark.\n            let average = (min + max) / 2;\n            // Small bias towards black by moving the threshold up. We do this, as in the finder patterns white holes tend\n            // to appear which makes them undetectable.\n            const blackBias = 1.1;\n            average = Math.min(255, average * blackBias);\n            if (max - min <= MIN_DYNAMIC_RANGE) {\n                // If variation within the block is low, assume this is a block with only light or only\n                // dark pixels. In that case we do not want to use the average, as it would divide this\n                // low contrast area into black and white pixels, essentially creating data out of noise.\n                //\n                // Default the blackpoint for these blocks to be half the min - effectively white them out\n                average = min / 2;\n                if (verticalRegion > 0 && hortizontalRegion > 0) {\n                    // Correct the \"white background\" assumption for blocks that have neighbors by comparing\n                    // the pixels in this block to the previously calculated black points. This is based on\n                    // the fact that dark barcode symbology is always surrounded by some amount of light\n                    // background for which reasonable black point estimates were made. The bp estimated at\n                    // the boundaries is used for the interior.\n                    // The (min < bp) is arbitrary but works better than other heuristics that were tried.\n                    const averageNeighborBlackPoint = (blackPoints.get(hortizontalRegion, verticalRegion - 1) +\n                        (2 * blackPoints.get(hortizontalRegion - 1, verticalRegion)) +\n                        blackPoints.get(hortizontalRegion - 1, verticalRegion - 1)) / 4;\n                    if (min < averageNeighborBlackPoint) {\n                        average = averageNeighborBlackPoint; // no need to apply black bias as already applied to neighbors\n                    }\n                }\n            }\n            blackPoints.set(hortizontalRegion, verticalRegion, average);\n        }\n    }\n    let binarized;\n    if (canOverwriteImage) {\n        const binarizedBuffer = new Uint8ClampedArray(data.buffer, bufferOffset, pixelCount);\n        bufferOffset += pixelCount;\n        binarized = new BitMatrix(binarizedBuffer, width);\n    }\n    else {\n        binarized = BitMatrix.createEmpty(width, height);\n    }\n    let inverted = null;\n    if (returnInverted) {\n        if (canOverwriteImage) {\n            const invertedBuffer = new Uint8ClampedArray(data.buffer, bufferOffset, pixelCount);\n            inverted = new BitMatrix(invertedBuffer, width);\n        }\n        else {\n            inverted = BitMatrix.createEmpty(width, height);\n        }\n    }\n    for (let verticalRegion = 0; verticalRegion < verticalRegionCount; verticalRegion++) {\n        for (let hortizontalRegion = 0; hortizontalRegion < horizontalRegionCount; hortizontalRegion++) {\n            const left = numBetween(hortizontalRegion, 2, horizontalRegionCount - 3);\n            const top = numBetween(verticalRegion, 2, verticalRegionCount - 3);\n            let sum = 0;\n            for (let xRegion = -2; xRegion <= 2; xRegion++) {\n                for (let yRegion = -2; yRegion <= 2; yRegion++) {\n                    sum += blackPoints.get(left + xRegion, top + yRegion);\n                }\n            }\n            const threshold = sum / 25;\n            for (let xRegion = 0; xRegion < REGION_SIZE; xRegion++) {\n                for (let yRegion = 0; yRegion < REGION_SIZE; yRegion++) {\n                    const x = hortizontalRegion * REGION_SIZE + xRegion;\n                    const y = verticalRegion * REGION_SIZE + yRegion;\n                    const lum = greyscalePixels.get(x, y);\n                    binarized.set(x, y, lum <= threshold);\n                    if (returnInverted) {\n                        inverted.set(x, y, !(lum <= threshold));\n                    }\n                }\n            }\n        }\n    }\n    if (returnInverted) {\n        return { binarized, inverted };\n    }\n    return { binarized };\n}\n\n// tslint:disable:no-bitwise\nclass BitStream {\n    constructor(bytes) {\n        this.byteOffset = 0;\n        this.bitOffset = 0;\n        this.bytes = bytes;\n    }\n    readBits(numBits) {\n        if (numBits < 1 || numBits > 32 || numBits > this.available()) {\n            throw new Error(\"Cannot read \" + numBits.toString() + \" bits\");\n        }\n        let result = 0;\n        // First, read remainder from current byte\n        if (this.bitOffset > 0) {\n            const bitsLeft = 8 - this.bitOffset;\n            const toRead = numBits < bitsLeft ? numBits : bitsLeft;\n            const bitsToNotRead = bitsLeft - toRead;\n            const mask = (0xFF >> (8 - toRead)) << bitsToNotRead;\n            result = (this.bytes[this.byteOffset] & mask) >> bitsToNotRead;\n            numBits -= toRead;\n            this.bitOffset += toRead;\n            if (this.bitOffset === 8) {\n                this.bitOffset = 0;\n                this.byteOffset++;\n            }\n        }\n        // Next read whole bytes\n        if (numBits > 0) {\n            while (numBits >= 8) {\n                result = (result << 8) | (this.bytes[this.byteOffset] & 0xFF);\n                this.byteOffset++;\n                numBits -= 8;\n            }\n            // Finally read a partial byte\n            if (numBits > 0) {\n                const bitsToNotRead = 8 - numBits;\n                const mask = (0xFF >> bitsToNotRead) << bitsToNotRead;\n                result = (result << numBits) | ((this.bytes[this.byteOffset] & mask) >> bitsToNotRead);\n                this.bitOffset += numBits;\n            }\n        }\n        return result;\n    }\n    available() {\n        return 8 * (this.bytes.length - this.byteOffset) - this.bitOffset;\n    }\n}\n\n// tslint:disable:no-bitwise\nvar Mode;\n(function (Mode) {\n    Mode[\"Numeric\"] = \"numeric\";\n    Mode[\"Alphanumeric\"] = \"alphanumeric\";\n    Mode[\"Byte\"] = \"byte\";\n    Mode[\"Kanji\"] = \"kanji\";\n    Mode[\"ECI\"] = \"eci\";\n})(Mode || (Mode = {}));\nvar ModeByte;\n(function (ModeByte) {\n    ModeByte[ModeByte[\"Terminator\"] = 0] = \"Terminator\";\n    ModeByte[ModeByte[\"Numeric\"] = 1] = \"Numeric\";\n    ModeByte[ModeByte[\"Alphanumeric\"] = 2] = \"Alphanumeric\";\n    ModeByte[ModeByte[\"Byte\"] = 4] = \"Byte\";\n    ModeByte[ModeByte[\"Kanji\"] = 8] = \"Kanji\";\n    ModeByte[ModeByte[\"ECI\"] = 7] = \"ECI\";\n    // StructuredAppend = 0x3,\n    // FNC1FirstPosition = 0x5,\n    // FNC1SecondPosition = 0x9,\n})(ModeByte || (ModeByte = {}));\nfunction decodeNumeric(stream, size) {\n    const bytes = [];\n    let text = \"\";\n    const characterCountSize = [10, 12, 14][size];\n    let length = stream.readBits(characterCountSize);\n    // Read digits in groups of 3\n    while (length >= 3) {\n        const num = stream.readBits(10);\n        if (num >= 1000) {\n            throw new Error(\"Invalid numeric value above 999\");\n        }\n        const a = Math.floor(num / 100);\n        const b = Math.floor(num / 10) % 10;\n        const c = num % 10;\n        bytes.push(48 + a, 48 + b, 48 + c);\n        text += a.toString() + b.toString() + c.toString();\n        length -= 3;\n    }\n    // If the number of digits aren't a multiple of 3, the remaining digits are special cased.\n    if (length === 2) {\n        const num = stream.readBits(7);\n        if (num >= 100) {\n            throw new Error(\"Invalid numeric value above 99\");\n        }\n        const a = Math.floor(num / 10);\n        const b = num % 10;\n        bytes.push(48 + a, 48 + b);\n        text += a.toString() + b.toString();\n    }\n    else if (length === 1) {\n        const num = stream.readBits(4);\n        if (num >= 10) {\n            throw new Error(\"Invalid numeric value above 9\");\n        }\n        bytes.push(48 + num);\n        text += num.toString();\n    }\n    return { bytes, text };\n}\nconst AlphanumericCharacterCodes = [\n    \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\",\n    \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\",\n    \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\",\n    \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\",\n    \" \", \"$\", \"%\", \"*\", \"+\", \"-\", \".\", \"/\", \":\",\n];\nfunction decodeAlphanumeric(stream, size) {\n    const bytes = [];\n    let text = \"\";\n    const characterCountSize = [9, 11, 13][size];\n    let length = stream.readBits(characterCountSize);\n    while (length >= 2) {\n        const v = stream.readBits(11);\n        const a = Math.floor(v / 45);\n        const b = v % 45;\n        bytes.push(AlphanumericCharacterCodes[a].charCodeAt(0), AlphanumericCharacterCodes[b].charCodeAt(0));\n        text += AlphanumericCharacterCodes[a] + AlphanumericCharacterCodes[b];\n        length -= 2;\n    }\n    if (length === 1) {\n        const a = stream.readBits(6);\n        bytes.push(AlphanumericCharacterCodes[a].charCodeAt(0));\n        text += AlphanumericCharacterCodes[a];\n    }\n    return { bytes, text };\n}\nfunction decodeByte(stream, size) {\n    const bytes = [];\n    let text = \"\";\n    const characterCountSize = [8, 16, 16][size];\n    const length = stream.readBits(characterCountSize);\n    for (let i = 0; i < length; i++) {\n        const b = stream.readBits(8);\n        bytes.push(b);\n    }\n    try {\n        text += decodeURIComponent(bytes.map(b => `%${(\"0\" + b.toString(16)).substr(-2)}`).join(\"\"));\n    }\n    catch (_a) {\n        // failed to decode\n    }\n    return { bytes, text };\n}\nfunction decodeKanji(stream, size) {\n    const bytes = [];\n    const characterCountSize = [8, 10, 12][size];\n    const length = stream.readBits(characterCountSize);\n    for (let i = 0; i < length; i++) {\n        const k = stream.readBits(13);\n        let c = (Math.floor(k / 0xC0) << 8) | (k % 0xC0);\n        if (c < 0x1F00) {\n            c += 0x8140;\n        }\n        else {\n            c += 0xC140;\n        }\n        bytes.push(c >> 8, c & 0xFF);\n    }\n    const text = new TextDecoder(\"shift-jis\").decode(Uint8Array.from(bytes));\n    return { bytes, text };\n}\nfunction decode(data, version) {\n    const stream = new BitStream(data);\n    // There are 3 'sizes' based on the version. 1-9 is small (0), 10-26 is medium (1) and 27-40 is large (2).\n    const size = version <= 9 ? 0 : version <= 26 ? 1 : 2;\n    const result = {\n        text: \"\",\n        bytes: [],\n        chunks: [],\n    };\n    while (stream.available() >= 4) {\n        const mode = stream.readBits(4);\n        if (mode === ModeByte.Terminator) {\n            return result;\n        }\n        else if (mode === ModeByte.ECI) {\n            if (stream.readBits(1) === 0) {\n                result.chunks.push({\n                    type: Mode.ECI,\n                    assignmentNumber: stream.readBits(7),\n                });\n            }\n            else if (stream.readBits(1) === 0) {\n                result.chunks.push({\n                    type: Mode.ECI,\n                    assignmentNumber: stream.readBits(14),\n                });\n            }\n            else if (stream.readBits(1) === 0) {\n                result.chunks.push({\n                    type: Mode.ECI,\n                    assignmentNumber: stream.readBits(21),\n                });\n            }\n            else {\n                // ECI data seems corrupted\n                result.chunks.push({\n                    type: Mode.ECI,\n                    assignmentNumber: -1,\n                });\n            }\n        }\n        else if (mode === ModeByte.Numeric) {\n            const numericResult = decodeNumeric(stream, size);\n            result.text += numericResult.text;\n            result.bytes.push(...numericResult.bytes);\n            result.chunks.push({\n                type: Mode.Numeric,\n                text: numericResult.text,\n            });\n        }\n        else if (mode === ModeByte.Alphanumeric) {\n            const alphanumericResult = decodeAlphanumeric(stream, size);\n            result.text += alphanumericResult.text;\n            result.bytes.push(...alphanumericResult.bytes);\n            result.chunks.push({\n                type: Mode.Alphanumeric,\n                text: alphanumericResult.text,\n            });\n        }\n        else if (mode === ModeByte.Byte) {\n            const byteResult = decodeByte(stream, size);\n            result.text += byteResult.text;\n            result.bytes.push(...byteResult.bytes);\n            result.chunks.push({\n                type: Mode.Byte,\n                bytes: byteResult.bytes,\n                text: byteResult.text,\n            });\n        }\n        else if (mode === ModeByte.Kanji) {\n            const kanjiResult = decodeKanji(stream, size);\n            result.text += kanjiResult.text;\n            result.bytes.push(...kanjiResult.bytes);\n            result.chunks.push({\n                type: Mode.Kanji,\n                bytes: kanjiResult.bytes,\n                text: kanjiResult.text,\n            });\n        }\n    }\n    // If there is no data left, or the remaining bits are all 0, then that counts as a termination marker\n    if (stream.available() === 0 || stream.readBits(stream.available()) === 0) {\n        return result;\n    }\n}\n\nclass GenericGFPoly {\n    constructor(field, coefficients) {\n        if (coefficients.length === 0) {\n            throw new Error(\"No coefficients.\");\n        }\n        this.field = field;\n        const coefficientsLength = coefficients.length;\n        if (coefficientsLength > 1 && coefficients[0] === 0) {\n            // Leading term must be non-zero for anything except the constant polynomial \"0\"\n            let firstNonZero = 1;\n            while (firstNonZero < coefficientsLength && coefficients[firstNonZero] === 0) {\n                firstNonZero++;\n            }\n            if (firstNonZero === coefficientsLength) {\n                this.coefficients = field.zero.coefficients;\n            }\n            else {\n                this.coefficients = new Uint8ClampedArray(coefficientsLength - firstNonZero);\n                for (let i = 0; i < this.coefficients.length; i++) {\n                    this.coefficients[i] = coefficients[firstNonZero + i];\n                }\n            }\n        }\n        else {\n            this.coefficients = coefficients;\n        }\n    }\n    degree() {\n        return this.coefficients.length - 1;\n    }\n    isZero() {\n        return this.coefficients[0] === 0;\n    }\n    getCoefficient(degree) {\n        return this.coefficients[this.coefficients.length - 1 - degree];\n    }\n    addOrSubtract(other) {\n        if (this.isZero()) {\n            return other;\n        }\n        if (other.isZero()) {\n            return this;\n        }\n        let smallerCoefficients = this.coefficients;\n        let largerCoefficients = other.coefficients;\n        if (smallerCoefficients.length > largerCoefficients.length) {\n            [smallerCoefficients, largerCoefficients] = [largerCoefficients, smallerCoefficients];\n        }\n        const sumDiff = new Uint8ClampedArray(largerCoefficients.length);\n        const lengthDiff = largerCoefficients.length - smallerCoefficients.length;\n        for (let i = 0; i < lengthDiff; i++) {\n            sumDiff[i] = largerCoefficients[i];\n        }\n        for (let i = lengthDiff; i < largerCoefficients.length; i++) {\n            sumDiff[i] = addOrSubtractGF(smallerCoefficients[i - lengthDiff], largerCoefficients[i]);\n        }\n        return new GenericGFPoly(this.field, sumDiff);\n    }\n    multiply(scalar) {\n        if (scalar === 0) {\n            return this.field.zero;\n        }\n        if (scalar === 1) {\n            return this;\n        }\n        const size = this.coefficients.length;\n        const product = new Uint8ClampedArray(size);\n        for (let i = 0; i < size; i++) {\n            product[i] = this.field.multiply(this.coefficients[i], scalar);\n        }\n        return new GenericGFPoly(this.field, product);\n    }\n    multiplyPoly(other) {\n        if (this.isZero() || other.isZero()) {\n            return this.field.zero;\n        }\n        const aCoefficients = this.coefficients;\n        const aLength = aCoefficients.length;\n        const bCoefficients = other.coefficients;\n        const bLength = bCoefficients.length;\n        const product = new Uint8ClampedArray(aLength + bLength - 1);\n        for (let i = 0; i < aLength; i++) {\n            const aCoeff = aCoefficients[i];\n            for (let j = 0; j < bLength; j++) {\n                product[i + j] = addOrSubtractGF(product[i + j], this.field.multiply(aCoeff, bCoefficients[j]));\n            }\n        }\n        return new GenericGFPoly(this.field, product);\n    }\n    multiplyByMonomial(degree, coefficient) {\n        if (degree < 0) {\n            throw new Error(\"Invalid degree less than 0\");\n        }\n        if (coefficient === 0) {\n            return this.field.zero;\n        }\n        const size = this.coefficients.length;\n        const product = new Uint8ClampedArray(size + degree);\n        for (let i = 0; i < size; i++) {\n            product[i] = this.field.multiply(this.coefficients[i], coefficient);\n        }\n        return new GenericGFPoly(this.field, product);\n    }\n    evaluateAt(a) {\n        let result = 0;\n        if (a === 0) {\n            // Just return the x^0 coefficient\n            return this.getCoefficient(0);\n        }\n        const size = this.coefficients.length;\n        if (a === 1) {\n            // Just the sum of the coefficients\n            this.coefficients.forEach((coefficient) => {\n                result = addOrSubtractGF(result, coefficient);\n            });\n            return result;\n        }\n        result = this.coefficients[0];\n        for (let i = 1; i < size; i++) {\n            result = addOrSubtractGF(this.field.multiply(a, result), this.coefficients[i]);\n        }\n        return result;\n    }\n}\n\nfunction addOrSubtractGF(a, b) {\n    return a ^ b; // tslint:disable-line:no-bitwise\n}\nclass GenericGF {\n    constructor(primitive, size, genBase) {\n        this.primitive = primitive;\n        this.size = size;\n        this.generatorBase = genBase;\n        this.expTable = new Array(this.size);\n        this.logTable = new Array(this.size);\n        let x = 1;\n        for (let i = 0; i < this.size; i++) {\n            this.expTable[i] = x;\n            x = x * 2;\n            if (x >= this.size) {\n                x = (x ^ this.primitive) & (this.size - 1); // tslint:disable-line:no-bitwise\n            }\n        }\n        for (let i = 0; i < this.size - 1; i++) {\n            this.logTable[this.expTable[i]] = i;\n        }\n        this.zero = new GenericGFPoly(this, Uint8ClampedArray.from([0]));\n        this.one = new GenericGFPoly(this, Uint8ClampedArray.from([1]));\n    }\n    multiply(a, b) {\n        if (a === 0 || b === 0) {\n            return 0;\n        }\n        return this.expTable[(this.logTable[a] + this.logTable[b]) % (this.size - 1)];\n    }\n    inverse(a) {\n        if (a === 0) {\n            throw new Error(\"Can't invert 0\");\n        }\n        return this.expTable[this.size - this.logTable[a] - 1];\n    }\n    buildMonomial(degree, coefficient) {\n        if (degree < 0) {\n            throw new Error(\"Invalid monomial degree less than 0\");\n        }\n        if (coefficient === 0) {\n            return this.zero;\n        }\n        const coefficients = new Uint8ClampedArray(degree + 1);\n        coefficients[0] = coefficient;\n        return new GenericGFPoly(this, coefficients);\n    }\n    log(a) {\n        if (a === 0) {\n            throw new Error(\"Can't take log(0)\");\n        }\n        return this.logTable[a];\n    }\n    exp(a) {\n        return this.expTable[a];\n    }\n}\n\nfunction runEuclideanAlgorithm(field, a, b, R) {\n    // Assume a's degree is >= b's\n    if (a.degree() < b.degree()) {\n        [a, b] = [b, a];\n    }\n    let rLast = a;\n    let r = b;\n    let tLast = field.zero;\n    let t = field.one;\n    // Run Euclidean algorithm until r's degree is less than R/2\n    while (r.degree() >= R / 2) {\n        const rLastLast = rLast;\n        const tLastLast = tLast;\n        rLast = r;\n        tLast = t;\n        // Divide rLastLast by rLast, with quotient in q and remainder in r\n        if (rLast.isZero()) {\n            // Euclidean algorithm already terminated?\n            return null;\n        }\n        r = rLastLast;\n        let q = field.zero;\n        const denominatorLeadingTerm = rLast.getCoefficient(rLast.degree());\n        const dltInverse = field.inverse(denominatorLeadingTerm);\n        while (r.degree() >= rLast.degree() && !r.isZero()) {\n            const degreeDiff = r.degree() - rLast.degree();\n            const scale = field.multiply(r.getCoefficient(r.degree()), dltInverse);\n            q = q.addOrSubtract(field.buildMonomial(degreeDiff, scale));\n            r = r.addOrSubtract(rLast.multiplyByMonomial(degreeDiff, scale));\n        }\n        t = q.multiplyPoly(tLast).addOrSubtract(tLastLast);\n        if (r.degree() >= rLast.degree()) {\n            return null;\n        }\n    }\n    const sigmaTildeAtZero = t.getCoefficient(0);\n    if (sigmaTildeAtZero === 0) {\n        return null;\n    }\n    const inverse = field.inverse(sigmaTildeAtZero);\n    return [t.multiply(inverse), r.multiply(inverse)];\n}\nfunction findErrorLocations(field, errorLocator) {\n    // This is a direct application of Chien's search\n    const numErrors = errorLocator.degree();\n    if (numErrors === 1) {\n        return [errorLocator.getCoefficient(1)];\n    }\n    const result = new Array(numErrors);\n    let errorCount = 0;\n    for (let i = 1; i < field.size && errorCount < numErrors; i++) {\n        if (errorLocator.evaluateAt(i) === 0) {\n            result[errorCount] = field.inverse(i);\n            errorCount++;\n        }\n    }\n    if (errorCount !== numErrors) {\n        return null;\n    }\n    return result;\n}\nfunction findErrorMagnitudes(field, errorEvaluator, errorLocations) {\n    // This is directly applying Forney's Formula\n    const s = errorLocations.length;\n    const result = new Array(s);\n    for (let i = 0; i < s; i++) {\n        const xiInverse = field.inverse(errorLocations[i]);\n        let denominator = 1;\n        for (let j = 0; j < s; j++) {\n            if (i !== j) {\n                denominator = field.multiply(denominator, addOrSubtractGF(1, field.multiply(errorLocations[j], xiInverse)));\n            }\n        }\n        result[i] = field.multiply(errorEvaluator.evaluateAt(xiInverse), field.inverse(denominator));\n        if (field.generatorBase !== 0) {\n            result[i] = field.multiply(result[i], xiInverse);\n        }\n    }\n    return result;\n}\nfunction decode$1(bytes, twoS) {\n    const outputBytes = new Uint8ClampedArray(bytes.length);\n    outputBytes.set(bytes);\n    const field = new GenericGF(0x011D, 256, 0); // x^8 + x^4 + x^3 + x^2 + 1\n    const poly = new GenericGFPoly(field, outputBytes);\n    const syndromeCoefficients = new Uint8ClampedArray(twoS);\n    let error = false;\n    for (let s = 0; s < twoS; s++) {\n        const evaluation = poly.evaluateAt(field.exp(s + field.generatorBase));\n        syndromeCoefficients[syndromeCoefficients.length - 1 - s] = evaluation;\n        if (evaluation !== 0) {\n            error = true;\n        }\n    }\n    if (!error) {\n        return outputBytes;\n    }\n    const syndrome = new GenericGFPoly(field, syndromeCoefficients);\n    const sigmaOmega = runEuclideanAlgorithm(field, field.buildMonomial(twoS, 1), syndrome, twoS);\n    if (sigmaOmega === null) {\n        return null;\n    }\n    const errorLocations = findErrorLocations(field, sigmaOmega[0]);\n    if (errorLocations == null) {\n        return null;\n    }\n    const errorMagnitudes = findErrorMagnitudes(field, sigmaOmega[1], errorLocations);\n    for (let i = 0; i < errorLocations.length; i++) {\n        const position = outputBytes.length - 1 - field.log(errorLocations[i]);\n        if (position < 0) {\n            return null;\n        }\n        outputBytes[position] = addOrSubtractGF(outputBytes[position], errorMagnitudes[i]);\n    }\n    return outputBytes;\n}\n\nconst VERSIONS = [\n    {\n        infoBits: null,\n        versionNumber: 1,\n        alignmentPatternCenters: [],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 7,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 19 }],\n            },\n            {\n                ecCodewordsPerBlock: 10,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 16 }],\n            },\n            {\n                ecCodewordsPerBlock: 13,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 13 }],\n            },\n            {\n                ecCodewordsPerBlock: 17,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 9 }],\n            },\n        ],\n    },\n    {\n        infoBits: null,\n        versionNumber: 2,\n        alignmentPatternCenters: [6, 18],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 10,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 34 }],\n            },\n            {\n                ecCodewordsPerBlock: 16,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 28 }],\n            },\n            {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 22 }],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 16 }],\n            },\n        ],\n    },\n    {\n        infoBits: null,\n        versionNumber: 3,\n        alignmentPatternCenters: [6, 22],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 15,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 55 }],\n            },\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 44 }],\n            },\n            {\n                ecCodewordsPerBlock: 18,\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 17 }],\n            },\n            {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 13 }],\n            },\n        ],\n    },\n    {\n        infoBits: null,\n        versionNumber: 4,\n        alignmentPatternCenters: [6, 26],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 20,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 80 }],\n            },\n            {\n                ecCodewordsPerBlock: 18,\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 32 }],\n            },\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 24 }],\n            },\n            {\n                ecCodewordsPerBlock: 16,\n                ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 9 }],\n            },\n        ],\n    },\n    {\n        infoBits: null,\n        versionNumber: 5,\n        alignmentPatternCenters: [6, 30],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [{ numBlocks: 1, dataCodewordsPerBlock: 108 }],\n            },\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 43 }],\n            },\n            {\n                ecCodewordsPerBlock: 18,\n                ecBlocks: [\n                    { numBlocks: 2, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 2, dataCodewordsPerBlock: 16 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [\n                    { numBlocks: 2, dataCodewordsPerBlock: 11 },\n                    { numBlocks: 2, dataCodewordsPerBlock: 12 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: null,\n        versionNumber: 6,\n        alignmentPatternCenters: [6, 34],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 18,\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 68 }],\n            },\n            {\n                ecCodewordsPerBlock: 16,\n                ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 27 }],\n            },\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 19 }],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 15 }],\n            },\n        ],\n    },\n    {\n        infoBits: 0x07C94,\n        versionNumber: 7,\n        alignmentPatternCenters: [6, 22, 38],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 20,\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 78 }],\n            },\n            {\n                ecCodewordsPerBlock: 18,\n                ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 31 }],\n            },\n            {\n                ecCodewordsPerBlock: 18,\n                ecBlocks: [\n                    { numBlocks: 2, dataCodewordsPerBlock: 14 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 15 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                    { numBlocks: 4, dataCodewordsPerBlock: 13 },\n                    { numBlocks: 1, dataCodewordsPerBlock: 14 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x085BC,\n        versionNumber: 8,\n        alignmentPatternCenters: [6, 24, 42],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 97 }],\n            },\n            {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [\n                    { numBlocks: 2, dataCodewordsPerBlock: 38 },\n                    { numBlocks: 2, dataCodewordsPerBlock: 39 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [\n                    { numBlocks: 4, dataCodewordsPerBlock: 18 },\n                    { numBlocks: 2, dataCodewordsPerBlock: 19 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                    { numBlocks: 4, dataCodewordsPerBlock: 14 },\n                    { numBlocks: 2, dataCodewordsPerBlock: 15 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x09A99,\n        versionNumber: 9,\n        alignmentPatternCenters: [6, 26, 46],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [{ numBlocks: 2, dataCodewordsPerBlock: 116 }],\n            },\n            {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [\n                    { numBlocks: 3, dataCodewordsPerBlock: 36 },\n                    { numBlocks: 2, dataCodewordsPerBlock: 37 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 20,\n                ecBlocks: [\n                    { numBlocks: 4, dataCodewordsPerBlock: 16 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 17 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                    { numBlocks: 4, dataCodewordsPerBlock: 12 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 13 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x0A4D3,\n        versionNumber: 10,\n        alignmentPatternCenters: [6, 28, 50],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 18,\n                ecBlocks: [\n                    { numBlocks: 2, dataCodewordsPerBlock: 68 },\n                    { numBlocks: 2, dataCodewordsPerBlock: 69 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                    { numBlocks: 4, dataCodewordsPerBlock: 43 },\n                    { numBlocks: 1, dataCodewordsPerBlock: 44 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                    { numBlocks: 6, dataCodewordsPerBlock: 19 },\n                    { numBlocks: 2, dataCodewordsPerBlock: 20 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 6, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 2, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x0BBF6,\n        versionNumber: 11,\n        alignmentPatternCenters: [6, 30, 54],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 20,\n                ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 81 }],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 1, dataCodewordsPerBlock: 50 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 51 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 4, dataCodewordsPerBlock: 22 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 23 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                    { numBlocks: 3, dataCodewordsPerBlock: 12 },\n                    { numBlocks: 8, dataCodewordsPerBlock: 13 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x0C762,\n        versionNumber: 12,\n        alignmentPatternCenters: [6, 32, 58],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                    { numBlocks: 2, dataCodewordsPerBlock: 92 },\n                    { numBlocks: 2, dataCodewordsPerBlock: 93 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [\n                    { numBlocks: 6, dataCodewordsPerBlock: 36 },\n                    { numBlocks: 2, dataCodewordsPerBlock: 37 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                    { numBlocks: 4, dataCodewordsPerBlock: 20 },\n                    { numBlocks: 6, dataCodewordsPerBlock: 21 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 7, dataCodewordsPerBlock: 14 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 15 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x0D847,\n        versionNumber: 13,\n        alignmentPatternCenters: [6, 34, 62],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [{ numBlocks: 4, dataCodewordsPerBlock: 107 }],\n            },\n            {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [\n                    { numBlocks: 8, dataCodewordsPerBlock: 37 },\n                    { numBlocks: 1, dataCodewordsPerBlock: 38 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                    { numBlocks: 8, dataCodewordsPerBlock: 20 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 21 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [\n                    { numBlocks: 12, dataCodewordsPerBlock: 11 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 12 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x0E60D,\n        versionNumber: 14,\n        alignmentPatternCenters: [6, 26, 46, 66],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 3, dataCodewordsPerBlock: 115 },\n                    { numBlocks: 1, dataCodewordsPerBlock: 116 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                    { numBlocks: 4, dataCodewordsPerBlock: 40 },\n                    { numBlocks: 5, dataCodewordsPerBlock: 41 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 20,\n                ecBlocks: [\n                    { numBlocks: 11, dataCodewordsPerBlock: 16 },\n                    { numBlocks: 5, dataCodewordsPerBlock: 17 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                    { numBlocks: 11, dataCodewordsPerBlock: 12 },\n                    { numBlocks: 5, dataCodewordsPerBlock: 13 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x0F928,\n        versionNumber: 15,\n        alignmentPatternCenters: [6, 26, 48, 70],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 22,\n                ecBlocks: [\n                    { numBlocks: 5, dataCodewordsPerBlock: 87 },\n                    { numBlocks: 1, dataCodewordsPerBlock: 88 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                    { numBlocks: 5, dataCodewordsPerBlock: 41 },\n                    { numBlocks: 5, dataCodewordsPerBlock: 42 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 5, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 7, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                    { numBlocks: 11, dataCodewordsPerBlock: 12 },\n                    { numBlocks: 7, dataCodewordsPerBlock: 13 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x10B78,\n        versionNumber: 16,\n        alignmentPatternCenters: [6, 26, 50, 74],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                    { numBlocks: 5, dataCodewordsPerBlock: 98 },\n                    { numBlocks: 1, dataCodewordsPerBlock: 99 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 7, dataCodewordsPerBlock: 45 },\n                    { numBlocks: 3, dataCodewordsPerBlock: 46 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [\n                    { numBlocks: 15, dataCodewordsPerBlock: 19 },\n                    { numBlocks: 2, dataCodewordsPerBlock: 20 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 3, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 13, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x1145D,\n        versionNumber: 17,\n        alignmentPatternCenters: [6, 30, 54, 78],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 1, dataCodewordsPerBlock: 107 },\n                    { numBlocks: 5, dataCodewordsPerBlock: 108 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 10, dataCodewordsPerBlock: 46 },\n                    { numBlocks: 1, dataCodewordsPerBlock: 47 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 1, dataCodewordsPerBlock: 22 },\n                    { numBlocks: 15, dataCodewordsPerBlock: 23 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 2, dataCodewordsPerBlock: 14 },\n                    { numBlocks: 17, dataCodewordsPerBlock: 15 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x12A17,\n        versionNumber: 18,\n        alignmentPatternCenters: [6, 30, 56, 82],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 5, dataCodewordsPerBlock: 120 },\n                    { numBlocks: 1, dataCodewordsPerBlock: 121 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                    { numBlocks: 9, dataCodewordsPerBlock: 43 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 44 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 17, dataCodewordsPerBlock: 22 },\n                    { numBlocks: 1, dataCodewordsPerBlock: 23 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 2, dataCodewordsPerBlock: 14 },\n                    { numBlocks: 19, dataCodewordsPerBlock: 15 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x13532,\n        versionNumber: 19,\n        alignmentPatternCenters: [6, 30, 58, 86],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 3, dataCodewordsPerBlock: 113 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 114 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                    { numBlocks: 3, dataCodewordsPerBlock: 44 },\n                    { numBlocks: 11, dataCodewordsPerBlock: 45 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                    { numBlocks: 17, dataCodewordsPerBlock: 21 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 22 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                    { numBlocks: 9, dataCodewordsPerBlock: 13 },\n                    { numBlocks: 16, dataCodewordsPerBlock: 14 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x149A6,\n        versionNumber: 20,\n        alignmentPatternCenters: [6, 34, 62, 90],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 3, dataCodewordsPerBlock: 107 },\n                    { numBlocks: 5, dataCodewordsPerBlock: 108 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                    { numBlocks: 3, dataCodewordsPerBlock: 41 },\n                    { numBlocks: 13, dataCodewordsPerBlock: 42 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 15, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 5, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 15, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 10, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x15683,\n        versionNumber: 21,\n        alignmentPatternCenters: [6, 28, 50, 72, 94],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 4, dataCodewordsPerBlock: 116 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 117 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [{ numBlocks: 17, dataCodewordsPerBlock: 42 }],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 17, dataCodewordsPerBlock: 22 },\n                    { numBlocks: 6, dataCodewordsPerBlock: 23 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 19, dataCodewordsPerBlock: 16 },\n                    { numBlocks: 6, dataCodewordsPerBlock: 17 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x168C9,\n        versionNumber: 22,\n        alignmentPatternCenters: [6, 26, 50, 74, 98],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 2, dataCodewordsPerBlock: 111 },\n                    { numBlocks: 7, dataCodewordsPerBlock: 112 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [{ numBlocks: 17, dataCodewordsPerBlock: 46 }],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 7, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 16, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 24,\n                ecBlocks: [{ numBlocks: 34, dataCodewordsPerBlock: 13 }],\n            },\n        ],\n    },\n    {\n        infoBits: 0x177EC,\n        versionNumber: 23,\n        alignmentPatternCenters: [6, 30, 54, 74, 102],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 4, dataCodewordsPerBlock: 121 },\n                    { numBlocks: 5, dataCodewordsPerBlock: 122 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 4, dataCodewordsPerBlock: 47 },\n                    { numBlocks: 14, dataCodewordsPerBlock: 48 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 11, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 14, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 16, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 14, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x18EC4,\n        versionNumber: 24,\n        alignmentPatternCenters: [6, 28, 54, 80, 106],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 6, dataCodewordsPerBlock: 117 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 118 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 6, dataCodewordsPerBlock: 45 },\n                    { numBlocks: 14, dataCodewordsPerBlock: 46 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 11, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 16, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 30, dataCodewordsPerBlock: 16 },\n                    { numBlocks: 2, dataCodewordsPerBlock: 17 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x191E1,\n        versionNumber: 25,\n        alignmentPatternCenters: [6, 32, 58, 84, 110],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 26,\n                ecBlocks: [\n                    { numBlocks: 8, dataCodewordsPerBlock: 106 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 107 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 8, dataCodewordsPerBlock: 47 },\n                    { numBlocks: 13, dataCodewordsPerBlock: 48 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 7, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 22, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 22, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 13, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x1AFAB,\n        versionNumber: 26,\n        alignmentPatternCenters: [6, 30, 58, 86, 114],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 10, dataCodewordsPerBlock: 114 },\n                    { numBlocks: 2, dataCodewordsPerBlock: 115 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 19, dataCodewordsPerBlock: 46 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 47 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 28, dataCodewordsPerBlock: 22 },\n                    { numBlocks: 6, dataCodewordsPerBlock: 23 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 33, dataCodewordsPerBlock: 16 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 17 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x1B08E,\n        versionNumber: 27,\n        alignmentPatternCenters: [6, 34, 62, 90, 118],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 8, dataCodewordsPerBlock: 122 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 123 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 22, dataCodewordsPerBlock: 45 },\n                    { numBlocks: 3, dataCodewordsPerBlock: 46 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 8, dataCodewordsPerBlock: 23 },\n                    { numBlocks: 26, dataCodewordsPerBlock: 24 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 12, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 28, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x1CC1A,\n        versionNumber: 28,\n        alignmentPatternCenters: [6, 26, 50, 74, 98, 122],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 3, dataCodewordsPerBlock: 117 },\n                    { numBlocks: 10, dataCodewordsPerBlock: 118 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 3, dataCodewordsPerBlock: 45 },\n                    { numBlocks: 23, dataCodewordsPerBlock: 46 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 4, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 31, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 11, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 31, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x1D33F,\n        versionNumber: 29,\n        alignmentPatternCenters: [6, 30, 54, 78, 102, 126],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 7, dataCodewordsPerBlock: 116 },\n                    { numBlocks: 7, dataCodewordsPerBlock: 117 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 21, dataCodewordsPerBlock: 45 },\n                    { numBlocks: 7, dataCodewordsPerBlock: 46 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 1, dataCodewordsPerBlock: 23 },\n                    { numBlocks: 37, dataCodewordsPerBlock: 24 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 19, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 26, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x1ED75,\n        versionNumber: 30,\n        alignmentPatternCenters: [6, 26, 52, 78, 104, 130],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 5, dataCodewordsPerBlock: 115 },\n                    { numBlocks: 10, dataCodewordsPerBlock: 116 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 19, dataCodewordsPerBlock: 47 },\n                    { numBlocks: 10, dataCodewordsPerBlock: 48 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 15, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 25, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 23, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 25, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x1F250,\n        versionNumber: 31,\n        alignmentPatternCenters: [6, 30, 56, 82, 108, 134],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 13, dataCodewordsPerBlock: 115 },\n                    { numBlocks: 3, dataCodewordsPerBlock: 116 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 2, dataCodewordsPerBlock: 46 },\n                    { numBlocks: 29, dataCodewordsPerBlock: 47 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 42, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 1, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 23, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 28, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x209D5,\n        versionNumber: 32,\n        alignmentPatternCenters: [6, 34, 60, 86, 112, 138],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [{ numBlocks: 17, dataCodewordsPerBlock: 115 }],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 10, dataCodewordsPerBlock: 46 },\n                    { numBlocks: 23, dataCodewordsPerBlock: 47 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 10, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 35, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 19, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 35, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x216F0,\n        versionNumber: 33,\n        alignmentPatternCenters: [6, 30, 58, 86, 114, 142],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 17, dataCodewordsPerBlock: 115 },\n                    { numBlocks: 1, dataCodewordsPerBlock: 116 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 14, dataCodewordsPerBlock: 46 },\n                    { numBlocks: 21, dataCodewordsPerBlock: 47 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 29, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 19, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 11, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 46, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x228BA,\n        versionNumber: 34,\n        alignmentPatternCenters: [6, 34, 62, 90, 118, 146],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 13, dataCodewordsPerBlock: 115 },\n                    { numBlocks: 6, dataCodewordsPerBlock: 116 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 14, dataCodewordsPerBlock: 46 },\n                    { numBlocks: 23, dataCodewordsPerBlock: 47 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 44, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 7, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 59, dataCodewordsPerBlock: 16 },\n                    { numBlocks: 1, dataCodewordsPerBlock: 17 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x2379F,\n        versionNumber: 35,\n        alignmentPatternCenters: [6, 30, 54, 78, 102, 126, 150],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 12, dataCodewordsPerBlock: 121 },\n                    { numBlocks: 7, dataCodewordsPerBlock: 122 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 12, dataCodewordsPerBlock: 47 },\n                    { numBlocks: 26, dataCodewordsPerBlock: 48 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 39, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 14, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 22, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 41, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x24B0B,\n        versionNumber: 36,\n        alignmentPatternCenters: [6, 24, 50, 76, 102, 128, 154],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 6, dataCodewordsPerBlock: 121 },\n                    { numBlocks: 14, dataCodewordsPerBlock: 122 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 6, dataCodewordsPerBlock: 47 },\n                    { numBlocks: 34, dataCodewordsPerBlock: 48 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 46, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 10, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 2, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 64, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x2542E,\n        versionNumber: 37,\n        alignmentPatternCenters: [6, 28, 54, 80, 106, 132, 158],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 17, dataCodewordsPerBlock: 122 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 123 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 29, dataCodewordsPerBlock: 46 },\n                    { numBlocks: 14, dataCodewordsPerBlock: 47 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 49, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 10, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 24, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 46, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x26A64,\n        versionNumber: 38,\n        alignmentPatternCenters: [6, 32, 58, 84, 110, 136, 162],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 4, dataCodewordsPerBlock: 122 },\n                    { numBlocks: 18, dataCodewordsPerBlock: 123 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 13, dataCodewordsPerBlock: 46 },\n                    { numBlocks: 32, dataCodewordsPerBlock: 47 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 48, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 14, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 42, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 32, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x27541,\n        versionNumber: 39,\n        alignmentPatternCenters: [6, 26, 54, 82, 110, 138, 166],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 20, dataCodewordsPerBlock: 117 },\n                    { numBlocks: 4, dataCodewordsPerBlock: 118 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 40, dataCodewordsPerBlock: 47 },\n                    { numBlocks: 7, dataCodewordsPerBlock: 48 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 43, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 22, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 10, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 67, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n    {\n        infoBits: 0x28C69,\n        versionNumber: 40,\n        alignmentPatternCenters: [6, 30, 58, 86, 114, 142, 170],\n        errorCorrectionLevels: [\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 19, dataCodewordsPerBlock: 118 },\n                    { numBlocks: 6, dataCodewordsPerBlock: 119 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 28,\n                ecBlocks: [\n                    { numBlocks: 18, dataCodewordsPerBlock: 47 },\n                    { numBlocks: 31, dataCodewordsPerBlock: 48 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 34, dataCodewordsPerBlock: 24 },\n                    { numBlocks: 34, dataCodewordsPerBlock: 25 },\n                ],\n            },\n            {\n                ecCodewordsPerBlock: 30,\n                ecBlocks: [\n                    { numBlocks: 20, dataCodewordsPerBlock: 15 },\n                    { numBlocks: 61, dataCodewordsPerBlock: 16 },\n                ],\n            },\n        ],\n    },\n];\n\n// tslint:disable:no-bitwise\nfunction numBitsDiffering(x, y) {\n    let z = x ^ y;\n    let bitCount = 0;\n    while (z) {\n        bitCount++;\n        z &= z - 1;\n    }\n    return bitCount;\n}\nfunction pushBit(bit, byte) {\n    return (byte << 1) | bit;\n}\n// tslint:enable:no-bitwise\nconst FORMAT_INFO_TABLE = [\n    { bits: 0x5412, formatInfo: { errorCorrectionLevel: 1, dataMask: 0 } },\n    { bits: 0x5125, formatInfo: { errorCorrectionLevel: 1, dataMask: 1 } },\n    { bits: 0x5E7C, formatInfo: { errorCorrectionLevel: 1, dataMask: 2 } },\n    { bits: 0x5B4B, formatInfo: { errorCorrectionLevel: 1, dataMask: 3 } },\n    { bits: 0x45F9, formatInfo: { errorCorrectionLevel: 1, dataMask: 4 } },\n    { bits: 0x40CE, formatInfo: { errorCorrectionLevel: 1, dataMask: 5 } },\n    { bits: 0x4F97, formatInfo: { errorCorrectionLevel: 1, dataMask: 6 } },\n    { bits: 0x4AA0, formatInfo: { errorCorrectionLevel: 1, dataMask: 7 } },\n    { bits: 0x77C4, formatInfo: { errorCorrectionLevel: 0, dataMask: 0 } },\n    { bits: 0x72F3, formatInfo: { errorCorrectionLevel: 0, dataMask: 1 } },\n    { bits: 0x7DAA, formatInfo: { errorCorrectionLevel: 0, dataMask: 2 } },\n    { bits: 0x789D, formatInfo: { errorCorrectionLevel: 0, dataMask: 3 } },\n    { bits: 0x662F, formatInfo: { errorCorrectionLevel: 0, dataMask: 4 } },\n    { bits: 0x6318, formatInfo: { errorCorrectionLevel: 0, dataMask: 5 } },\n    { bits: 0x6C41, formatInfo: { errorCorrectionLevel: 0, dataMask: 6 } },\n    { bits: 0x6976, formatInfo: { errorCorrectionLevel: 0, dataMask: 7 } },\n    { bits: 0x1689, formatInfo: { errorCorrectionLevel: 3, dataMask: 0 } },\n    { bits: 0x13BE, formatInfo: { errorCorrectionLevel: 3, dataMask: 1 } },\n    { bits: 0x1CE7, formatInfo: { errorCorrectionLevel: 3, dataMask: 2 } },\n    { bits: 0x19D0, formatInfo: { errorCorrectionLevel: 3, dataMask: 3 } },\n    { bits: 0x0762, formatInfo: { errorCorrectionLevel: 3, dataMask: 4 } },\n    { bits: 0x0255, formatInfo: { errorCorrectionLevel: 3, dataMask: 5 } },\n    { bits: 0x0D0C, formatInfo: { errorCorrectionLevel: 3, dataMask: 6 } },\n    { bits: 0x083B, formatInfo: { errorCorrectionLevel: 3, dataMask: 7 } },\n    { bits: 0x355F, formatInfo: { errorCorrectionLevel: 2, dataMask: 0 } },\n    { bits: 0x3068, formatInfo: { errorCorrectionLevel: 2, dataMask: 1 } },\n    { bits: 0x3F31, formatInfo: { errorCorrectionLevel: 2, dataMask: 2 } },\n    { bits: 0x3A06, formatInfo: { errorCorrectionLevel: 2, dataMask: 3 } },\n    { bits: 0x24B4, formatInfo: { errorCorrectionLevel: 2, dataMask: 4 } },\n    { bits: 0x2183, formatInfo: { errorCorrectionLevel: 2, dataMask: 5 } },\n    { bits: 0x2EDA, formatInfo: { errorCorrectionLevel: 2, dataMask: 6 } },\n    { bits: 0x2BED, formatInfo: { errorCorrectionLevel: 2, dataMask: 7 } },\n];\nconst DATA_MASKS = [\n    (p) => ((p.y + p.x) % 2) === 0,\n    (p) => (p.y % 2) === 0,\n    (p) => p.x % 3 === 0,\n    (p) => (p.y + p.x) % 3 === 0,\n    (p) => (Math.floor(p.y / 2) + Math.floor(p.x / 3)) % 2 === 0,\n    (p) => ((p.x * p.y) % 2) + ((p.x * p.y) % 3) === 0,\n    (p) => ((((p.y * p.x) % 2) + (p.y * p.x) % 3) % 2) === 0,\n    (p) => ((((p.y + p.x) % 2) + (p.y * p.x) % 3) % 2) === 0,\n];\nfunction buildFunctionPatternMask(version) {\n    const dimension = 17 + 4 * version.versionNumber;\n    const matrix = BitMatrix.createEmpty(dimension, dimension);\n    matrix.setRegion(0, 0, 9, 9, true); // Top left finder pattern + separator + format\n    matrix.setRegion(dimension - 8, 0, 8, 9, true); // Top right finder pattern + separator + format\n    matrix.setRegion(0, dimension - 8, 9, 8, true); // Bottom left finder pattern + separator + format\n    // Alignment patterns\n    for (const x of version.alignmentPatternCenters) {\n        for (const y of version.alignmentPatternCenters) {\n            if (!(x === 6 && y === 6 || x === 6 && y === dimension - 7 || x === dimension - 7 && y === 6)) {\n                matrix.setRegion(x - 2, y - 2, 5, 5, true);\n            }\n        }\n    }\n    matrix.setRegion(6, 9, 1, dimension - 17, true); // Vertical timing pattern\n    matrix.setRegion(9, 6, dimension - 17, 1, true); // Horizontal timing pattern\n    if (version.versionNumber > 6) {\n        matrix.setRegion(dimension - 11, 0, 3, 6, true); // Version info, top right\n        matrix.setRegion(0, dimension - 11, 6, 3, true); // Version info, bottom left\n    }\n    return matrix;\n}\nfunction readCodewords(matrix, version, formatInfo) {\n    const dataMask = DATA_MASKS[formatInfo.dataMask];\n    const dimension = matrix.height;\n    const functionPatternMask = buildFunctionPatternMask(version);\n    const codewords = [];\n    let currentByte = 0;\n    let bitsRead = 0;\n    // Read columns in pairs, from right to left\n    let readingUp = true;\n    for (let columnIndex = dimension - 1; columnIndex > 0; columnIndex -= 2) {\n        if (columnIndex === 6) { // Skip whole column with vertical alignment pattern;\n            columnIndex--;\n        }\n        for (let i = 0; i < dimension; i++) {\n            const y = readingUp ? dimension - 1 - i : i;\n            for (let columnOffset = 0; columnOffset < 2; columnOffset++) {\n                const x = columnIndex - columnOffset;\n                if (!functionPatternMask.get(x, y)) {\n                    bitsRead++;\n                    let bit = matrix.get(x, y);\n                    if (dataMask({ y, x })) {\n                        bit = !bit;\n                    }\n                    currentByte = pushBit(bit, currentByte);\n                    if (bitsRead === 8) { // Whole bytes\n                        codewords.push(currentByte);\n                        bitsRead = 0;\n                        currentByte = 0;\n                    }\n                }\n            }\n        }\n        readingUp = !readingUp;\n    }\n    return codewords;\n}\nfunction readVersion(matrix) {\n    const dimension = matrix.height;\n    const provisionalVersion = Math.floor((dimension - 17) / 4);\n    if (provisionalVersion <= 6) { // 6 and under dont have version info in the QR code\n        return VERSIONS[provisionalVersion - 1];\n    }\n    let topRightVersionBits = 0;\n    for (let y = 5; y >= 0; y--) {\n        for (let x = dimension - 9; x >= dimension - 11; x--) {\n            topRightVersionBits = pushBit(matrix.get(x, y), topRightVersionBits);\n        }\n    }\n    let bottomLeftVersionBits = 0;\n    for (let x = 5; x >= 0; x--) {\n        for (let y = dimension - 9; y >= dimension - 11; y--) {\n            bottomLeftVersionBits = pushBit(matrix.get(x, y), bottomLeftVersionBits);\n        }\n    }\n    let bestDifference = Infinity;\n    let bestVersion;\n    for (const version of VERSIONS) {\n        if (version.infoBits === topRightVersionBits || version.infoBits === bottomLeftVersionBits) {\n            return version;\n        }\n        let difference = numBitsDiffering(topRightVersionBits, version.infoBits);\n        if (difference < bestDifference) {\n            bestVersion = version;\n            bestDifference = difference;\n        }\n        difference = numBitsDiffering(bottomLeftVersionBits, version.infoBits);\n        if (difference < bestDifference) {\n            bestVersion = version;\n            bestDifference = difference;\n        }\n    }\n    // We can tolerate up to 3 bits of error since no two version info codewords will\n    // differ in less than 8 bits.\n    if (bestDifference <= 3) {\n        return bestVersion;\n    }\n}\nfunction readFormatInformation(matrix) {\n    let topLeftFormatInfoBits = 0;\n    for (let x = 0; x <= 8; x++) {\n        if (x !== 6) { // Skip timing pattern bit\n            topLeftFormatInfoBits = pushBit(matrix.get(x, 8), topLeftFormatInfoBits);\n        }\n    }\n    for (let y = 7; y >= 0; y--) {\n        if (y !== 6) { // Skip timing pattern bit\n            topLeftFormatInfoBits = pushBit(matrix.get(8, y), topLeftFormatInfoBits);\n        }\n    }\n    const dimension = matrix.height;\n    let topRightBottomRightFormatInfoBits = 0;\n    for (let y = dimension - 1; y >= dimension - 7; y--) { // bottom left\n        topRightBottomRightFormatInfoBits = pushBit(matrix.get(8, y), topRightBottomRightFormatInfoBits);\n    }\n    for (let x = dimension - 8; x < dimension; x++) { // top right\n        topRightBottomRightFormatInfoBits = pushBit(matrix.get(x, 8), topRightBottomRightFormatInfoBits);\n    }\n    let bestDifference = Infinity;\n    let bestFormatInfo = null;\n    for (const { bits, formatInfo } of FORMAT_INFO_TABLE) {\n        if (bits === topLeftFormatInfoBits || bits === topRightBottomRightFormatInfoBits) {\n            return formatInfo;\n        }\n        let difference = numBitsDiffering(topLeftFormatInfoBits, bits);\n        if (difference < bestDifference) {\n            bestFormatInfo = formatInfo;\n            bestDifference = difference;\n        }\n        if (topLeftFormatInfoBits !== topRightBottomRightFormatInfoBits) { // also try the other option\n            difference = numBitsDiffering(topRightBottomRightFormatInfoBits, bits);\n            if (difference < bestDifference) {\n                bestFormatInfo = formatInfo;\n                bestDifference = difference;\n            }\n        }\n    }\n    // Hamming distance of the 32 masked codes is 7, by construction, so <= 3 bits differing means we found a match\n    if (bestDifference <= 3) {\n        return bestFormatInfo;\n    }\n    return null;\n}\nfunction getDataBlocks(codewords, version, ecLevel) {\n    const ecInfo = version.errorCorrectionLevels[ecLevel];\n    const dataBlocks = [];\n    let totalCodewords = 0;\n    ecInfo.ecBlocks.forEach(block => {\n        for (let i = 0; i < block.numBlocks; i++) {\n            dataBlocks.push({ numDataCodewords: block.dataCodewordsPerBlock, codewords: [] });\n            totalCodewords += block.dataCodewordsPerBlock + ecInfo.ecCodewordsPerBlock;\n        }\n    });\n    // In some cases the QR code will be malformed enough that we pull off more or less than we should.\n    // If we pull off less there's nothing we can do.\n    // If we pull off more we can safely truncate\n    if (codewords.length < totalCodewords) {\n        return null;\n    }\n    codewords = codewords.slice(0, totalCodewords);\n    const shortBlockSize = ecInfo.ecBlocks[0].dataCodewordsPerBlock;\n    // Pull codewords to fill the blocks up to the minimum size\n    for (let i = 0; i < shortBlockSize; i++) {\n        for (const dataBlock of dataBlocks) {\n            dataBlock.codewords.push(codewords.shift());\n        }\n    }\n    // If there are any large blocks, pull codewords to fill the last element of those\n    if (ecInfo.ecBlocks.length > 1) {\n        const smallBlockCount = ecInfo.ecBlocks[0].numBlocks;\n        const largeBlockCount = ecInfo.ecBlocks[1].numBlocks;\n        for (let i = 0; i < largeBlockCount; i++) {\n            dataBlocks[smallBlockCount + i].codewords.push(codewords.shift());\n        }\n    }\n    // Add the rest of the codewords to the blocks. These are the error correction codewords.\n    while (codewords.length > 0) {\n        for (const dataBlock of dataBlocks) {\n            dataBlock.codewords.push(codewords.shift());\n        }\n    }\n    return dataBlocks;\n}\nfunction decodeMatrix(matrix) {\n    const version = readVersion(matrix);\n    if (!version) {\n        return null;\n    }\n    const formatInfo = readFormatInformation(matrix);\n    if (!formatInfo) {\n        return null;\n    }\n    const codewords = readCodewords(matrix, version, formatInfo);\n    const dataBlocks = getDataBlocks(codewords, version, formatInfo.errorCorrectionLevel);\n    if (!dataBlocks) {\n        return null;\n    }\n    // Count total number of data bytes\n    const totalBytes = dataBlocks.reduce((a, b) => a + b.numDataCodewords, 0);\n    const resultBytes = new Uint8ClampedArray(totalBytes);\n    let resultIndex = 0;\n    for (const dataBlock of dataBlocks) {\n        const correctedBytes = decode$1(dataBlock.codewords, dataBlock.codewords.length - dataBlock.numDataCodewords);\n        if (!correctedBytes) {\n            return null;\n        }\n        for (let i = 0; i < dataBlock.numDataCodewords; i++) {\n            resultBytes[resultIndex++] = correctedBytes[i];\n        }\n    }\n    try {\n        return decode(resultBytes, version.versionNumber);\n    }\n    catch (_a) {\n        return null;\n    }\n}\nfunction decode$2(matrix) {\n    if (matrix == null) {\n        return null;\n    }\n    const result = decodeMatrix(matrix);\n    if (result) {\n        return result;\n    }\n    // Decoding didn't work, try mirroring the QR across the topLeft -> bottomRight line.\n    for (let x = 0; x < matrix.width; x++) {\n        for (let y = x + 1; y < matrix.height; y++) {\n            if (matrix.get(x, y) !== matrix.get(y, x)) {\n                matrix.set(x, y, !matrix.get(x, y));\n                matrix.set(y, x, !matrix.get(y, x));\n            }\n        }\n    }\n    return decodeMatrix(matrix);\n}\n\nfunction squareToQuadrilateral(p1, p2, p3, p4) {\n    const dx3 = p1.x - p2.x + p3.x - p4.x;\n    const dy3 = p1.y - p2.y + p3.y - p4.y;\n    if (dx3 === 0 && dy3 === 0) { // Affine\n        return {\n            a11: p2.x - p1.x,\n            a12: p2.y - p1.y,\n            a13: 0,\n            a21: p3.x - p2.x,\n            a22: p3.y - p2.y,\n            a23: 0,\n            a31: p1.x,\n            a32: p1.y,\n            a33: 1,\n        };\n    }\n    else {\n        const dx1 = p2.x - p3.x;\n        const dx2 = p4.x - p3.x;\n        const dy1 = p2.y - p3.y;\n        const dy2 = p4.y - p3.y;\n        const denominator = dx1 * dy2 - dx2 * dy1;\n        const a13 = (dx3 * dy2 - dx2 * dy3) / denominator;\n        const a23 = (dx1 * dy3 - dx3 * dy1) / denominator;\n        return {\n            a11: p2.x - p1.x + a13 * p2.x,\n            a12: p2.y - p1.y + a13 * p2.y,\n            a13,\n            a21: p4.x - p1.x + a23 * p4.x,\n            a22: p4.y - p1.y + a23 * p4.y,\n            a23,\n            a31: p1.x,\n            a32: p1.y,\n            a33: 1,\n        };\n    }\n}\nfunction quadrilateralToSquare(p1, p2, p3, p4) {\n    // Here, the adjoint serves as the inverse:\n    const sToQ = squareToQuadrilateral(p1, p2, p3, p4);\n    return {\n        a11: sToQ.a22 * sToQ.a33 - sToQ.a23 * sToQ.a32,\n        a12: sToQ.a13 * sToQ.a32 - sToQ.a12 * sToQ.a33,\n        a13: sToQ.a12 * sToQ.a23 - sToQ.a13 * sToQ.a22,\n        a21: sToQ.a23 * sToQ.a31 - sToQ.a21 * sToQ.a33,\n        a22: sToQ.a11 * sToQ.a33 - sToQ.a13 * sToQ.a31,\n        a23: sToQ.a13 * sToQ.a21 - sToQ.a11 * sToQ.a23,\n        a31: sToQ.a21 * sToQ.a32 - sToQ.a22 * sToQ.a31,\n        a32: sToQ.a12 * sToQ.a31 - sToQ.a11 * sToQ.a32,\n        a33: sToQ.a11 * sToQ.a22 - sToQ.a12 * sToQ.a21,\n    };\n}\nfunction times(a, b) {\n    return {\n        a11: a.a11 * b.a11 + a.a21 * b.a12 + a.a31 * b.a13,\n        a12: a.a12 * b.a11 + a.a22 * b.a12 + a.a32 * b.a13,\n        a13: a.a13 * b.a11 + a.a23 * b.a12 + a.a33 * b.a13,\n        a21: a.a11 * b.a21 + a.a21 * b.a22 + a.a31 * b.a23,\n        a22: a.a12 * b.a21 + a.a22 * b.a22 + a.a32 * b.a23,\n        a23: a.a13 * b.a21 + a.a23 * b.a22 + a.a33 * b.a23,\n        a31: a.a11 * b.a31 + a.a21 * b.a32 + a.a31 * b.a33,\n        a32: a.a12 * b.a31 + a.a22 * b.a32 + a.a32 * b.a33,\n        a33: a.a13 * b.a31 + a.a23 * b.a32 + a.a33 * b.a33,\n    };\n}\nfunction extract(image, location) {\n    const qToS = quadrilateralToSquare({ x: 3.5, y: 3.5 }, { x: location.dimension - 3.5, y: 3.5 }, { x: location.dimension - 6.5, y: location.dimension - 6.5 }, { x: 3.5, y: location.dimension - 3.5 });\n    const sToQ = squareToQuadrilateral(location.topLeft, location.topRight, location.alignmentPattern, location.bottomLeft);\n    const transform = times(sToQ, qToS);\n    const matrix = BitMatrix.createEmpty(location.dimension, location.dimension);\n    const mappingFunction = (x, y) => {\n        const denominator = transform.a13 * x + transform.a23 * y + transform.a33;\n        return {\n            x: (transform.a11 * x + transform.a21 * y + transform.a31) / denominator,\n            y: (transform.a12 * x + transform.a22 * y + transform.a32) / denominator,\n        };\n    };\n    for (let y = 0; y < location.dimension; y++) {\n        for (let x = 0; x < location.dimension; x++) {\n            const xValue = x + 0.5;\n            const yValue = y + 0.5;\n            const sourcePixel = mappingFunction(xValue, yValue);\n            matrix.set(x, y, image.get(Math.floor(sourcePixel.x), Math.floor(sourcePixel.y)));\n        }\n    }\n    return {\n        matrix,\n        mappingFunction,\n    };\n}\n\nconst MAX_FINDERPATTERNS_TO_SEARCH = 4;\nconst MIN_QUAD_RATIO = 0.5;\nconst MAX_QUAD_RATIO = 1.5;\nconst distance = (a, b) => Math.sqrt(Math.pow((b.x - a.x), 2) + Math.pow((b.y - a.y), 2));\nfunction sum(values) {\n    return values.reduce((a, b) => a + b);\n}\n// Takes three finder patterns and organizes them into topLeft, topRight, etc\nfunction reorderFinderPatterns(pattern1, pattern2, pattern3) {\n    // Find distances between pattern centers\n    const oneTwoDistance = distance(pattern1, pattern2);\n    const twoThreeDistance = distance(pattern2, pattern3);\n    const oneThreeDistance = distance(pattern1, pattern3);\n    let bottomLeft;\n    let topLeft;\n    let topRight;\n    // Assume one closest to other two is B; A and C will just be guesses at first\n    if (twoThreeDistance >= oneTwoDistance && twoThreeDistance >= oneThreeDistance) {\n        [bottomLeft, topLeft, topRight] = [pattern2, pattern1, pattern3];\n    }\n    else if (oneThreeDistance >= twoThreeDistance && oneThreeDistance >= oneTwoDistance) {\n        [bottomLeft, topLeft, topRight] = [pattern1, pattern2, pattern3];\n    }\n    else {\n        [bottomLeft, topLeft, topRight] = [pattern1, pattern3, pattern2];\n    }\n    // Use cross product to figure out whether bottomLeft (A) and topRight (C) are correct or flipped in relation to topLeft (B)\n    // This asks whether BC x BA has a positive z component, which is the arrangement we want. If it's negative, then\n    // we've got it flipped around and should swap topRight and bottomLeft.\n    if (((topRight.x - topLeft.x) * (bottomLeft.y - topLeft.y)) - ((topRight.y - topLeft.y) * (bottomLeft.x - topLeft.x)) < 0) {\n        [bottomLeft, topRight] = [topRight, bottomLeft];\n    }\n    return { bottomLeft, topLeft, topRight };\n}\n// Computes the dimension (number of modules on a side) of the QR Code based on the position of the finder patterns\nfunction computeDimension(topLeft, topRight, bottomLeft, matrix) {\n    const moduleSize = (sum(countBlackWhiteRun(topLeft, bottomLeft, matrix, 5)) / 7 + // Divide by 7 since the ratio is 1:1:3:1:1\n        sum(countBlackWhiteRun(topLeft, topRight, matrix, 5)) / 7 +\n        sum(countBlackWhiteRun(bottomLeft, topLeft, matrix, 5)) / 7 +\n        sum(countBlackWhiteRun(topRight, topLeft, matrix, 5)) / 7) / 4;\n    if (moduleSize < 1) {\n        throw new Error(\"Invalid module size\");\n    }\n    const topDimension = Math.round(distance(topLeft, topRight) / moduleSize);\n    const sideDimension = Math.round(distance(topLeft, bottomLeft) / moduleSize);\n    let dimension = Math.floor((topDimension + sideDimension) / 2) + 7;\n    switch (dimension % 4) {\n        case 0:\n            dimension++;\n            break;\n        case 2:\n            dimension--;\n            break;\n    }\n    return { dimension, moduleSize };\n}\n// Takes an origin point and an end point and counts the sizes of the black white run from the origin towards the end point.\n// Returns an array of elements, representing the pixel size of the black white run.\n// Uses a variant of http://en.wikipedia.org/wiki/Bresenham's_line_algorithm\nfunction countBlackWhiteRunTowardsPoint(origin, end, matrix, length) {\n    const switchPoints = [{ x: Math.floor(origin.x), y: Math.floor(origin.y) }];\n    const steep = Math.abs(end.y - origin.y) > Math.abs(end.x - origin.x);\n    let fromX;\n    let fromY;\n    let toX;\n    let toY;\n    if (steep) {\n        fromX = Math.floor(origin.y);\n        fromY = Math.floor(origin.x);\n        toX = Math.floor(end.y);\n        toY = Math.floor(end.x);\n    }\n    else {\n        fromX = Math.floor(origin.x);\n        fromY = Math.floor(origin.y);\n        toX = Math.floor(end.x);\n        toY = Math.floor(end.y);\n    }\n    const dx = Math.abs(toX - fromX);\n    const dy = Math.abs(toY - fromY);\n    let error = Math.floor(-dx / 2);\n    const xStep = fromX < toX ? 1 : -1;\n    const yStep = fromY < toY ? 1 : -1;\n    let currentPixel = true;\n    // Loop up until x == toX, but not beyond\n    for (let x = fromX, y = fromY; x !== toX + xStep; x += xStep) {\n        // Does current pixel mean we have moved white to black or vice versa?\n        // Scanning black in state 0,2 and white in state 1, so if we find the wrong\n        // color, advance to next state or end if we are in state 2 already\n        const realX = steep ? y : x;\n        const realY = steep ? x : y;\n        if (matrix.get(realX, realY) !== currentPixel) {\n            currentPixel = !currentPixel;\n            switchPoints.push({ x: realX, y: realY });\n            if (switchPoints.length === length + 1) {\n                break;\n            }\n        }\n        error += dy;\n        if (error > 0) {\n            if (y === toY) {\n                break;\n            }\n            y += yStep;\n            error -= dx;\n        }\n    }\n    const distances = [];\n    for (let i = 0; i < length; i++) {\n        if (switchPoints[i] && switchPoints[i + 1]) {\n            distances.push(distance(switchPoints[i], switchPoints[i + 1]));\n        }\n        else {\n            distances.push(0);\n        }\n    }\n    return distances;\n}\n// Takes an origin point and an end point and counts the sizes of the black white run in the origin point\n// along the line that intersects with the end point. Returns an array of elements, representing the pixel sizes\n// of the black white run. Takes a length which represents the number of switches from black to white to look for.\nfunction countBlackWhiteRun(origin, end, matrix, length) {\n    const rise = end.y - origin.y;\n    const run = end.x - origin.x;\n    const towardsEnd = countBlackWhiteRunTowardsPoint(origin, end, matrix, Math.ceil(length / 2));\n    const awayFromEnd = countBlackWhiteRunTowardsPoint(origin, { x: origin.x - run, y: origin.y - rise }, matrix, Math.ceil(length / 2));\n    const middleValue = towardsEnd.shift() + awayFromEnd.shift() - 1; // Substract one so we don't double count a pixel\n    return awayFromEnd.concat(middleValue).concat(...towardsEnd);\n}\n// Takes in a black white run and an array of expected ratios. Returns the average size of the run as well as the \"error\" -\n// that is the amount the run diverges from the expected ratio\nfunction scoreBlackWhiteRun(sequence, ratios) {\n    const averageSize = sum(sequence) / sum(ratios);\n    let error = 0;\n    ratios.forEach((ratio, i) => {\n        error += Math.pow((sequence[i] - ratio * averageSize), 2);\n    });\n    return { averageSize, error };\n}\n// Takes an X,Y point and an array of sizes and scores the point against those ratios.\n// For example for a finder pattern takes the ratio list of 1:1:3:1:1 and checks horizontal, vertical and diagonal ratios\n// against that.\nfunction scorePattern(point, ratios, matrix) {\n    try {\n        const horizontalRun = countBlackWhiteRun(point, { x: -1, y: point.y }, matrix, ratios.length);\n        const verticalRun = countBlackWhiteRun(point, { x: point.x, y: -1 }, matrix, ratios.length);\n        const topLeftPoint = {\n            x: Math.max(0, point.x - point.y) - 1,\n            y: Math.max(0, point.y - point.x) - 1,\n        };\n        const topLeftBottomRightRun = countBlackWhiteRun(point, topLeftPoint, matrix, ratios.length);\n        const bottomLeftPoint = {\n            x: Math.min(matrix.width, point.x + point.y) + 1,\n            y: Math.min(matrix.height, point.y + point.x) + 1,\n        };\n        const bottomLeftTopRightRun = countBlackWhiteRun(point, bottomLeftPoint, matrix, ratios.length);\n        const horzError = scoreBlackWhiteRun(horizontalRun, ratios);\n        const vertError = scoreBlackWhiteRun(verticalRun, ratios);\n        const diagDownError = scoreBlackWhiteRun(topLeftBottomRightRun, ratios);\n        const diagUpError = scoreBlackWhiteRun(bottomLeftTopRightRun, ratios);\n        const ratioError = Math.sqrt(horzError.error * horzError.error +\n            vertError.error * vertError.error +\n            diagDownError.error * diagDownError.error +\n            diagUpError.error * diagUpError.error);\n        const avgSize = (horzError.averageSize + vertError.averageSize + diagDownError.averageSize + diagUpError.averageSize) / 4;\n        const sizeError = (Math.pow((horzError.averageSize - avgSize), 2) +\n            Math.pow((vertError.averageSize - avgSize), 2) +\n            Math.pow((diagDownError.averageSize - avgSize), 2) +\n            Math.pow((diagUpError.averageSize - avgSize), 2)) / avgSize;\n        return ratioError + sizeError;\n    }\n    catch (_a) {\n        return Infinity;\n    }\n}\nfunction locate(matrix) {\n    const finderPatternQuads = [];\n    let activeFinderPatternQuads = [];\n    const alignmentPatternQuads = [];\n    let activeAlignmentPatternQuads = [];\n    for (let y = 0; y <= matrix.height; y++) {\n        let length = 0;\n        let lastBit = false;\n        let scans = [0, 0, 0, 0, 0];\n        for (let x = -1; x <= matrix.width; x++) {\n            const v = matrix.get(x, y);\n            if (v === lastBit) {\n                length++;\n            }\n            else {\n                scans = [scans[1], scans[2], scans[3], scans[4], length];\n                length = 1;\n                lastBit = v;\n                // Do the last 5 color changes ~ match the expected ratio for a finder pattern? 1:1:3:1:1 of b:w:b:w:b\n                const averageFinderPatternBlocksize = sum(scans) / 7;\n                const validFinderPattern = Math.abs(scans[0] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize &&\n                    Math.abs(scans[1] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize &&\n                    Math.abs(scans[2] - 3 * averageFinderPatternBlocksize) < 3 * averageFinderPatternBlocksize &&\n                    Math.abs(scans[3] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize &&\n                    Math.abs(scans[4] - averageFinderPatternBlocksize) < averageFinderPatternBlocksize &&\n                    !v; // And make sure the current pixel is white since finder patterns are bordered in white\n                // Do the last 3 color changes ~ match the expected ratio for an alignment pattern? 1:1:1 of w:b:w\n                const averageAlignmentPatternBlocksize = sum(scans.slice(-3)) / 3;\n                const validAlignmentPattern = Math.abs(scans[2] - averageAlignmentPatternBlocksize) < averageAlignmentPatternBlocksize &&\n                    Math.abs(scans[3] - averageAlignmentPatternBlocksize) < averageAlignmentPatternBlocksize &&\n                    Math.abs(scans[4] - averageAlignmentPatternBlocksize) < averageAlignmentPatternBlocksize &&\n                    v; // Is the current pixel black since alignment patterns are bordered in black\n                if (validFinderPattern) {\n                    // Compute the start and end x values of the large center black square\n                    const endX = x - scans[3] - scans[4];\n                    const startX = endX - scans[2];\n                    const line = { startX, endX, y };\n                    // Is there a quad directly above the current spot? If so, extend it with the new line. Otherwise, create a new quad with\n                    // that line as the starting point.\n                    const matchingQuads = activeFinderPatternQuads.filter(q => (startX >= q.bottom.startX && startX <= q.bottom.endX) ||\n                        (endX >= q.bottom.startX && startX <= q.bottom.endX) ||\n                        (startX <= q.bottom.startX && endX >= q.bottom.endX && ((scans[2] / (q.bottom.endX - q.bottom.startX)) < MAX_QUAD_RATIO &&\n                            (scans[2] / (q.bottom.endX - q.bottom.startX)) > MIN_QUAD_RATIO)));\n                    if (matchingQuads.length > 0) {\n                        matchingQuads[0].bottom = line;\n                    }\n                    else {\n                        activeFinderPatternQuads.push({ top: line, bottom: line });\n                    }\n                }\n                if (validAlignmentPattern) {\n                    // Compute the start and end x values of the center black square\n                    const endX = x - scans[4];\n                    const startX = endX - scans[3];\n                    const line = { startX, y, endX };\n                    // Is there a quad directly above the current spot? If so, extend it with the new line. Otherwise, create a new quad with\n                    // that line as the starting point.\n                    const matchingQuads = activeAlignmentPatternQuads.filter(q => (startX >= q.bottom.startX && startX <= q.bottom.endX) ||\n                        (endX >= q.bottom.startX && startX <= q.bottom.endX) ||\n                        (startX <= q.bottom.startX && endX >= q.bottom.endX && ((scans[2] / (q.bottom.endX - q.bottom.startX)) < MAX_QUAD_RATIO &&\n                            (scans[2] / (q.bottom.endX - q.bottom.startX)) > MIN_QUAD_RATIO)));\n                    if (matchingQuads.length > 0) {\n                        matchingQuads[0].bottom = line;\n                    }\n                    else {\n                        activeAlignmentPatternQuads.push({ top: line, bottom: line });\n                    }\n                }\n            }\n        }\n        finderPatternQuads.push(...activeFinderPatternQuads.filter(q => q.bottom.y !== y && q.bottom.y - q.top.y >= 2));\n        activeFinderPatternQuads = activeFinderPatternQuads.filter(q => q.bottom.y === y);\n        alignmentPatternQuads.push(...activeAlignmentPatternQuads.filter(q => q.bottom.y !== y));\n        activeAlignmentPatternQuads = activeAlignmentPatternQuads.filter(q => q.bottom.y === y);\n    }\n    finderPatternQuads.push(...activeFinderPatternQuads.filter(q => q.bottom.y - q.top.y >= 2));\n    alignmentPatternQuads.push(...activeAlignmentPatternQuads);\n    const finderPatternGroups = finderPatternQuads\n        .filter(q => q.bottom.y - q.top.y >= 2) // All quads must be at least 2px tall since the center square is larger than a block\n        .map(q => {\n        const x = (q.top.startX + q.top.endX + q.bottom.startX + q.bottom.endX) / 4;\n        const y = (q.top.y + q.bottom.y + 1) / 2;\n        if (!matrix.get(Math.round(x), Math.round(y))) {\n            return;\n        }\n        const lengths = [q.top.endX - q.top.startX, q.bottom.endX - q.bottom.startX, q.bottom.y - q.top.y + 1];\n        const size = sum(lengths) / lengths.length;\n        const score = scorePattern({ x: Math.round(x), y: Math.round(y) }, [1, 1, 3, 1, 1], matrix);\n        return { score, x, y, size };\n    })\n        .filter(q => !!q) // Filter out any rejected quads from above\n        .sort((a, b) => a.score - b.score)\n        // Now take the top finder pattern options and try to find 2 other options with a similar size.\n        .map((point, i, finderPatterns) => {\n        if (i > MAX_FINDERPATTERNS_TO_SEARCH) {\n            return null;\n        }\n        const otherPoints = finderPatterns\n            .filter((p, ii) => i !== ii)\n            .map(p => ({ x: p.x, y: p.y, score: p.score + (Math.pow((p.size - point.size), 2)) / point.size, size: p.size }))\n            .sort((a, b) => a.score - b.score);\n        if (otherPoints.length < 2) {\n            return null;\n        }\n        const score = point.score + otherPoints[0].score + otherPoints[1].score;\n        return { points: [point].concat(otherPoints.slice(0, 2)), score };\n    })\n        .filter(q => !!q) // Filter out any rejected finder patterns from above\n        .sort((a, b) => a.score - b.score);\n    if (finderPatternGroups.length === 0) {\n        return null;\n    }\n    const { topRight, topLeft, bottomLeft } = reorderFinderPatterns(finderPatternGroups[0].points[0], finderPatternGroups[0].points[1], finderPatternGroups[0].points[2]);\n    // Now that we've found the three finder patterns we can determine the blockSize and the size of the QR code.\n    // We'll use these to help find the alignment pattern but also later when we do the extraction.\n    let dimension;\n    let moduleSize;\n    try {\n        ({ dimension, moduleSize } = computeDimension(topLeft, topRight, bottomLeft, matrix));\n    }\n    catch (e) {\n        return null;\n    }\n    // Now find the alignment pattern\n    const bottomRightFinderPattern = {\n        x: topRight.x - topLeft.x + bottomLeft.x,\n        y: topRight.y - topLeft.y + bottomLeft.y,\n    };\n    const modulesBetweenFinderPatterns = ((distance(topLeft, bottomLeft) + distance(topLeft, topRight)) / 2 / moduleSize);\n    const correctionToTopLeft = 1 - (3 / modulesBetweenFinderPatterns);\n    const expectedAlignmentPattern = {\n        x: topLeft.x + correctionToTopLeft * (bottomRightFinderPattern.x - topLeft.x),\n        y: topLeft.y + correctionToTopLeft * (bottomRightFinderPattern.y - topLeft.y),\n    };\n    const alignmentPatterns = alignmentPatternQuads\n        .map(q => {\n        const x = (q.top.startX + q.top.endX + q.bottom.startX + q.bottom.endX) / 4;\n        const y = (q.top.y + q.bottom.y + 1) / 2;\n        if (!matrix.get(Math.floor(x), Math.floor(y))) {\n            return;\n        }\n        const lengths = [q.top.endX - q.top.startX, q.bottom.endX - q.bottom.startX, (q.bottom.y - q.top.y + 1)];\n        const size = sum(lengths) / lengths.length;\n        const sizeScore = scorePattern({ x: Math.floor(x), y: Math.floor(y) }, [1, 1, 1], matrix);\n        const score = sizeScore + distance({ x, y }, expectedAlignmentPattern);\n        return { x, y, score };\n    })\n        .filter(v => !!v)\n        .sort((a, b) => a.score - b.score);\n    // If there are less than 15 modules between finder patterns it's a version 1 QR code and as such has no alignmemnt pattern\n    // so we can only use our best guess.\n    const alignmentPattern = modulesBetweenFinderPatterns >= 15 && alignmentPatterns.length ? alignmentPatterns[0] : expectedAlignmentPattern;\n    return {\n        alignmentPattern: { x: alignmentPattern.x, y: alignmentPattern.y },\n        bottomLeft: { x: bottomLeft.x, y: bottomLeft.y },\n        dimension,\n        topLeft: { x: topLeft.x, y: topLeft.y },\n        topRight: { x: topRight.x, y: topRight.y },\n    };\n}\n\nfunction scan(matrix) {\n    const location = locate(matrix);\n    if (!location) {\n        return null;\n    }\n    const extracted = extract(matrix, location);\n    const decoded = decode$2(extracted.matrix);\n    if (!decoded) {\n        return null;\n    }\n    return {\n        binaryData: decoded.bytes,\n        data: decoded.text,\n        chunks: decoded.chunks,\n        location: {\n            topRightCorner: extracted.mappingFunction(location.dimension, 0),\n            topLeftCorner: extracted.mappingFunction(0, 0),\n            bottomRightCorner: extracted.mappingFunction(location.dimension, location.dimension),\n            bottomLeftCorner: extracted.mappingFunction(0, location.dimension),\n            topRightFinderPattern: location.topRight,\n            topLeftFinderPattern: location.topLeft,\n            bottomLeftFinderPattern: location.bottomLeft,\n            bottomRightAlignmentPattern: location.alignmentPattern,\n        },\n    };\n}\nconst defaultOptions = {\n    inversionAttempts: \"attemptBoth\",\n    greyScaleWeights: {\n        red: 0.2126,\n        green: 0.7152,\n        blue: 0.0722,\n        useIntegerApproximation: false,\n    },\n    canOverwriteImage: true,\n};\nfunction mergeObject(target, src) {\n    Object.keys(src).forEach(opt => {\n        target[opt] = src[opt];\n    });\n}\nfunction jsQR(data, width, height, providedOptions = {}) {\n    const options = Object.create(null);\n    mergeObject(options, defaultOptions);\n    mergeObject(options, providedOptions);\n    const shouldInvert = options.inversionAttempts === \"attemptBoth\" || options.inversionAttempts === \"invertFirst\";\n    const tryInvertedFirst = options.inversionAttempts === \"onlyInvert\" || options.inversionAttempts === \"invertFirst\";\n    const { binarized, inverted } = binarize(data, width, height, shouldInvert, options.greyScaleWeights, options.canOverwriteImage);\n    let result = scan(tryInvertedFirst ? inverted : binarized);\n    if (!result && (options.inversionAttempts === \"attemptBoth\" || options.inversionAttempts === \"invertFirst\")) {\n        result = scan(tryInvertedFirst ? binarized : inverted);\n    }\n    return result;\n}\njsQR.default = jsQR;\n\nexport default jsQR;\n//# sourceMappingURL=jsQR.js.map\n","// Generated by BUCKLESCRIPT VERSION 5.0.2, PLEASE EDIT WITH CARE\n\nimport * as $$Array from \"../node_modules/bs-platform/lib/es6/array.js\";\nimport * as JsqrEs6 from \"jsqr-es6\";\nimport * as Caml_option from \"../node_modules/bs-platform/lib/es6/caml_option.js\";\n\nfunction getPointAsFloats(p) {\n  return /* tuple */[\n          p.x,\n          p.y\n        ];\n}\n\nfunction getMinAndMax(ary) {\n  var currentMin = /* record */[/* contents */Number.POSITIVE_INFINITY];\n  var currentMax = /* record */[/* contents */Number.NEGATIVE_INFINITY];\n  $$Array.iter((function (x) {\n          if (x < currentMin[0]) {\n            currentMin[0] = x;\n          }\n          if (x > currentMax[0]) {\n            currentMax[0] = x;\n            return /* () */0;\n          } else {\n            return 0;\n          }\n        }), ary);\n  return /* tuple */[\n          currentMin[0],\n          currentMax[0]\n        ];\n}\n\nfunction extractAABB(loc) {\n  var match = getPointAsFloats(loc.topLeftCorner);\n  var match$1 = getPointAsFloats(loc.topRightCorner);\n  var match$2 = getPointAsFloats(loc.bottomRightCorner);\n  var match$3 = getPointAsFloats(loc.bottomLeftCorner);\n  var match$4 = getMinAndMax(/* array */[\n        match[0],\n        match$1[0],\n        match$2[0],\n        match$3[0]\n      ]);\n  var minX = match$4[0];\n  var match$5 = getMinAndMax(/* array */[\n        match[1],\n        match$1[1],\n        match$2[1],\n        match$3[1]\n      ]);\n  var minY = match$5[0];\n  return /* record */[\n          /* x */minX | 0,\n          /* y */minY | 0,\n          /* w */Math.ceil(match$4[1] - minX) | 0,\n          /* h */Math.ceil(match$5[1] - minY) | 0\n        ];\n}\n\nfunction string_of_invertOptions(param) {\n  switch (param) {\n    case 0 : \n        return \"attemptBoth\";\n    case 1 : \n        return \"dontInvert\";\n    case 2 : \n        return \"onlyInvert\";\n    case 3 : \n        return \"invertFirst\";\n    \n  }\n}\n\nfunction jsQR(d, w, h, invertOptions) {\n  var optString = string_of_invertOptions(invertOptions);\n  return Caml_option.nullable_to_opt(JsqrEs6.default(d, w, h, {\n                  inversionAttempts: optString,\n                  canOverwriteImage: true\n                }));\n}\n\nvar defaultInversion = /* DontInvert */1;\n\nexport {\n  getPointAsFloats ,\n  getMinAndMax ,\n  extractAABB ,\n  string_of_invertOptions ,\n  defaultInversion ,\n  jsQR ,\n  \n}\n/* jsqr-es6 Not a pure module */\n","// Generated by BUCKLESCRIPT VERSION 5.0.2, PLEASE EDIT WITH CARE\n\nimport * as JsQr$QueerLoop from \"./JsQr.bs.js\";\n\nself.onmessage = (function (e) {\n    var match = e.data;\n    var maybeCode = JsQr$QueerLoop.jsQR(match[0], match[1], match[2], JsQr$QueerLoop.defaultInversion);\n    postMessage(maybeCode);\n    return /* () */0;\n  });\n\nexport {\n  \n}\n/*  Not a pure module */\n"],"names":["Caml_exceptions.create","jsQR","Caml_option.nullable_to_opt","JsqrEs6.default","JsQr$QueerLoop.jsQR","JsQr$QueerLoop.defaultInversion"],"mappings":"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E,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,oBAAoB,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE;EAC1E,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,oBAAoB,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE;EAC1E,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,oBAAoB,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE;EAC1E,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,oBAAoB,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE;EAC1E,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,oBAAoB,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE;EAC1E,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,oBAAoB,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE;EAC1E,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,oBAAoB,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE;EAC1E,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,oBAAoB,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE;EAC1E,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,oBAAoB,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE;EAC1E,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,oBAAoB,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE;EAC1E,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,oBAAoB,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE;EAC1E,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,oBAAoB,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE;EAC1E,IAAI,EAAE,IAAI,EAAE,MA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"}