/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/Index.bs.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/bs-platform/lib/js/array.js":
/*!**************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/array.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Curry = __webpack_require__(/*! ./curry.js */ \"./node_modules/bs-platform/lib/js/curry.js\");\nvar Caml_array = __webpack_require__(/*! ./caml_array.js */ \"./node_modules/bs-platform/lib/js/caml_array.js\");\nvar Caml_exceptions = __webpack_require__(/*! ./caml_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_exceptions.js\");\nvar Caml_js_exceptions = __webpack_require__(/*! ./caml_js_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_js_exceptions.js\");\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction init(l, f) {\n  if (l === 0) {\n    return /* array */[];\n  } else if (l < 0) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Array.init\"\n        ];\n  } else {\n    var res = Caml_array.caml_make_vect(l, Curry._1(f, 0));\n    for(var i = 1 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n      res[i] = Curry._1(f, i);\n    }\n    return res;\n  }\n}\n\nfunction make_matrix(sx, sy, init) {\n  var res = Caml_array.caml_make_vect(sx, /* array */[]);\n  for(var x = 0 ,x_finish = sx - 1 | 0; x <= x_finish; ++x){\n    res[x] = Caml_array.caml_make_vect(sy, init);\n  }\n  return res;\n}\n\nfunction copy(a) {\n  var l = a.length;\n  if (l === 0) {\n    return /* array */[];\n  } else {\n    return Caml_array.caml_array_sub(a, 0, l);\n  }\n}\n\nfunction append(a1, a2) {\n  var l1 = a1.length;\n  if (l1 === 0) {\n    return copy(a2);\n  } else if (a2.length === 0) {\n    return Caml_array.caml_array_sub(a1, 0, l1);\n  } else {\n    return a1.concat(a2);\n  }\n}\n\nfunction sub(a, ofs, len) {\n  if (len < 0 || ofs > (a.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Array.sub\"\n        ];\n  } else {\n    return Caml_array.caml_array_sub(a, ofs, len);\n  }\n}\n\nfunction fill(a, ofs, len, v) {\n  if (ofs < 0 || len < 0 || ofs > (a.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Array.fill\"\n        ];\n  } else {\n    for(var i = ofs ,i_finish = (ofs + len | 0) - 1 | 0; i <= i_finish; ++i){\n      a[i] = v;\n    }\n    return /* () */0;\n  }\n}\n\nfunction blit(a1, ofs1, a2, ofs2, len) {\n  if (len < 0 || ofs1 < 0 || ofs1 > (a1.length - len | 0) || ofs2 < 0 || ofs2 > (a2.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Array.blit\"\n        ];\n  } else {\n    return Caml_array.caml_array_blit(a1, ofs1, a2, ofs2, len);\n  }\n}\n\nfunction iter(f, a) {\n  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){\n    Curry._1(f, a[i]);\n  }\n  return /* () */0;\n}\n\nfunction map(f, a) {\n  var l = a.length;\n  if (l === 0) {\n    return /* array */[];\n  } else {\n    var r = Caml_array.caml_make_vect(l, Curry._1(f, a[0]));\n    for(var i = 1 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n      r[i] = Curry._1(f, a[i]);\n    }\n    return r;\n  }\n}\n\nfunction iteri(f, a) {\n  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){\n    Curry._2(f, i, a[i]);\n  }\n  return /* () */0;\n}\n\nfunction mapi(f, a) {\n  var l = a.length;\n  if (l === 0) {\n    return /* array */[];\n  } else {\n    var r = Caml_array.caml_make_vect(l, Curry._2(f, 0, a[0]));\n    for(var i = 1 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n      r[i] = Curry._2(f, i, a[i]);\n    }\n    return r;\n  }\n}\n\nfunction to_list(a) {\n  var _i = a.length - 1 | 0;\n  var _res = /* [] */0;\n  while(true) {\n    var res = _res;\n    var i = _i;\n    if (i < 0) {\n      return res;\n    } else {\n      _res = /* :: */[\n        a[i],\n        res\n      ];\n      _i = i - 1 | 0;\n      continue ;\n    }\n  };\n}\n\nfunction list_length(_accu, _param) {\n  while(true) {\n    var param = _param;\n    var accu = _accu;\n    if (param) {\n      _param = param[1];\n      _accu = accu + 1 | 0;\n      continue ;\n    } else {\n      return accu;\n    }\n  };\n}\n\nfunction of_list(l) {\n  if (l) {\n    var a = Caml_array.caml_make_vect(list_length(0, l), l[0]);\n    var _i = 1;\n    var _param = l[1];\n    while(true) {\n      var param = _param;\n      var i = _i;\n      if (param) {\n        a[i] = param[0];\n        _param = param[1];\n        _i = i + 1 | 0;\n        continue ;\n      } else {\n        return a;\n      }\n    };\n  } else {\n    return /* array */[];\n  }\n}\n\nfunction fold_left(f, x, a) {\n  var r = x;\n  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){\n    r = Curry._2(f, r, a[i]);\n  }\n  return r;\n}\n\nfunction fold_right(f, a, x) {\n  var r = x;\n  for(var i = a.length - 1 | 0; i >= 0; --i){\n    r = Curry._2(f, a[i], r);\n  }\n  return r;\n}\n\nvar Bottom = Caml_exceptions.create(\"Array.Bottom\");\n\nfunction sort(cmp, a) {\n  var maxson = function (l, i) {\n    var i31 = ((i + i | 0) + i | 0) + 1 | 0;\n    var x = i31;\n    if ((i31 + 2 | 0) < l) {\n      if (Curry._2(cmp, Caml_array.caml_array_get(a, i31), Caml_array.caml_array_get(a, i31 + 1 | 0)) < 0) {\n        x = i31 + 1 | 0;\n      }\n      if (Curry._2(cmp, Caml_array.caml_array_get(a, x), Caml_array.caml_array_get(a, i31 + 2 | 0)) < 0) {\n        x = i31 + 2 | 0;\n      }\n      return x;\n    } else if ((i31 + 1 | 0) < l && Curry._2(cmp, Caml_array.caml_array_get(a, i31), Caml_array.caml_array_get(a, i31 + 1 | 0)) < 0) {\n      return i31 + 1 | 0;\n    } else if (i31 < l) {\n      return i31;\n    } else {\n      throw [\n            Bottom,\n            i\n          ];\n    }\n  };\n  var trickle = function (l, i, e) {\n    try {\n      var l$1 = l;\n      var _i = i;\n      var e$1 = e;\n      while(true) {\n        var i$1 = _i;\n        var j = maxson(l$1, i$1);\n        if (Curry._2(cmp, Caml_array.caml_array_get(a, j), e$1) > 0) {\n          Caml_array.caml_array_set(a, i$1, Caml_array.caml_array_get(a, j));\n          _i = j;\n          continue ;\n        } else {\n          return Caml_array.caml_array_set(a, i$1, e$1);\n        }\n      };\n    }\n    catch (raw_exn){\n      var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);\n      if (exn[0] === Bottom) {\n        return Caml_array.caml_array_set(a, exn[1], e);\n      } else {\n        throw exn;\n      }\n    }\n  };\n  var bubble = function (l, i) {\n    try {\n      var l$1 = l;\n      var _i = i;\n      while(true) {\n        var i$1 = _i;\n        var j = maxson(l$1, i$1);\n        Caml_array.caml_array_set(a, i$1, Caml_array.caml_array_get(a, j));\n        _i = j;\n        continue ;\n      };\n    }\n    catch (raw_exn){\n      var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);\n      if (exn[0] === Bottom) {\n        return exn[1];\n      } else {\n        throw exn;\n      }\n    }\n  };\n  var trickleup = function (_i, e) {\n    while(true) {\n      var i = _i;\n      var father = (i - 1 | 0) / 3 | 0;\n      if (i === father) {\n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              /* tuple */[\n                \"array.ml\",\n                173,\n                4\n              ]\n            ];\n      }\n      if (Curry._2(cmp, Caml_array.caml_array_get(a, father), e) < 0) {\n        Caml_array.caml_array_set(a, i, Caml_array.caml_array_get(a, father));\n        if (father > 0) {\n          _i = father;\n          continue ;\n        } else {\n          return Caml_array.caml_array_set(a, 0, e);\n        }\n      } else {\n        return Caml_array.caml_array_set(a, i, e);\n      }\n    };\n  };\n  var l = a.length;\n  for(var i = ((l + 1 | 0) / 3 | 0) - 1 | 0; i >= 0; --i){\n    trickle(l, i, Caml_array.caml_array_get(a, i));\n  }\n  for(var i$1 = l - 1 | 0; i$1 >= 2; --i$1){\n    var e = Caml_array.caml_array_get(a, i$1);\n    Caml_array.caml_array_set(a, i$1, Caml_array.caml_array_get(a, 0));\n    trickleup(bubble(i$1, 0), e);\n  }\n  if (l > 1) {\n    var e$1 = Caml_array.caml_array_get(a, 1);\n    Caml_array.caml_array_set(a, 1, Caml_array.caml_array_get(a, 0));\n    return Caml_array.caml_array_set(a, 0, e$1);\n  } else {\n    return 0;\n  }\n}\n\nfunction stable_sort(cmp, a) {\n  var merge = function (src1ofs, src1len, src2, src2ofs, src2len, dst, dstofs) {\n    var src1r = src1ofs + src1len | 0;\n    var src2r = src2ofs + src2len | 0;\n    var _i1 = src1ofs;\n    var _s1 = Caml_array.caml_array_get(a, src1ofs);\n    var _i2 = src2ofs;\n    var _s2 = Caml_array.caml_array_get(src2, src2ofs);\n    var _d = dstofs;\n    while(true) {\n      var d = _d;\n      var s2 = _s2;\n      var i2 = _i2;\n      var s1 = _s1;\n      var i1 = _i1;\n      if (Curry._2(cmp, s1, s2) <= 0) {\n        Caml_array.caml_array_set(dst, d, s1);\n        var i1$1 = i1 + 1 | 0;\n        if (i1$1 < src1r) {\n          _d = d + 1 | 0;\n          _s1 = Caml_array.caml_array_get(a, i1$1);\n          _i1 = i1$1;\n          continue ;\n        } else {\n          return blit(src2, i2, dst, d + 1 | 0, src2r - i2 | 0);\n        }\n      } else {\n        Caml_array.caml_array_set(dst, d, s2);\n        var i2$1 = i2 + 1 | 0;\n        if (i2$1 < src2r) {\n          _d = d + 1 | 0;\n          _s2 = Caml_array.caml_array_get(src2, i2$1);\n          _i2 = i2$1;\n          continue ;\n        } else {\n          return blit(a, i1, dst, d + 1 | 0, src1r - i1 | 0);\n        }\n      }\n    };\n  };\n  var isortto = function (srcofs, dst, dstofs, len) {\n    for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n      var e = Caml_array.caml_array_get(a, srcofs + i | 0);\n      var j = (dstofs + i | 0) - 1 | 0;\n      while(j >= dstofs && Curry._2(cmp, Caml_array.caml_array_get(dst, j), e) > 0) {\n        Caml_array.caml_array_set(dst, j + 1 | 0, Caml_array.caml_array_get(dst, j));\n        j = j - 1 | 0;\n      };\n      Caml_array.caml_array_set(dst, j + 1 | 0, e);\n    }\n    return /* () */0;\n  };\n  var sortto = function (srcofs, dst, dstofs, len) {\n    if (len <= 5) {\n      return isortto(srcofs, dst, dstofs, len);\n    } else {\n      var l1 = len / 2 | 0;\n      var l2 = len - l1 | 0;\n      sortto(srcofs + l1 | 0, dst, dstofs + l1 | 0, l2);\n      sortto(srcofs, a, srcofs + l2 | 0, l1);\n      return merge(srcofs + l2 | 0, l1, dst, dstofs + l1 | 0, l2, dst, dstofs);\n    }\n  };\n  var l = a.length;\n  if (l <= 5) {\n    return isortto(0, a, 0, l);\n  } else {\n    var l1 = l / 2 | 0;\n    var l2 = l - l1 | 0;\n    var t = Caml_array.caml_make_vect(l2, Caml_array.caml_array_get(a, 0));\n    sortto(l1, t, 0, l2);\n    sortto(0, a, l2, l1);\n    return merge(l2, l1, t, 0, l2, a, 0);\n  }\n}\n\nvar create_matrix = make_matrix;\n\nvar concat = Caml_array.caml_array_concat;\n\nvar fast_sort = stable_sort;\n\nexports.init = init;\nexports.make_matrix = make_matrix;\nexports.create_matrix = create_matrix;\nexports.append = append;\nexports.concat = concat;\nexports.sub = sub;\nexports.copy = copy;\nexports.fill = fill;\nexports.blit = blit;\nexports.to_list = to_list;\nexports.of_list = of_list;\nexports.iter = iter;\nexports.map = map;\nexports.iteri = iteri;\nexports.mapi = mapi;\nexports.fold_left = fold_left;\nexports.fold_right = fold_right;\nexports.sort = sort;\nexports.stable_sort = stable_sort;\nexports.fast_sort = fast_sort;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/array.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/belt_Array.js":
/*!*******************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/belt_Array.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Curry = __webpack_require__(/*! ./curry.js */ \"./node_modules/bs-platform/lib/js/curry.js\");\nvar Js_math = __webpack_require__(/*! ./js_math.js */ \"./node_modules/bs-platform/lib/js/js_math.js\");\nvar Caml_option = __webpack_require__(/*! ./caml_option.js */ \"./node_modules/bs-platform/lib/js/caml_option.js\");\nvar Caml_primitive = __webpack_require__(/*! ./caml_primitive.js */ \"./node_modules/bs-platform/lib/js/caml_primitive.js\");\n\nfunction get(arr, i) {\n  if (i >= 0 && i < arr.length) {\n    return Caml_option.some(arr[i]);\n  }\n  \n}\n\nfunction getExn(arr, i) {\n  if (!(i >= 0 && i < arr.length)) {\n    throw new Error(\"File \\\"belt_Array.ml\\\", line 25, characters 6-12\");\n  }\n  return arr[i];\n}\n\nfunction set(arr, i, v) {\n  if (i >= 0 && i < arr.length) {\n    arr[i] = v;\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction setExn(arr, i, v) {\n  if (!(i >= 0 && i < arr.length)) {\n    throw new Error(\"File \\\"belt_Array.ml\\\", line 31, characters 4-10\");\n  }\n  arr[i] = v;\n  return /* () */0;\n}\n\nfunction swapUnsafe(xs, i, j) {\n  var tmp = xs[i];\n  xs[i] = xs[j];\n  xs[j] = tmp;\n  return /* () */0;\n}\n\nfunction shuffleInPlace(xs) {\n  var len = xs.length;\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    swapUnsafe(xs, i, Js_math.random_int(i, len));\n  }\n  return /* () */0;\n}\n\nfunction shuffle(xs) {\n  var result = xs.slice(0);\n  shuffleInPlace(result);\n  return result;\n}\n\nfunction reverseInPlace(xs) {\n  var len = xs.length;\n  var xs$1 = xs;\n  var ofs = 0;\n  var len$1 = len;\n  for(var i = 0 ,i_finish = (len$1 / 2 | 0) - 1 | 0; i <= i_finish; ++i){\n    swapUnsafe(xs$1, ofs + i | 0, ((ofs + len$1 | 0) - i | 0) - 1 | 0);\n  }\n  return /* () */0;\n}\n\nfunction reverse(xs) {\n  var len = xs.length;\n  var result = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    result[i] = xs[(len - 1 | 0) - i | 0];\n  }\n  return result;\n}\n\nfunction make(l, f) {\n  if (l <= 0) {\n    return /* array */[];\n  } else {\n    var res = new Array(l);\n    for(var i = 0 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n      res[i] = f;\n    }\n    return res;\n  }\n}\n\nfunction makeByU(l, f) {\n  if (l <= 0) {\n    return /* array */[];\n  } else {\n    var res = new Array(l);\n    for(var i = 0 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n      res[i] = f(i);\n    }\n    return res;\n  }\n}\n\nfunction makeBy(l, f) {\n  return makeByU(l, Curry.__1(f));\n}\n\nfunction makeByAndShuffleU(l, f) {\n  var u = makeByU(l, f);\n  shuffleInPlace(u);\n  return u;\n}\n\nfunction makeByAndShuffle(l, f) {\n  return makeByAndShuffleU(l, Curry.__1(f));\n}\n\nfunction range(start, finish) {\n  var cut = finish - start | 0;\n  if (cut < 0) {\n    return /* array */[];\n  } else {\n    var arr = new Array(cut + 1 | 0);\n    for(var i = 0; i <= cut; ++i){\n      arr[i] = start + i | 0;\n    }\n    return arr;\n  }\n}\n\nfunction rangeBy(start, finish, step) {\n  var cut = finish - start | 0;\n  if (cut < 0 || step <= 0) {\n    return /* array */[];\n  } else {\n    var nb = (cut / step | 0) + 1 | 0;\n    var arr = new Array(nb);\n    var cur = start;\n    for(var i = 0 ,i_finish = nb - 1 | 0; i <= i_finish; ++i){\n      arr[i] = cur;\n      cur = cur + step | 0;\n    }\n    return arr;\n  }\n}\n\nfunction zip(xs, ys) {\n  var lenx = xs.length;\n  var leny = ys.length;\n  var len = lenx < leny ? lenx : leny;\n  var s = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    s[i] = /* tuple */[\n      xs[i],\n      ys[i]\n    ];\n  }\n  return s;\n}\n\nfunction zipByU(xs, ys, f) {\n  var lenx = xs.length;\n  var leny = ys.length;\n  var len = lenx < leny ? lenx : leny;\n  var s = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    s[i] = f(xs[i], ys[i]);\n  }\n  return s;\n}\n\nfunction zipBy(xs, ys, f) {\n  return zipByU(xs, ys, Curry.__2(f));\n}\n\nfunction concat(a1, a2) {\n  var l1 = a1.length;\n  var l2 = a2.length;\n  var a1a2 = new Array(l1 + l2 | 0);\n  for(var i = 0 ,i_finish = l1 - 1 | 0; i <= i_finish; ++i){\n    a1a2[i] = a1[i];\n  }\n  for(var i$1 = 0 ,i_finish$1 = l2 - 1 | 0; i$1 <= i_finish$1; ++i$1){\n    a1a2[l1 + i$1 | 0] = a2[i$1];\n  }\n  return a1a2;\n}\n\nfunction concatMany(arrs) {\n  var lenArrs = arrs.length;\n  var totalLen = 0;\n  for(var i = 0 ,i_finish = lenArrs - 1 | 0; i <= i_finish; ++i){\n    totalLen = totalLen + arrs[i].length | 0;\n  }\n  var result = new Array(totalLen);\n  totalLen = 0;\n  for(var j = 0 ,j_finish = lenArrs - 1 | 0; j <= j_finish; ++j){\n    var cur = arrs[j];\n    for(var k = 0 ,k_finish = cur.length - 1 | 0; k <= k_finish; ++k){\n      result[totalLen] = cur[k];\n      totalLen = totalLen + 1 | 0;\n    }\n  }\n  return result;\n}\n\nfunction slice(a, offset, len) {\n  if (len <= 0) {\n    return /* array */[];\n  } else {\n    var lena = a.length;\n    var ofs = offset < 0 ? Caml_primitive.caml_int_max(lena + offset | 0, 0) : offset;\n    var hasLen = lena - ofs | 0;\n    var copyLength = hasLen < len ? hasLen : len;\n    if (copyLength <= 0) {\n      return /* array */[];\n    } else {\n      var result = new Array(copyLength);\n      for(var i = 0 ,i_finish = copyLength - 1 | 0; i <= i_finish; ++i){\n        result[i] = a[ofs + i | 0];\n      }\n      return result;\n    }\n  }\n}\n\nfunction sliceToEnd(a, offset) {\n  var lena = a.length;\n  var ofs = offset < 0 ? Caml_primitive.caml_int_max(lena + offset | 0, 0) : offset;\n  var len = lena - ofs | 0;\n  var result = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    result[i] = a[ofs + i | 0];\n  }\n  return result;\n}\n\nfunction fill(a, offset, len, v) {\n  if (len > 0) {\n    var lena = a.length;\n    var ofs = offset < 0 ? Caml_primitive.caml_int_max(lena + offset | 0, 0) : offset;\n    var hasLen = lena - ofs | 0;\n    var fillLength = hasLen < len ? hasLen : len;\n    if (fillLength > 0) {\n      for(var i = ofs ,i_finish = (ofs + fillLength | 0) - 1 | 0; i <= i_finish; ++i){\n        a[i] = v;\n      }\n      return /* () */0;\n    } else {\n      return 0;\n    }\n  } else {\n    return 0;\n  }\n}\n\nfunction blitUnsafe(a1, srcofs1, a2, srcofs2, blitLength) {\n  if (srcofs2 <= srcofs1) {\n    for(var j = 0 ,j_finish = blitLength - 1 | 0; j <= j_finish; ++j){\n      a2[j + srcofs2 | 0] = a1[j + srcofs1 | 0];\n    }\n    return /* () */0;\n  } else {\n    for(var j$1 = blitLength - 1 | 0; j$1 >= 0; --j$1){\n      a2[j$1 + srcofs2 | 0] = a1[j$1 + srcofs1 | 0];\n    }\n    return /* () */0;\n  }\n}\n\nfunction blit(a1, ofs1, a2, ofs2, len) {\n  var lena1 = a1.length;\n  var lena2 = a2.length;\n  var srcofs1 = ofs1 < 0 ? Caml_primitive.caml_int_max(lena1 + ofs1 | 0, 0) : ofs1;\n  var srcofs2 = ofs2 < 0 ? Caml_primitive.caml_int_max(lena2 + ofs2 | 0, 0) : ofs2;\n  var blitLength = Caml_primitive.caml_int_min(len, Caml_primitive.caml_int_min(lena1 - srcofs1 | 0, lena2 - srcofs2 | 0));\n  if (srcofs2 <= srcofs1) {\n    for(var j = 0 ,j_finish = blitLength - 1 | 0; j <= j_finish; ++j){\n      a2[j + srcofs2 | 0] = a1[j + srcofs1 | 0];\n    }\n    return /* () */0;\n  } else {\n    for(var j$1 = blitLength - 1 | 0; j$1 >= 0; --j$1){\n      a2[j$1 + srcofs2 | 0] = a1[j$1 + srcofs1 | 0];\n    }\n    return /* () */0;\n  }\n}\n\nfunction forEachU(a, f) {\n  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){\n    f(a[i]);\n  }\n  return /* () */0;\n}\n\nfunction forEach(a, f) {\n  return forEachU(a, Curry.__1(f));\n}\n\nfunction mapU(a, f) {\n  var l = a.length;\n  var r = new Array(l);\n  for(var i = 0 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n    r[i] = f(a[i]);\n  }\n  return r;\n}\n\nfunction map(a, f) {\n  return mapU(a, Curry.__1(f));\n}\n\nfunction getByU(a, p) {\n  var l = a.length;\n  var i = 0;\n  var r = undefined;\n  while(r === undefined && i < l) {\n    var v = a[i];\n    if (p(v)) {\n      r = Caml_option.some(v);\n    }\n    i = i + 1 | 0;\n  };\n  return r;\n}\n\nfunction getBy(a, p) {\n  return getByU(a, Curry.__1(p));\n}\n\nfunction getIndexByU(a, p) {\n  var l = a.length;\n  var i = 0;\n  var r = undefined;\n  while(r === undefined && i < l) {\n    var v = a[i];\n    if (p(v)) {\n      r = i;\n    }\n    i = i + 1 | 0;\n  };\n  return r;\n}\n\nfunction getIndexBy(a, p) {\n  return getIndexByU(a, Curry.__1(p));\n}\n\nfunction keepU(a, f) {\n  var l = a.length;\n  var r = new Array(l);\n  var j = 0;\n  for(var i = 0 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n    var v = a[i];\n    if (f(v)) {\n      r[j] = v;\n      j = j + 1 | 0;\n    }\n    \n  }\n  r.length = j;\n  return r;\n}\n\nfunction keep(a, f) {\n  return keepU(a, Curry.__1(f));\n}\n\nfunction keepWithIndexU(a, f) {\n  var l = a.length;\n  var r = new Array(l);\n  var j = 0;\n  for(var i = 0 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n    var v = a[i];\n    if (f(v, i)) {\n      r[j] = v;\n      j = j + 1 | 0;\n    }\n    \n  }\n  r.length = j;\n  return r;\n}\n\nfunction keepWithIndex(a, f) {\n  return keepWithIndexU(a, Curry.__2(f));\n}\n\nfunction keepMapU(a, f) {\n  var l = a.length;\n  var r = new Array(l);\n  var j = 0;\n  for(var i = 0 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n    var v = a[i];\n    var match = f(v);\n    if (match !== undefined) {\n      r[j] = Caml_option.valFromOption(match);\n      j = j + 1 | 0;\n    }\n    \n  }\n  r.length = j;\n  return r;\n}\n\nfunction keepMap(a, f) {\n  return keepMapU(a, Curry.__1(f));\n}\n\nfunction forEachWithIndexU(a, f) {\n  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){\n    f(i, a[i]);\n  }\n  return /* () */0;\n}\n\nfunction forEachWithIndex(a, f) {\n  return forEachWithIndexU(a, Curry.__2(f));\n}\n\nfunction mapWithIndexU(a, f) {\n  var l = a.length;\n  var r = new Array(l);\n  for(var i = 0 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n    r[i] = f(i, a[i]);\n  }\n  return r;\n}\n\nfunction mapWithIndex(a, f) {\n  return mapWithIndexU(a, Curry.__2(f));\n}\n\nfunction reduceU(a, x, f) {\n  var r = x;\n  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){\n    r = f(r, a[i]);\n  }\n  return r;\n}\n\nfunction reduce(a, x, f) {\n  return reduceU(a, x, Curry.__2(f));\n}\n\nfunction reduceReverseU(a, x, f) {\n  var r = x;\n  for(var i = a.length - 1 | 0; i >= 0; --i){\n    r = f(r, a[i]);\n  }\n  return r;\n}\n\nfunction reduceReverse(a, x, f) {\n  return reduceReverseU(a, x, Curry.__2(f));\n}\n\nfunction reduceReverse2U(a, b, x, f) {\n  var r = x;\n  var len = Caml_primitive.caml_int_min(a.length, b.length);\n  for(var i = len - 1 | 0; i >= 0; --i){\n    r = f(r, a[i], b[i]);\n  }\n  return r;\n}\n\nfunction reduceReverse2(a, b, x, f) {\n  return reduceReverse2U(a, b, x, Curry.__3(f));\n}\n\nfunction reduceWithIndexU(a, x, f) {\n  var r = x;\n  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){\n    r = f(r, a[i], i);\n  }\n  return r;\n}\n\nfunction reduceWithIndex(a, x, f) {\n  return reduceWithIndexU(a, x, Curry.__3(f));\n}\n\nfunction everyU(arr, b) {\n  var len = arr.length;\n  var arr$1 = arr;\n  var _i = 0;\n  var b$1 = b;\n  var len$1 = len;\n  while(true) {\n    var i = _i;\n    if (i === len$1) {\n      return true;\n    } else if (b$1(arr$1[i])) {\n      _i = i + 1 | 0;\n      continue ;\n    } else {\n      return false;\n    }\n  };\n}\n\nfunction every(arr, f) {\n  return everyU(arr, Curry.__1(f));\n}\n\nfunction someU(arr, b) {\n  var len = arr.length;\n  var arr$1 = arr;\n  var _i = 0;\n  var b$1 = b;\n  var len$1 = len;\n  while(true) {\n    var i = _i;\n    if (i === len$1) {\n      return false;\n    } else if (b$1(arr$1[i])) {\n      return true;\n    } else {\n      _i = i + 1 | 0;\n      continue ;\n    }\n  };\n}\n\nfunction some(arr, f) {\n  return someU(arr, Curry.__1(f));\n}\n\nfunction everyAux2(arr1, arr2, _i, b, len) {\n  while(true) {\n    var i = _i;\n    if (i === len) {\n      return true;\n    } else if (b(arr1[i], arr2[i])) {\n      _i = i + 1 | 0;\n      continue ;\n    } else {\n      return false;\n    }\n  };\n}\n\nfunction every2U(a, b, p) {\n  return everyAux2(a, b, 0, p, Caml_primitive.caml_int_min(a.length, b.length));\n}\n\nfunction every2(a, b, p) {\n  return every2U(a, b, Curry.__2(p));\n}\n\nfunction some2U(a, b, p) {\n  var arr1 = a;\n  var arr2 = b;\n  var _i = 0;\n  var b$1 = p;\n  var len = Caml_primitive.caml_int_min(a.length, b.length);\n  while(true) {\n    var i = _i;\n    if (i === len) {\n      return false;\n    } else if (b$1(arr1[i], arr2[i])) {\n      return true;\n    } else {\n      _i = i + 1 | 0;\n      continue ;\n    }\n  };\n}\n\nfunction some2(a, b, p) {\n  return some2U(a, b, Curry.__2(p));\n}\n\nfunction eqU(a, b, p) {\n  var lena = a.length;\n  var lenb = b.length;\n  if (lena === lenb) {\n    return everyAux2(a, b, 0, p, lena);\n  } else {\n    return false;\n  }\n}\n\nfunction eq(a, b, p) {\n  return eqU(a, b, Curry.__2(p));\n}\n\nfunction cmpU(a, b, p) {\n  var lena = a.length;\n  var lenb = b.length;\n  if (lena > lenb) {\n    return 1;\n  } else if (lena < lenb) {\n    return -1;\n  } else {\n    var arr1 = a;\n    var arr2 = b;\n    var _i = 0;\n    var b$1 = p;\n    var len = lena;\n    while(true) {\n      var i = _i;\n      if (i === len) {\n        return 0;\n      } else {\n        var c = b$1(arr1[i], arr2[i]);\n        if (c === 0) {\n          _i = i + 1 | 0;\n          continue ;\n        } else {\n          return c;\n        }\n      }\n    };\n  }\n}\n\nfunction cmp(a, b, p) {\n  return cmpU(a, b, Curry.__2(p));\n}\n\nfunction partitionU(a, f) {\n  var l = a.length;\n  var i = 0;\n  var j = 0;\n  var a1 = new Array(l);\n  var a2 = new Array(l);\n  for(var ii = 0 ,ii_finish = l - 1 | 0; ii <= ii_finish; ++ii){\n    var v = a[ii];\n    if (f(v)) {\n      a1[i] = v;\n      i = i + 1 | 0;\n    } else {\n      a2[j] = v;\n      j = j + 1 | 0;\n    }\n  }\n  a1.length = i;\n  a2.length = j;\n  return /* tuple */[\n          a1,\n          a2\n        ];\n}\n\nfunction partition(a, f) {\n  return partitionU(a, Curry.__1(f));\n}\n\nfunction unzip(a) {\n  var l = a.length;\n  var a1 = new Array(l);\n  var a2 = new Array(l);\n  for(var i = 0 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n    var match = a[i];\n    a1[i] = match[0];\n    a2[i] = match[1];\n  }\n  return /* tuple */[\n          a1,\n          a2\n        ];\n}\n\nexports.get = get;\nexports.getExn = getExn;\nexports.set = set;\nexports.setExn = setExn;\nexports.shuffleInPlace = shuffleInPlace;\nexports.shuffle = shuffle;\nexports.reverseInPlace = reverseInPlace;\nexports.reverse = reverse;\nexports.make = make;\nexports.range = range;\nexports.rangeBy = rangeBy;\nexports.makeByU = makeByU;\nexports.makeBy = makeBy;\nexports.makeByAndShuffleU = makeByAndShuffleU;\nexports.makeByAndShuffle = makeByAndShuffle;\nexports.zip = zip;\nexports.zipByU = zipByU;\nexports.zipBy = zipBy;\nexports.unzip = unzip;\nexports.concat = concat;\nexports.concatMany = concatMany;\nexports.slice = slice;\nexports.sliceToEnd = sliceToEnd;\nexports.fill = fill;\nexports.blit = blit;\nexports.blitUnsafe = blitUnsafe;\nexports.forEachU = forEachU;\nexports.forEach = forEach;\nexports.mapU = mapU;\nexports.map = map;\nexports.getByU = getByU;\nexports.getBy = getBy;\nexports.getIndexByU = getIndexByU;\nexports.getIndexBy = getIndexBy;\nexports.keepU = keepU;\nexports.keep = keep;\nexports.keepWithIndexU = keepWithIndexU;\nexports.keepWithIndex = keepWithIndex;\nexports.keepMapU = keepMapU;\nexports.keepMap = keepMap;\nexports.forEachWithIndexU = forEachWithIndexU;\nexports.forEachWithIndex = forEachWithIndex;\nexports.mapWithIndexU = mapWithIndexU;\nexports.mapWithIndex = mapWithIndex;\nexports.partitionU = partitionU;\nexports.partition = partition;\nexports.reduceU = reduceU;\nexports.reduce = reduce;\nexports.reduceReverseU = reduceReverseU;\nexports.reduceReverse = reduceReverse;\nexports.reduceReverse2U = reduceReverse2U;\nexports.reduceReverse2 = reduceReverse2;\nexports.reduceWithIndexU = reduceWithIndexU;\nexports.reduceWithIndex = reduceWithIndex;\nexports.someU = someU;\nexports.some = some;\nexports.everyU = everyU;\nexports.every = every;\nexports.every2U = every2U;\nexports.every2 = every2;\nexports.some2U = some2U;\nexports.some2 = some2;\nexports.cmpU = cmpU;\nexports.cmp = cmp;\nexports.eqU = eqU;\nexports.eq = eq;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/belt_Array.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/belt_Option.js":
/*!********************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/belt_Option.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Curry = __webpack_require__(/*! ./curry.js */ \"./node_modules/bs-platform/lib/js/curry.js\");\nvar Caml_option = __webpack_require__(/*! ./caml_option.js */ \"./node_modules/bs-platform/lib/js/caml_option.js\");\n\nfunction getExn(param) {\n  if (param !== undefined) {\n    return Caml_option.valFromOption(param);\n  } else {\n    throw new Error(\"getExn\");\n  }\n}\n\nfunction mapWithDefaultU(opt, $$default, f) {\n  if (opt !== undefined) {\n    return f(Caml_option.valFromOption(opt));\n  } else {\n    return $$default;\n  }\n}\n\nfunction mapWithDefault(opt, $$default, f) {\n  return mapWithDefaultU(opt, $$default, Curry.__1(f));\n}\n\nfunction mapU(opt, f) {\n  if (opt !== undefined) {\n    return Caml_option.some(f(Caml_option.valFromOption(opt)));\n  }\n  \n}\n\nfunction map(opt, f) {\n  return mapU(opt, Curry.__1(f));\n}\n\nfunction flatMapU(opt, f) {\n  if (opt !== undefined) {\n    return f(Caml_option.valFromOption(opt));\n  }\n  \n}\n\nfunction flatMap(opt, f) {\n  return flatMapU(opt, Curry.__1(f));\n}\n\nfunction getWithDefault(opt, $$default) {\n  if (opt !== undefined) {\n    return Caml_option.valFromOption(opt);\n  } else {\n    return $$default;\n  }\n}\n\nfunction isSome(param) {\n  return param !== undefined;\n}\n\nfunction isNone(x) {\n  return x === undefined;\n}\n\nfunction eqU(a, b, f) {\n  if (a !== undefined) {\n    if (b !== undefined) {\n      return f(Caml_option.valFromOption(a), Caml_option.valFromOption(b));\n    } else {\n      return false;\n    }\n  } else {\n    return b === undefined;\n  }\n}\n\nfunction eq(a, b, f) {\n  return eqU(a, b, Curry.__2(f));\n}\n\nfunction cmpU(a, b, f) {\n  if (a !== undefined) {\n    if (b !== undefined) {\n      return f(Caml_option.valFromOption(a), Caml_option.valFromOption(b));\n    } else {\n      return 1;\n    }\n  } else if (b !== undefined) {\n    return -1;\n  } else {\n    return 0;\n  }\n}\n\nfunction cmp(a, b, f) {\n  return cmpU(a, b, Curry.__2(f));\n}\n\nexports.getExn = getExn;\nexports.mapWithDefaultU = mapWithDefaultU;\nexports.mapWithDefault = mapWithDefault;\nexports.mapU = mapU;\nexports.map = map;\nexports.flatMapU = flatMapU;\nexports.flatMap = flatMap;\nexports.getWithDefault = getWithDefault;\nexports.isSome = isSome;\nexports.isNone = isNone;\nexports.eqU = eqU;\nexports.eq = eq;\nexports.cmpU = cmpU;\nexports.cmp = cmp;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/belt_Option.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/belt_SetString.js":
/*!***********************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/belt_SetString.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Belt_internalAVLset = __webpack_require__(/*! ./belt_internalAVLset.js */ \"./node_modules/bs-platform/lib/js/belt_internalAVLset.js\");\nvar Belt_internalSetString = __webpack_require__(/*! ./belt_internalSetString.js */ \"./node_modules/bs-platform/lib/js/belt_internalSetString.js\");\n\nfunction add(t, x) {\n  if (t !== null) {\n    var v = t.value;\n    if (x === v) {\n      return t;\n    } else {\n      var l = t.left;\n      var r = t.right;\n      if (x < v) {\n        var ll = add(l, x);\n        if (ll === l) {\n          return t;\n        } else {\n          return Belt_internalAVLset.bal(ll, v, r);\n        }\n      } else {\n        var rr = add(r, x);\n        if (rr === r) {\n          return t;\n        } else {\n          return Belt_internalAVLset.bal(l, v, rr);\n        }\n      }\n    }\n  } else {\n    return Belt_internalAVLset.singleton(x);\n  }\n}\n\nfunction mergeMany(h, arr) {\n  var len = arr.length;\n  var v = h;\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    var key = arr[i];\n    v = add(v, key);\n  }\n  return v;\n}\n\nfunction remove(t, x) {\n  if (t !== null) {\n    var l = t.left;\n    var v = t.value;\n    var r = t.right;\n    if (x === v) {\n      if (l !== null) {\n        if (r !== null) {\n          var v$1 = /* record */[/* contents */r.value];\n          var r$1 = Belt_internalAVLset.removeMinAuxWithRef(r, v$1);\n          return Belt_internalAVLset.bal(l, v$1[0], r$1);\n        } else {\n          return l;\n        }\n      } else {\n        return r;\n      }\n    } else if (x < v) {\n      var ll = remove(l, x);\n      if (ll === l) {\n        return t;\n      } else {\n        return Belt_internalAVLset.bal(ll, v, r);\n      }\n    } else {\n      var rr = remove(r, x);\n      if (rr === r) {\n        return t;\n      } else {\n        return Belt_internalAVLset.bal(l, v, rr);\n      }\n    }\n  } else {\n    return t;\n  }\n}\n\nfunction removeMany(h, arr) {\n  var len = arr.length;\n  var v = h;\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    var key = arr[i];\n    v = remove(v, key);\n  }\n  return v;\n}\n\nfunction splitAuxNoPivot(n, x) {\n  var l = n.left;\n  var v = n.value;\n  var r = n.right;\n  if (x === v) {\n    return /* tuple */[\n            l,\n            r\n          ];\n  } else if (x < v) {\n    if (l !== null) {\n      var match = splitAuxNoPivot(l, x);\n      return /* tuple */[\n              match[0],\n              Belt_internalAVLset.joinShared(match[1], v, r)\n            ];\n    } else {\n      return /* tuple */[\n              Belt_internalAVLset.empty,\n              n\n            ];\n    }\n  } else if (r !== null) {\n    var match$1 = splitAuxNoPivot(r, x);\n    return /* tuple */[\n            Belt_internalAVLset.joinShared(l, v, match$1[0]),\n            match$1[1]\n          ];\n  } else {\n    return /* tuple */[\n            n,\n            Belt_internalAVLset.empty\n          ];\n  }\n}\n\nfunction splitAuxPivot(n, x, pres) {\n  var l = n.left;\n  var v = n.value;\n  var r = n.right;\n  if (x === v) {\n    pres[0] = true;\n    return /* tuple */[\n            l,\n            r\n          ];\n  } else if (x < v) {\n    if (l !== null) {\n      var match = splitAuxPivot(l, x, pres);\n      return /* tuple */[\n              match[0],\n              Belt_internalAVLset.joinShared(match[1], v, r)\n            ];\n    } else {\n      return /* tuple */[\n              Belt_internalAVLset.empty,\n              n\n            ];\n    }\n  } else if (r !== null) {\n    var match$1 = splitAuxPivot(r, x, pres);\n    return /* tuple */[\n            Belt_internalAVLset.joinShared(l, v, match$1[0]),\n            match$1[1]\n          ];\n  } else {\n    return /* tuple */[\n            n,\n            Belt_internalAVLset.empty\n          ];\n  }\n}\n\nfunction split(t, x) {\n  if (t !== null) {\n    var pres = /* record */[/* contents */false];\n    var v = splitAuxPivot(t, x, pres);\n    return /* tuple */[\n            v,\n            pres[0]\n          ];\n  } else {\n    return /* tuple */[\n            /* tuple */[\n              Belt_internalAVLset.empty,\n              Belt_internalAVLset.empty\n            ],\n            false\n          ];\n  }\n}\n\nfunction union(s1, s2) {\n  if (s1 !== null) {\n    if (s2 !== null) {\n      var h1 = s1.height;\n      var h2 = s2.height;\n      if (h1 >= h2) {\n        if (h2 === 1) {\n          return add(s1, s2.value);\n        } else {\n          var l1 = s1.left;\n          var v1 = s1.value;\n          var r1 = s1.right;\n          var match = splitAuxNoPivot(s2, v1);\n          return Belt_internalAVLset.joinShared(union(l1, match[0]), v1, union(r1, match[1]));\n        }\n      } else if (h1 === 1) {\n        return add(s2, s1.value);\n      } else {\n        var l2 = s2.left;\n        var v2 = s2.value;\n        var r2 = s2.right;\n        var match$1 = splitAuxNoPivot(s1, v2);\n        return Belt_internalAVLset.joinShared(union(match$1[0], l2), v2, union(match$1[1], r2));\n      }\n    } else {\n      return s1;\n    }\n  } else {\n    return s2;\n  }\n}\n\nfunction intersect(s1, s2) {\n  if (s1 !== null && s2 !== null) {\n    var l1 = s1.left;\n    var v1 = s1.value;\n    var r1 = s1.right;\n    var pres = /* record */[/* contents */false];\n    var match = splitAuxPivot(s2, v1, pres);\n    var ll = intersect(l1, match[0]);\n    var rr = intersect(r1, match[1]);\n    if (pres[0]) {\n      return Belt_internalAVLset.joinShared(ll, v1, rr);\n    } else {\n      return Belt_internalAVLset.concatShared(ll, rr);\n    }\n  } else {\n    return Belt_internalAVLset.empty;\n  }\n}\n\nfunction diff(s1, s2) {\n  if (s1 !== null && s2 !== null) {\n    var l1 = s1.left;\n    var v1 = s1.value;\n    var r1 = s1.right;\n    var pres = /* record */[/* contents */false];\n    var match = splitAuxPivot(s2, v1, pres);\n    var ll = diff(l1, match[0]);\n    var rr = diff(r1, match[1]);\n    if (pres[0]) {\n      return Belt_internalAVLset.concatShared(ll, rr);\n    } else {\n      return Belt_internalAVLset.joinShared(ll, v1, rr);\n    }\n  } else {\n    return s1;\n  }\n}\n\nvar empty = Belt_internalAVLset.empty;\n\nvar fromArray = Belt_internalSetString.fromArray;\n\nvar fromSortedArrayUnsafe = Belt_internalAVLset.fromSortedArrayUnsafe;\n\nvar isEmpty = Belt_internalAVLset.isEmpty;\n\nvar has = Belt_internalSetString.has;\n\nvar subset = Belt_internalSetString.subset;\n\nvar cmp = Belt_internalSetString.cmp;\n\nvar eq = Belt_internalSetString.eq;\n\nvar forEachU = Belt_internalAVLset.forEachU;\n\nvar forEach = Belt_internalAVLset.forEach;\n\nvar reduceU = Belt_internalAVLset.reduceU;\n\nvar reduce = Belt_internalAVLset.reduce;\n\nvar everyU = Belt_internalAVLset.everyU;\n\nvar every = Belt_internalAVLset.every;\n\nvar someU = Belt_internalAVLset.someU;\n\nvar some = Belt_internalAVLset.some;\n\nvar keepU = Belt_internalAVLset.keepSharedU;\n\nvar keep = Belt_internalAVLset.keepShared;\n\nvar partitionU = Belt_internalAVLset.partitionSharedU;\n\nvar partition = Belt_internalAVLset.partitionShared;\n\nvar size = Belt_internalAVLset.size;\n\nvar toList = Belt_internalAVLset.toList;\n\nvar toArray = Belt_internalAVLset.toArray;\n\nvar minimum = Belt_internalAVLset.minimum;\n\nvar minUndefined = Belt_internalAVLset.minUndefined;\n\nvar maximum = Belt_internalAVLset.maximum;\n\nvar maxUndefined = Belt_internalAVLset.maxUndefined;\n\nvar get = Belt_internalSetString.get;\n\nvar getUndefined = Belt_internalSetString.getUndefined;\n\nvar getExn = Belt_internalSetString.getExn;\n\nvar checkInvariantInternal = Belt_internalAVLset.checkInvariantInternal;\n\nexports.empty = empty;\nexports.fromArray = fromArray;\nexports.fromSortedArrayUnsafe = fromSortedArrayUnsafe;\nexports.isEmpty = isEmpty;\nexports.has = has;\nexports.add = add;\nexports.mergeMany = mergeMany;\nexports.remove = remove;\nexports.removeMany = removeMany;\nexports.union = union;\nexports.intersect = intersect;\nexports.diff = diff;\nexports.subset = subset;\nexports.cmp = cmp;\nexports.eq = eq;\nexports.forEachU = forEachU;\nexports.forEach = forEach;\nexports.reduceU = reduceU;\nexports.reduce = reduce;\nexports.everyU = everyU;\nexports.every = every;\nexports.someU = someU;\nexports.some = some;\nexports.keepU = keepU;\nexports.keep = keep;\nexports.partitionU = partitionU;\nexports.partition = partition;\nexports.size = size;\nexports.toList = toList;\nexports.toArray = toArray;\nexports.minimum = minimum;\nexports.minUndefined = minUndefined;\nexports.maximum = maximum;\nexports.maxUndefined = maxUndefined;\nexports.get = get;\nexports.getUndefined = getUndefined;\nexports.getExn = getExn;\nexports.split = split;\nexports.checkInvariantInternal = checkInvariantInternal;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/belt_SetString.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/belt_SortArray.js":
/*!***********************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/belt_SortArray.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Curry = __webpack_require__(/*! ./curry.js */ \"./node_modules/bs-platform/lib/js/curry.js\");\nvar Belt_Array = __webpack_require__(/*! ./belt_Array.js */ \"./node_modules/bs-platform/lib/js/belt_Array.js\");\n\nfunction sortedLengthAuxMore(xs, _prec, _acc, len, lt) {\n  while(true) {\n    var acc = _acc;\n    var prec = _prec;\n    if (acc >= len) {\n      return acc;\n    } else {\n      var v = xs[acc];\n      if (lt(v, prec)) {\n        _acc = acc + 1 | 0;\n        _prec = v;\n        continue ;\n      } else {\n        return acc;\n      }\n    }\n  };\n}\n\nfunction strictlySortedLengthU(xs, lt) {\n  var len = xs.length;\n  if (len === 0 || len === 1) {\n    return len;\n  } else {\n    var x0 = xs[0];\n    var x1 = xs[1];\n    if (lt(x0, x1)) {\n      var xs$1 = xs;\n      var _prec = x1;\n      var _acc = 2;\n      var len$1 = len;\n      var lt$1 = lt;\n      while(true) {\n        var acc = _acc;\n        var prec = _prec;\n        if (acc >= len$1) {\n          return acc;\n        } else {\n          var v = xs$1[acc];\n          if (lt$1(prec, v)) {\n            _acc = acc + 1 | 0;\n            _prec = v;\n            continue ;\n          } else {\n            return acc;\n          }\n        }\n      };\n    } else if (lt(x1, x0)) {\n      return -sortedLengthAuxMore(xs, x1, 2, len, lt) | 0;\n    } else {\n      return 1;\n    }\n  }\n}\n\nfunction strictlySortedLength(xs, lt) {\n  return strictlySortedLengthU(xs, Curry.__2(lt));\n}\n\nfunction isSortedU(a, cmp) {\n  var len = a.length;\n  if (len === 0) {\n    return true;\n  } else {\n    var a$1 = a;\n    var _i = 0;\n    var cmp$1 = cmp;\n    var last_bound = len - 1 | 0;\n    while(true) {\n      var i = _i;\n      if (i === last_bound) {\n        return true;\n      } else if (cmp$1(a$1[i], a$1[i + 1 | 0]) <= 0) {\n        _i = i + 1 | 0;\n        continue ;\n      } else {\n        return false;\n      }\n    };\n  }\n}\n\nfunction isSorted(a, cmp) {\n  return isSortedU(a, Curry.__2(cmp));\n}\n\nfunction merge(src, src1ofs, src1len, src2, src2ofs, src2len, dst, dstofs, cmp) {\n  var src1r = src1ofs + src1len | 0;\n  var src2r = src2ofs + src2len | 0;\n  var _i1 = src1ofs;\n  var _s1 = src[src1ofs];\n  var _i2 = src2ofs;\n  var _s2 = src2[src2ofs];\n  var _d = dstofs;\n  while(true) {\n    var d = _d;\n    var s2 = _s2;\n    var i2 = _i2;\n    var s1 = _s1;\n    var i1 = _i1;\n    if (cmp(s1, s2) <= 0) {\n      dst[d] = s1;\n      var i1$1 = i1 + 1 | 0;\n      if (i1$1 < src1r) {\n        _d = d + 1 | 0;\n        _s1 = src[i1$1];\n        _i1 = i1$1;\n        continue ;\n      } else {\n        return Belt_Array.blitUnsafe(src2, i2, dst, d + 1 | 0, src2r - i2 | 0);\n      }\n    } else {\n      dst[d] = s2;\n      var i2$1 = i2 + 1 | 0;\n      if (i2$1 < src2r) {\n        _d = d + 1 | 0;\n        _s2 = src2[i2$1];\n        _i2 = i2$1;\n        continue ;\n      } else {\n        return Belt_Array.blitUnsafe(src, i1, dst, d + 1 | 0, src1r - i1 | 0);\n      }\n    }\n  };\n}\n\nfunction unionU(src, src1ofs, src1len, src2, src2ofs, src2len, dst, dstofs, cmp) {\n  var src1r = src1ofs + src1len | 0;\n  var src2r = src2ofs + src2len | 0;\n  var _i1 = src1ofs;\n  var _s1 = src[src1ofs];\n  var _i2 = src2ofs;\n  var _s2 = src2[src2ofs];\n  var _d = dstofs;\n  while(true) {\n    var d = _d;\n    var s2 = _s2;\n    var i2 = _i2;\n    var s1 = _s1;\n    var i1 = _i1;\n    var c = cmp(s1, s2);\n    if (c < 0) {\n      dst[d] = s1;\n      var i1$1 = i1 + 1 | 0;\n      var d$1 = d + 1 | 0;\n      if (i1$1 < src1r) {\n        _d = d$1;\n        _s1 = src[i1$1];\n        _i1 = i1$1;\n        continue ;\n      } else {\n        Belt_Array.blitUnsafe(src2, i2, dst, d$1, src2r - i2 | 0);\n        return (d$1 + src2r | 0) - i2 | 0;\n      }\n    } else if (c === 0) {\n      dst[d] = s1;\n      var i1$2 = i1 + 1 | 0;\n      var i2$1 = i2 + 1 | 0;\n      var d$2 = d + 1 | 0;\n      if (i1$2 < src1r && i2$1 < src2r) {\n        _d = d$2;\n        _s2 = src2[i2$1];\n        _i2 = i2$1;\n        _s1 = src[i1$2];\n        _i1 = i1$2;\n        continue ;\n      } else if (i1$2 === src1r) {\n        Belt_Array.blitUnsafe(src2, i2$1, dst, d$2, src2r - i2$1 | 0);\n        return (d$2 + src2r | 0) - i2$1 | 0;\n      } else {\n        Belt_Array.blitUnsafe(src, i1$2, dst, d$2, src1r - i1$2 | 0);\n        return (d$2 + src1r | 0) - i1$2 | 0;\n      }\n    } else {\n      dst[d] = s2;\n      var i2$2 = i2 + 1 | 0;\n      var d$3 = d + 1 | 0;\n      if (i2$2 < src2r) {\n        _d = d$3;\n        _s2 = src2[i2$2];\n        _i2 = i2$2;\n        continue ;\n      } else {\n        Belt_Array.blitUnsafe(src, i1, dst, d$3, src1r - i1 | 0);\n        return (d$3 + src1r | 0) - i1 | 0;\n      }\n    }\n  };\n}\n\nfunction union(src, src1ofs, src1len, src2, src2ofs, src2len, dst, dstofs, cmp) {\n  return unionU(src, src1ofs, src1len, src2, src2ofs, src2len, dst, dstofs, Curry.__2(cmp));\n}\n\nfunction intersectU(src, src1ofs, src1len, src2, src2ofs, src2len, dst, dstofs, cmp) {\n  var src1r = src1ofs + src1len | 0;\n  var src2r = src2ofs + src2len | 0;\n  var _i1 = src1ofs;\n  var _s1 = src[src1ofs];\n  var _i2 = src2ofs;\n  var _s2 = src2[src2ofs];\n  var _d = dstofs;\n  while(true) {\n    var d = _d;\n    var s2 = _s2;\n    var i2 = _i2;\n    var s1 = _s1;\n    var i1 = _i1;\n    var c = cmp(s1, s2);\n    if (c < 0) {\n      var i1$1 = i1 + 1 | 0;\n      if (i1$1 < src1r) {\n        _s1 = src[i1$1];\n        _i1 = i1$1;\n        continue ;\n      } else {\n        return d;\n      }\n    } else if (c === 0) {\n      dst[d] = s1;\n      var i1$2 = i1 + 1 | 0;\n      var i2$1 = i2 + 1 | 0;\n      var d$1 = d + 1 | 0;\n      if (i1$2 < src1r && i2$1 < src2r) {\n        _d = d$1;\n        _s2 = src2[i2$1];\n        _i2 = i2$1;\n        _s1 = src[i1$2];\n        _i1 = i1$2;\n        continue ;\n      } else {\n        return d$1;\n      }\n    } else {\n      var i2$2 = i2 + 1 | 0;\n      if (i2$2 < src2r) {\n        _s2 = src2[i2$2];\n        _i2 = i2$2;\n        continue ;\n      } else {\n        return d;\n      }\n    }\n  };\n}\n\nfunction intersect(src, src1ofs, src1len, src2, src2ofs, src2len, dst, dstofs, cmp) {\n  return intersectU(src, src1ofs, src1len, src2, src2ofs, src2len, dst, dstofs, Curry.__2(cmp));\n}\n\nfunction diffU(src, src1ofs, src1len, src2, src2ofs, src2len, dst, dstofs, cmp) {\n  var src1r = src1ofs + src1len | 0;\n  var src2r = src2ofs + src2len | 0;\n  var _i1 = src1ofs;\n  var _s1 = src[src1ofs];\n  var _i2 = src2ofs;\n  var _s2 = src2[src2ofs];\n  var _d = dstofs;\n  while(true) {\n    var d = _d;\n    var s2 = _s2;\n    var i2 = _i2;\n    var s1 = _s1;\n    var i1 = _i1;\n    var c = cmp(s1, s2);\n    if (c < 0) {\n      dst[d] = s1;\n      var d$1 = d + 1 | 0;\n      var i1$1 = i1 + 1 | 0;\n      if (i1$1 < src1r) {\n        _d = d$1;\n        _s1 = src[i1$1];\n        _i1 = i1$1;\n        continue ;\n      } else {\n        return d$1;\n      }\n    } else if (c === 0) {\n      var i1$2 = i1 + 1 | 0;\n      var i2$1 = i2 + 1 | 0;\n      if (i1$2 < src1r && i2$1 < src2r) {\n        _s2 = src2[i2$1];\n        _i2 = i2$1;\n        _s1 = src[i1$2];\n        _i1 = i1$2;\n        continue ;\n      } else if (i1$2 === src1r) {\n        return d;\n      } else {\n        Belt_Array.blitUnsafe(src, i1$2, dst, d, src1r - i1$2 | 0);\n        return (d + src1r | 0) - i1$2 | 0;\n      }\n    } else {\n      var i2$2 = i2 + 1 | 0;\n      if (i2$2 < src2r) {\n        _s2 = src2[i2$2];\n        _i2 = i2$2;\n        continue ;\n      } else {\n        Belt_Array.blitUnsafe(src, i1, dst, d, src1r - i1 | 0);\n        return (d + src1r | 0) - i1 | 0;\n      }\n    }\n  };\n}\n\nfunction diff(src, src1ofs, src1len, src2, src2ofs, src2len, dst, dstofs, cmp) {\n  return diffU(src, src1ofs, src1len, src2, src2ofs, src2len, dst, dstofs, Curry.__2(cmp));\n}\n\nfunction insertionSort(src, srcofs, dst, dstofs, len, cmp) {\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    var e = src[srcofs + i | 0];\n    var j = (dstofs + i | 0) - 1 | 0;\n    while(j >= dstofs && cmp(dst[j], e) > 0) {\n      dst[j + 1 | 0] = dst[j];\n      j = j - 1 | 0;\n    };\n    dst[j + 1 | 0] = e;\n  }\n  return /* () */0;\n}\n\nfunction sortTo(src, srcofs, dst, dstofs, len, cmp) {\n  if (len <= 5) {\n    return insertionSort(src, srcofs, dst, dstofs, len, cmp);\n  } else {\n    var l1 = len / 2 | 0;\n    var l2 = len - l1 | 0;\n    sortTo(src, srcofs + l1 | 0, dst, dstofs + l1 | 0, l2, cmp);\n    sortTo(src, srcofs, src, srcofs + l2 | 0, l1, cmp);\n    return merge(src, srcofs + l2 | 0, l1, dst, dstofs + l1 | 0, l2, dst, dstofs, cmp);\n  }\n}\n\nfunction stableSortInPlaceByU(a, cmp) {\n  var l = a.length;\n  if (l <= 5) {\n    return insertionSort(a, 0, a, 0, l, cmp);\n  } else {\n    var l1 = l / 2 | 0;\n    var l2 = l - l1 | 0;\n    var t = new Array(l2);\n    sortTo(a, l1, t, 0, l2, cmp);\n    sortTo(a, 0, a, l2, l1, cmp);\n    return merge(a, l2, l1, t, 0, l2, a, 0, cmp);\n  }\n}\n\nfunction stableSortInPlaceBy(a, cmp) {\n  return stableSortInPlaceByU(a, Curry.__2(cmp));\n}\n\nfunction stableSortByU(a, cmp) {\n  var b = a.slice(0);\n  stableSortInPlaceByU(b, cmp);\n  return b;\n}\n\nfunction stableSortBy(a, cmp) {\n  return stableSortByU(a, Curry.__2(cmp));\n}\n\nfunction binarySearchByU(sorted, key, cmp) {\n  var len = sorted.length;\n  if (len === 0) {\n    return -1;\n  } else {\n    var lo = sorted[0];\n    var c = cmp(key, lo);\n    if (c < 0) {\n      return -1;\n    } else {\n      var hi = sorted[len - 1 | 0];\n      var c2 = cmp(key, hi);\n      if (c2 > 0) {\n        return -(len + 1 | 0) | 0;\n      } else {\n        var arr = sorted;\n        var _lo = 0;\n        var _hi = len - 1 | 0;\n        var key$1 = key;\n        var cmp$1 = cmp;\n        while(true) {\n          var hi$1 = _hi;\n          var lo$1 = _lo;\n          var mid = (lo$1 + hi$1 | 0) / 2 | 0;\n          var midVal = arr[mid];\n          var c$1 = cmp$1(key$1, midVal);\n          if (c$1 === 0) {\n            return mid;\n          } else if (c$1 < 0) {\n            if (hi$1 === mid) {\n              if (cmp$1(arr[lo$1], key$1) === 0) {\n                return lo$1;\n              } else {\n                return -(hi$1 + 1 | 0) | 0;\n              }\n            } else {\n              _hi = mid;\n              continue ;\n            }\n          } else if (lo$1 === mid) {\n            if (cmp$1(arr[hi$1], key$1) === 0) {\n              return hi$1;\n            } else {\n              return -(hi$1 + 1 | 0) | 0;\n            }\n          } else {\n            _lo = mid;\n            continue ;\n          }\n        };\n      }\n    }\n  }\n}\n\nfunction binarySearchBy(sorted, key, cmp) {\n  return binarySearchByU(sorted, key, Curry.__2(cmp));\n}\n\nvar Int = 0;\n\nvar $$String = 0;\n\nexports.Int = Int;\nexports.$$String = $$String;\nexports.strictlySortedLengthU = strictlySortedLengthU;\nexports.strictlySortedLength = strictlySortedLength;\nexports.isSortedU = isSortedU;\nexports.isSorted = isSorted;\nexports.stableSortInPlaceByU = stableSortInPlaceByU;\nexports.stableSortInPlaceBy = stableSortInPlaceBy;\nexports.stableSortByU = stableSortByU;\nexports.stableSortBy = stableSortBy;\nexports.binarySearchByU = binarySearchByU;\nexports.binarySearchBy = binarySearchBy;\nexports.unionU = unionU;\nexports.union = union;\nexports.intersectU = intersectU;\nexports.intersect = intersect;\nexports.diffU = diffU;\nexports.diff = diff;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/belt_SortArray.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/belt_SortArrayString.js":
/*!*****************************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/belt_SortArrayString.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Belt_Array = __webpack_require__(/*! ./belt_Array.js */ \"./node_modules/bs-platform/lib/js/belt_Array.js\");\n\nfunction sortedLengthAuxMore(xs, _prec, _acc, len) {\n  while(true) {\n    var acc = _acc;\n    var prec = _prec;\n    if (acc >= len) {\n      return acc;\n    } else {\n      var v = xs[acc];\n      if (prec > v) {\n        _acc = acc + 1 | 0;\n        _prec = v;\n        continue ;\n      } else {\n        return acc;\n      }\n    }\n  };\n}\n\nfunction strictlySortedLength(xs) {\n  var len = xs.length;\n  if (len === 0 || len === 1) {\n    return len;\n  } else {\n    var x0 = xs[0];\n    var x1 = xs[1];\n    if (x0 < x1) {\n      var xs$1 = xs;\n      var _prec = x1;\n      var _acc = 2;\n      var len$1 = len;\n      while(true) {\n        var acc = _acc;\n        var prec = _prec;\n        if (acc >= len$1) {\n          return acc;\n        } else {\n          var v = xs$1[acc];\n          if (prec < v) {\n            _acc = acc + 1 | 0;\n            _prec = v;\n            continue ;\n          } else {\n            return acc;\n          }\n        }\n      };\n    } else if (x0 > x1) {\n      return -sortedLengthAuxMore(xs, x1, 2, len) | 0;\n    } else {\n      return 1;\n    }\n  }\n}\n\nfunction isSorted(a) {\n  var len = a.length;\n  if (len === 0) {\n    return true;\n  } else {\n    var a$1 = a;\n    var _i = 0;\n    var last_bound = len - 1 | 0;\n    while(true) {\n      var i = _i;\n      if (i === last_bound) {\n        return true;\n      } else if (a$1[i] <= a$1[i + 1 | 0]) {\n        _i = i + 1 | 0;\n        continue ;\n      } else {\n        return false;\n      }\n    };\n  }\n}\n\nfunction merge(src, src1ofs, src1len, src2, src2ofs, src2len, dst, dstofs) {\n  var src1r = src1ofs + src1len | 0;\n  var src2r = src2ofs + src2len | 0;\n  var _i1 = src1ofs;\n  var _s1 = src[src1ofs];\n  var _i2 = src2ofs;\n  var _s2 = src2[src2ofs];\n  var _d = dstofs;\n  while(true) {\n    var d = _d;\n    var s2 = _s2;\n    var i2 = _i2;\n    var s1 = _s1;\n    var i1 = _i1;\n    if (s1 <= s2) {\n      dst[d] = s1;\n      var i1$1 = i1 + 1 | 0;\n      if (i1$1 < src1r) {\n        _d = d + 1 | 0;\n        _s1 = src[i1$1];\n        _i1 = i1$1;\n        continue ;\n      } else {\n        return Belt_Array.blitUnsafe(src2, i2, dst, d + 1 | 0, src2r - i2 | 0);\n      }\n    } else {\n      dst[d] = s2;\n      var i2$1 = i2 + 1 | 0;\n      if (i2$1 < src2r) {\n        _d = d + 1 | 0;\n        _s2 = src2[i2$1];\n        _i2 = i2$1;\n        continue ;\n      } else {\n        return Belt_Array.blitUnsafe(src, i1, dst, d + 1 | 0, src1r - i1 | 0);\n      }\n    }\n  };\n}\n\nfunction union(src, src1ofs, src1len, src2, src2ofs, src2len, dst, dstofs) {\n  var src1r = src1ofs + src1len | 0;\n  var src2r = src2ofs + src2len | 0;\n  var _i1 = src1ofs;\n  var _s1 = src[src1ofs];\n  var _i2 = src2ofs;\n  var _s2 = src2[src2ofs];\n  var _d = dstofs;\n  while(true) {\n    var d = _d;\n    var s2 = _s2;\n    var i2 = _i2;\n    var s1 = _s1;\n    var i1 = _i1;\n    if (s1 < s2) {\n      dst[d] = s1;\n      var i1$1 = i1 + 1 | 0;\n      var d$1 = d + 1 | 0;\n      if (i1$1 < src1r) {\n        _d = d$1;\n        _s1 = src[i1$1];\n        _i1 = i1$1;\n        continue ;\n      } else {\n        Belt_Array.blitUnsafe(src2, i2, dst, d$1, src2r - i2 | 0);\n        return (d$1 + src2r | 0) - i2 | 0;\n      }\n    } else if (s1 === s2) {\n      dst[d] = s1;\n      var i1$2 = i1 + 1 | 0;\n      var i2$1 = i2 + 1 | 0;\n      var d$2 = d + 1 | 0;\n      if (i1$2 < src1r && i2$1 < src2r) {\n        _d = d$2;\n        _s2 = src2[i2$1];\n        _i2 = i2$1;\n        _s1 = src[i1$2];\n        _i1 = i1$2;\n        continue ;\n      } else if (i1$2 === src1r) {\n        Belt_Array.blitUnsafe(src2, i2$1, dst, d$2, src2r - i2$1 | 0);\n        return (d$2 + src2r | 0) - i2$1 | 0;\n      } else {\n        Belt_Array.blitUnsafe(src, i1$2, dst, d$2, src1r - i1$2 | 0);\n        return (d$2 + src1r | 0) - i1$2 | 0;\n      }\n    } else {\n      dst[d] = s2;\n      var i2$2 = i2 + 1 | 0;\n      var d$3 = d + 1 | 0;\n      if (i2$2 < src2r) {\n        _d = d$3;\n        _s2 = src2[i2$2];\n        _i2 = i2$2;\n        continue ;\n      } else {\n        Belt_Array.blitUnsafe(src, i1, dst, d$3, src1r - i1 | 0);\n        return (d$3 + src1r | 0) - i1 | 0;\n      }\n    }\n  };\n}\n\nfunction intersect(src, src1ofs, src1len, src2, src2ofs, src2len, dst, dstofs) {\n  var src1r = src1ofs + src1len | 0;\n  var src2r = src2ofs + src2len | 0;\n  var _i1 = src1ofs;\n  var _s1 = src[src1ofs];\n  var _i2 = src2ofs;\n  var _s2 = src2[src2ofs];\n  var _d = dstofs;\n  while(true) {\n    var d = _d;\n    var s2 = _s2;\n    var i2 = _i2;\n    var s1 = _s1;\n    var i1 = _i1;\n    if (s1 < s2) {\n      var i1$1 = i1 + 1 | 0;\n      if (i1$1 < src1r) {\n        _s1 = src[i1$1];\n        _i1 = i1$1;\n        continue ;\n      } else {\n        return d;\n      }\n    } else if (s1 === s2) {\n      dst[d] = s1;\n      var i1$2 = i1 + 1 | 0;\n      var i2$1 = i2 + 1 | 0;\n      var d$1 = d + 1 | 0;\n      if (i1$2 < src1r && i2$1 < src2r) {\n        _d = d$1;\n        _s2 = src2[i2$1];\n        _i2 = i2$1;\n        _s1 = src[i1$2];\n        _i1 = i1$2;\n        continue ;\n      } else {\n        return d$1;\n      }\n    } else {\n      var i2$2 = i2 + 1 | 0;\n      if (i2$2 < src2r) {\n        _s2 = src2[i2$2];\n        _i2 = i2$2;\n        continue ;\n      } else {\n        return d;\n      }\n    }\n  };\n}\n\nfunction diff(src, src1ofs, src1len, src2, src2ofs, src2len, dst, dstofs) {\n  var src1r = src1ofs + src1len | 0;\n  var src2r = src2ofs + src2len | 0;\n  var _i1 = src1ofs;\n  var _s1 = src[src1ofs];\n  var _i2 = src2ofs;\n  var _s2 = src2[src2ofs];\n  var _d = dstofs;\n  while(true) {\n    var d = _d;\n    var s2 = _s2;\n    var i2 = _i2;\n    var s1 = _s1;\n    var i1 = _i1;\n    if (s1 < s2) {\n      dst[d] = s1;\n      var d$1 = d + 1 | 0;\n      var i1$1 = i1 + 1 | 0;\n      if (i1$1 < src1r) {\n        _d = d$1;\n        _s1 = src[i1$1];\n        _i1 = i1$1;\n        continue ;\n      } else {\n        return d$1;\n      }\n    } else if (s1 === s2) {\n      var i1$2 = i1 + 1 | 0;\n      var i2$1 = i2 + 1 | 0;\n      if (i1$2 < src1r && i2$1 < src2r) {\n        _s2 = src2[i2$1];\n        _i2 = i2$1;\n        _s1 = src[i1$2];\n        _i1 = i1$2;\n        continue ;\n      } else if (i1$2 === src1r) {\n        return d;\n      } else {\n        Belt_Array.blitUnsafe(src, i1$2, dst, d, src1r - i1$2 | 0);\n        return (d + src1r | 0) - i1$2 | 0;\n      }\n    } else {\n      var i2$2 = i2 + 1 | 0;\n      if (i2$2 < src2r) {\n        _s2 = src2[i2$2];\n        _i2 = i2$2;\n        continue ;\n      } else {\n        Belt_Array.blitUnsafe(src, i1, dst, d, src1r - i1 | 0);\n        return (d + src1r | 0) - i1 | 0;\n      }\n    }\n  };\n}\n\nfunction insertionSort(src, srcofs, dst, dstofs, len) {\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    var e = src[srcofs + i | 0];\n    var j = (dstofs + i | 0) - 1 | 0;\n    while(j >= dstofs && dst[j] > e) {\n      dst[j + 1 | 0] = dst[j];\n      j = j - 1 | 0;\n    };\n    dst[j + 1 | 0] = e;\n  }\n  return /* () */0;\n}\n\nfunction sortTo(src, srcofs, dst, dstofs, len) {\n  if (len <= 5) {\n    return insertionSort(src, srcofs, dst, dstofs, len);\n  } else {\n    var l1 = len / 2 | 0;\n    var l2 = len - l1 | 0;\n    sortTo(src, srcofs + l1 | 0, dst, dstofs + l1 | 0, l2);\n    sortTo(src, srcofs, src, srcofs + l2 | 0, l1);\n    return merge(src, srcofs + l2 | 0, l1, dst, dstofs + l1 | 0, l2, dst, dstofs);\n  }\n}\n\nfunction stableSortInPlace(a) {\n  var l = a.length;\n  if (l <= 5) {\n    return insertionSort(a, 0, a, 0, l);\n  } else {\n    var l1 = l / 2 | 0;\n    var l2 = l - l1 | 0;\n    var t = new Array(l2);\n    sortTo(a, l1, t, 0, l2);\n    sortTo(a, 0, a, l2, l1);\n    return merge(a, l2, l1, t, 0, l2, a, 0);\n  }\n}\n\nfunction stableSort(a) {\n  var b = a.slice(0);\n  stableSortInPlace(b);\n  return b;\n}\n\nfunction binarySearch(sorted, key) {\n  var len = sorted.length;\n  if (len === 0) {\n    return -1;\n  } else {\n    var lo = sorted[0];\n    if (key < lo) {\n      return -1;\n    } else {\n      var hi = sorted[len - 1 | 0];\n      if (key > hi) {\n        return -(len + 1 | 0) | 0;\n      } else {\n        var arr = sorted;\n        var _lo = 0;\n        var _hi = len - 1 | 0;\n        var key$1 = key;\n        while(true) {\n          var hi$1 = _hi;\n          var lo$1 = _lo;\n          var mid = (lo$1 + hi$1 | 0) / 2 | 0;\n          var midVal = arr[mid];\n          if (key$1 === midVal) {\n            return mid;\n          } else if (key$1 < midVal) {\n            if (hi$1 === mid) {\n              if (arr[lo$1] === key$1) {\n                return lo$1;\n              } else {\n                return -(hi$1 + 1 | 0) | 0;\n              }\n            } else {\n              _hi = mid;\n              continue ;\n            }\n          } else if (lo$1 === mid) {\n            if (arr[hi$1] === key$1) {\n              return hi$1;\n            } else {\n              return -(hi$1 + 1 | 0) | 0;\n            }\n          } else {\n            _lo = mid;\n            continue ;\n          }\n        };\n      }\n    }\n  }\n}\n\nexports.strictlySortedLength = strictlySortedLength;\nexports.isSorted = isSorted;\nexports.stableSortInPlace = stableSortInPlace;\nexports.stableSort = stableSort;\nexports.binarySearch = binarySearch;\nexports.union = union;\nexports.intersect = intersect;\nexports.diff = diff;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/belt_SortArrayString.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/belt_internalAVLset.js":
/*!****************************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/belt_internalAVLset.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Curry = __webpack_require__(/*! ./curry.js */ \"./node_modules/bs-platform/lib/js/curry.js\");\nvar Caml_option = __webpack_require__(/*! ./caml_option.js */ \"./node_modules/bs-platform/lib/js/caml_option.js\");\nvar Belt_SortArray = __webpack_require__(/*! ./belt_SortArray.js */ \"./node_modules/bs-platform/lib/js/belt_SortArray.js\");\n\nfunction treeHeight(n) {\n  if (n !== null) {\n    return n.height;\n  } else {\n    return 0;\n  }\n}\n\nfunction copy(n) {\n  if (n !== null) {\n    var l = n.left;\n    var r = n.right;\n    return {\n            value: n.value,\n            height: n.height,\n            left: copy(l),\n            right: copy(r)\n          };\n  } else {\n    return n;\n  }\n}\n\nfunction create(l, v, r) {\n  var hl = l !== null ? l.height : 0;\n  var hr = r !== null ? r.height : 0;\n  return {\n          value: v,\n          height: hl >= hr ? hl + 1 | 0 : hr + 1 | 0,\n          left: l,\n          right: r\n        };\n}\n\nfunction singleton(x) {\n  return {\n          value: x,\n          height: 1,\n          left: null,\n          right: null\n        };\n}\n\nfunction heightGe(l, r) {\n  if (r !== null) {\n    if (l !== null) {\n      return l.height >= r.height;\n    } else {\n      return false;\n    }\n  } else {\n    return true;\n  }\n}\n\nfunction bal(l, v, r) {\n  var hl = l !== null ? l.height : 0;\n  var hr = r !== null ? r.height : 0;\n  if (hl > (hr + 2 | 0)) {\n    var ll = l.left;\n    var lv = l.value;\n    var lr = l.right;\n    if (heightGe(ll, lr)) {\n      return create(ll, lv, create(lr, v, r));\n    } else {\n      var lrl = lr.left;\n      var lrv = lr.value;\n      var lrr = lr.right;\n      return create(create(ll, lv, lrl), lrv, create(lrr, v, r));\n    }\n  } else if (hr > (hl + 2 | 0)) {\n    var rl = r.left;\n    var rv = r.value;\n    var rr = r.right;\n    if (heightGe(rr, rl)) {\n      return create(create(l, v, rl), rv, rr);\n    } else {\n      var rll = rl.left;\n      var rlv = rl.value;\n      var rlr = rl.right;\n      return create(create(l, v, rll), rlv, create(rlr, rv, rr));\n    }\n  } else {\n    return {\n            value: v,\n            height: hl >= hr ? hl + 1 | 0 : hr + 1 | 0,\n            left: l,\n            right: r\n          };\n  }\n}\n\nfunction min0Aux(_n) {\n  while(true) {\n    var n = _n;\n    var match = n.left;\n    if (match !== null) {\n      _n = match;\n      continue ;\n    } else {\n      return n.value;\n    }\n  };\n}\n\nfunction minimum(n) {\n  if (n !== null) {\n    return Caml_option.some(min0Aux(n));\n  }\n  \n}\n\nfunction minUndefined(n) {\n  if (n !== null) {\n    return min0Aux(n);\n  }\n  \n}\n\nfunction max0Aux(_n) {\n  while(true) {\n    var n = _n;\n    var match = n.right;\n    if (match !== null) {\n      _n = match;\n      continue ;\n    } else {\n      return n.value;\n    }\n  };\n}\n\nfunction maximum(n) {\n  if (n !== null) {\n    return Caml_option.some(max0Aux(n));\n  }\n  \n}\n\nfunction maxUndefined(n) {\n  if (n !== null) {\n    return max0Aux(n);\n  }\n  \n}\n\nfunction removeMinAuxWithRef(n, v) {\n  var ln = n.left;\n  var rn = n.right;\n  var kn = n.value;\n  if (ln !== null) {\n    return bal(removeMinAuxWithRef(ln, v), kn, rn);\n  } else {\n    v[0] = kn;\n    return rn;\n  }\n}\n\nfunction isEmpty(n) {\n  return n === null;\n}\n\nfunction stackAllLeft(_v, _s) {\n  while(true) {\n    var s = _s;\n    var v = _v;\n    if (v !== null) {\n      _s = /* :: */[\n        v,\n        s\n      ];\n      _v = v.left;\n      continue ;\n    } else {\n      return s;\n    }\n  };\n}\n\nfunction forEachU(_n, f) {\n  while(true) {\n    var n = _n;\n    if (n !== null) {\n      forEachU(n.left, f);\n      f(n.value);\n      _n = n.right;\n      continue ;\n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction forEach(n, f) {\n  return forEachU(n, Curry.__1(f));\n}\n\nfunction reduceU(_s, _accu, f) {\n  while(true) {\n    var accu = _accu;\n    var s = _s;\n    if (s !== null) {\n      var l = s.left;\n      var k = s.value;\n      var r = s.right;\n      _accu = f(reduceU(l, accu, f), k);\n      _s = r;\n      continue ;\n    } else {\n      return accu;\n    }\n  };\n}\n\nfunction reduce(s, accu, f) {\n  return reduceU(s, accu, Curry.__2(f));\n}\n\nfunction everyU(_n, p) {\n  while(true) {\n    var n = _n;\n    if (n !== null) {\n      if (p(n.value) && everyU(n.left, p)) {\n        _n = n.right;\n        continue ;\n      } else {\n        return false;\n      }\n    } else {\n      return true;\n    }\n  };\n}\n\nfunction every(n, p) {\n  return everyU(n, Curry.__1(p));\n}\n\nfunction someU(_n, p) {\n  while(true) {\n    var n = _n;\n    if (n !== null) {\n      if (p(n.value) || someU(n.left, p)) {\n        return true;\n      } else {\n        _n = n.right;\n        continue ;\n      }\n    } else {\n      return false;\n    }\n  };\n}\n\nfunction some(n, p) {\n  return someU(n, Curry.__1(p));\n}\n\nfunction addMinElement(n, v) {\n  if (n !== null) {\n    return bal(addMinElement(n.left, v), n.value, n.right);\n  } else {\n    return singleton(v);\n  }\n}\n\nfunction addMaxElement(n, v) {\n  if (n !== null) {\n    return bal(n.left, n.value, addMaxElement(n.right, v));\n  } else {\n    return singleton(v);\n  }\n}\n\nfunction joinShared(ln, v, rn) {\n  if (ln !== null) {\n    if (rn !== null) {\n      var lh = ln.height;\n      var rh = rn.height;\n      if (lh > (rh + 2 | 0)) {\n        return bal(ln.left, ln.value, joinShared(ln.right, v, rn));\n      } else if (rh > (lh + 2 | 0)) {\n        return bal(joinShared(ln, v, rn.left), rn.value, rn.right);\n      } else {\n        return create(ln, v, rn);\n      }\n    } else {\n      return addMaxElement(ln, v);\n    }\n  } else {\n    return addMinElement(rn, v);\n  }\n}\n\nfunction concatShared(t1, t2) {\n  if (t1 !== null) {\n    if (t2 !== null) {\n      var v = /* record */[/* contents */t2.value];\n      var t2r = removeMinAuxWithRef(t2, v);\n      return joinShared(t1, v[0], t2r);\n    } else {\n      return t1;\n    }\n  } else {\n    return t2;\n  }\n}\n\nfunction partitionSharedU(n, p) {\n  if (n !== null) {\n    var value = n.value;\n    var match = partitionSharedU(n.left, p);\n    var lf = match[1];\n    var lt = match[0];\n    var pv = p(value);\n    var match$1 = partitionSharedU(n.right, p);\n    var rf = match$1[1];\n    var rt = match$1[0];\n    if (pv) {\n      return /* tuple */[\n              joinShared(lt, value, rt),\n              concatShared(lf, rf)\n            ];\n    } else {\n      return /* tuple */[\n              concatShared(lt, rt),\n              joinShared(lf, value, rf)\n            ];\n    }\n  } else {\n    return /* tuple */[\n            null,\n            null\n          ];\n  }\n}\n\nfunction partitionShared(n, p) {\n  return partitionSharedU(n, Curry.__1(p));\n}\n\nfunction lengthNode(n) {\n  var l = n.left;\n  var r = n.right;\n  var sizeL = l !== null ? lengthNode(l) : 0;\n  var sizeR = r !== null ? lengthNode(r) : 0;\n  return (1 + sizeL | 0) + sizeR | 0;\n}\n\nfunction size(n) {\n  if (n !== null) {\n    return lengthNode(n);\n  } else {\n    return 0;\n  }\n}\n\nfunction toListAux(_n, _accu) {\n  while(true) {\n    var accu = _accu;\n    var n = _n;\n    if (n !== null) {\n      _accu = /* :: */[\n        n.value,\n        toListAux(n.right, accu)\n      ];\n      _n = n.left;\n      continue ;\n    } else {\n      return accu;\n    }\n  };\n}\n\nfunction toList(s) {\n  return toListAux(s, /* [] */0);\n}\n\nfunction checkInvariantInternal(_v) {\n  while(true) {\n    var v = _v;\n    if (v !== null) {\n      var l = v.left;\n      var r = v.right;\n      var diff = treeHeight(l) - treeHeight(r) | 0;\n      if (!(diff <= 2 && diff >= -2)) {\n        throw new Error(\"File \\\"belt_internalAVLset.ml\\\", line 304, characters 6-12\");\n      }\n      checkInvariantInternal(l);\n      _v = r;\n      continue ;\n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction fillArray(_n, _i, arr) {\n  while(true) {\n    var i = _i;\n    var n = _n;\n    var l = n.left;\n    var v = n.value;\n    var r = n.right;\n    var next = l !== null ? fillArray(l, i, arr) : i;\n    arr[next] = v;\n    var rnext = next + 1 | 0;\n    if (r !== null) {\n      _i = rnext;\n      _n = r;\n      continue ;\n    } else {\n      return rnext;\n    }\n  };\n}\n\nfunction fillArrayWithPartition(_n, cursor, arr, p) {\n  while(true) {\n    var n = _n;\n    var l = n.left;\n    var v = n.value;\n    var r = n.right;\n    if (l !== null) {\n      fillArrayWithPartition(l, cursor, arr, p);\n    }\n    if (p(v)) {\n      var c = cursor.forward;\n      arr[c] = v;\n      cursor.forward = c + 1 | 0;\n    } else {\n      var c$1 = cursor.backward;\n      arr[c$1] = v;\n      cursor.backward = c$1 - 1 | 0;\n    }\n    if (r !== null) {\n      _n = r;\n      continue ;\n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction fillArrayWithFilter(_n, _i, arr, p) {\n  while(true) {\n    var i = _i;\n    var n = _n;\n    var l = n.left;\n    var v = n.value;\n    var r = n.right;\n    var next = l !== null ? fillArrayWithFilter(l, i, arr, p) : i;\n    var rnext = p(v) ? (arr[next] = v, next + 1 | 0) : next;\n    if (r !== null) {\n      _i = rnext;\n      _n = r;\n      continue ;\n    } else {\n      return rnext;\n    }\n  };\n}\n\nfunction toArray(n) {\n  if (n !== null) {\n    var size = lengthNode(n);\n    var v = new Array(size);\n    fillArray(n, 0, v);\n    return v;\n  } else {\n    return /* array */[];\n  }\n}\n\nfunction fromSortedArrayRevAux(arr, off, len) {\n  switch (len) {\n    case 0 : \n        return null;\n    case 1 : \n        return singleton(arr[off]);\n    case 2 : \n        var x0 = arr[off];\n        var x1 = arr[off - 1 | 0];\n        return {\n                value: x1,\n                height: 2,\n                left: singleton(x0),\n                right: null\n              };\n    case 3 : \n        var x0$1 = arr[off];\n        var x1$1 = arr[off - 1 | 0];\n        var x2 = arr[off - 2 | 0];\n        return {\n                value: x1$1,\n                height: 2,\n                left: singleton(x0$1),\n                right: singleton(x2)\n              };\n    default:\n      var nl = len / 2 | 0;\n      var left = fromSortedArrayRevAux(arr, off, nl);\n      var mid = arr[off - nl | 0];\n      var right = fromSortedArrayRevAux(arr, (off - nl | 0) - 1 | 0, (len - nl | 0) - 1 | 0);\n      return create(left, mid, right);\n  }\n}\n\nfunction fromSortedArrayAux(arr, off, len) {\n  switch (len) {\n    case 0 : \n        return null;\n    case 1 : \n        return singleton(arr[off]);\n    case 2 : \n        var x0 = arr[off];\n        var x1 = arr[off + 1 | 0];\n        return {\n                value: x1,\n                height: 2,\n                left: singleton(x0),\n                right: null\n              };\n    case 3 : \n        var x0$1 = arr[off];\n        var x1$1 = arr[off + 1 | 0];\n        var x2 = arr[off + 2 | 0];\n        return {\n                value: x1$1,\n                height: 2,\n                left: singleton(x0$1),\n                right: singleton(x2)\n              };\n    default:\n      var nl = len / 2 | 0;\n      var left = fromSortedArrayAux(arr, off, nl);\n      var mid = arr[off + nl | 0];\n      var right = fromSortedArrayAux(arr, (off + nl | 0) + 1 | 0, (len - nl | 0) - 1 | 0);\n      return create(left, mid, right);\n  }\n}\n\nfunction fromSortedArrayUnsafe(arr) {\n  return fromSortedArrayAux(arr, 0, arr.length);\n}\n\nfunction keepSharedU(n, p) {\n  if (n !== null) {\n    var l = n.left;\n    var v = n.value;\n    var r = n.right;\n    var newL = keepSharedU(l, p);\n    var pv = p(v);\n    var newR = keepSharedU(r, p);\n    if (pv) {\n      if (l === newL && r === newR) {\n        return n;\n      } else {\n        return joinShared(newL, v, newR);\n      }\n    } else {\n      return concatShared(newL, newR);\n    }\n  } else {\n    return null;\n  }\n}\n\nfunction keepShared(n, p) {\n  return keepSharedU(n, Curry.__1(p));\n}\n\nfunction keepCopyU(n, p) {\n  if (n !== null) {\n    var size = lengthNode(n);\n    var v = new Array(size);\n    var last = fillArrayWithFilter(n, 0, v, p);\n    return fromSortedArrayAux(v, 0, last);\n  } else {\n    return null;\n  }\n}\n\nfunction keepCopy(n, p) {\n  return keepCopyU(n, Curry.__1(p));\n}\n\nfunction partitionCopyU(n, p) {\n  if (n !== null) {\n    var size = lengthNode(n);\n    var v = new Array(size);\n    var backward = size - 1 | 0;\n    var cursor = {\n      forward: 0,\n      backward: backward\n    };\n    fillArrayWithPartition(n, cursor, v, p);\n    var forwardLen = cursor.forward;\n    return /* tuple */[\n            fromSortedArrayAux(v, 0, forwardLen),\n            fromSortedArrayRevAux(v, backward, size - forwardLen | 0)\n          ];\n  } else {\n    return /* tuple */[\n            null,\n            null\n          ];\n  }\n}\n\nfunction partitionCopy(n, p) {\n  return partitionCopyU(n, Curry.__1(p));\n}\n\nfunction has(_t, x, cmp) {\n  while(true) {\n    var t = _t;\n    if (t !== null) {\n      var v = t.value;\n      var c = cmp(x, v);\n      if (c === 0) {\n        return true;\n      } else {\n        _t = c < 0 ? t.left : t.right;\n        continue ;\n      }\n    } else {\n      return false;\n    }\n  };\n}\n\nfunction cmp(s1, s2, cmp$1) {\n  var len1 = size(s1);\n  var len2 = size(s2);\n  if (len1 === len2) {\n    var _e1 = stackAllLeft(s1, /* [] */0);\n    var _e2 = stackAllLeft(s2, /* [] */0);\n    var cmp$2 = cmp$1;\n    while(true) {\n      var e2 = _e2;\n      var e1 = _e1;\n      if (e1 && e2) {\n        var h2 = e2[0];\n        var h1 = e1[0];\n        var c = cmp$2(h1.value, h2.value);\n        if (c === 0) {\n          _e2 = stackAllLeft(h2.right, e2[1]);\n          _e1 = stackAllLeft(h1.right, e1[1]);\n          continue ;\n        } else {\n          return c;\n        }\n      } else {\n        return 0;\n      }\n    };\n  } else if (len1 < len2) {\n    return -1;\n  } else {\n    return 1;\n  }\n}\n\nfunction eq(s1, s2, c) {\n  return cmp(s1, s2, c) === 0;\n}\n\nfunction subset(_s1, _s2, cmp) {\n  while(true) {\n    var s2 = _s2;\n    var s1 = _s1;\n    if (s1 !== null) {\n      if (s2 !== null) {\n        var l1 = s1.left;\n        var v1 = s1.value;\n        var r1 = s1.right;\n        var l2 = s2.left;\n        var v2 = s2.value;\n        var r2 = s2.right;\n        var c = cmp(v1, v2);\n        if (c === 0) {\n          if (subset(l1, l2, cmp)) {\n            _s2 = r2;\n            _s1 = r1;\n            continue ;\n          } else {\n            return false;\n          }\n        } else if (c < 0) {\n          if (subset(create(l1, v1, null), l2, cmp)) {\n            _s1 = r1;\n            continue ;\n          } else {\n            return false;\n          }\n        } else if (subset(create(null, v1, r1), r2, cmp)) {\n          _s1 = l1;\n          continue ;\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    } else {\n      return true;\n    }\n  };\n}\n\nfunction get(_n, x, cmp) {\n  while(true) {\n    var n = _n;\n    if (n !== null) {\n      var v = n.value;\n      var c = cmp(x, v);\n      if (c === 0) {\n        return Caml_option.some(v);\n      } else {\n        _n = c < 0 ? n.left : n.right;\n        continue ;\n      }\n    } else {\n      return undefined;\n    }\n  };\n}\n\nfunction getUndefined(_n, x, cmp) {\n  while(true) {\n    var n = _n;\n    if (n !== null) {\n      var v = n.value;\n      var c = cmp(x, v);\n      if (c === 0) {\n        return v;\n      } else {\n        _n = c < 0 ? n.left : n.right;\n        continue ;\n      }\n    } else {\n      return undefined;\n    }\n  };\n}\n\nfunction getExn(_n, x, cmp) {\n  while(true) {\n    var n = _n;\n    if (n !== null) {\n      var v = n.value;\n      var c = cmp(x, v);\n      if (c === 0) {\n        return v;\n      } else {\n        _n = c < 0 ? n.left : n.right;\n        continue ;\n      }\n    } else {\n      throw new Error(\"getExn0\");\n    }\n  };\n}\n\nfunction rotateWithLeftChild(k2) {\n  var k1 = k2.left;\n  k2.left = k1.right;\n  k1.right = k2;\n  var hlk2 = treeHeight(k2.left);\n  var hrk2 = treeHeight(k2.right);\n  k2.height = (\n    hlk2 > hrk2 ? hlk2 : hrk2\n  ) + 1 | 0;\n  var hlk1 = treeHeight(k1.left);\n  var hk2 = k2.height;\n  k1.height = (\n    hlk1 > hk2 ? hlk1 : hk2\n  ) + 1 | 0;\n  return k1;\n}\n\nfunction rotateWithRightChild(k1) {\n  var k2 = k1.right;\n  k1.right = k2.left;\n  k2.left = k1;\n  var hlk1 = treeHeight(k1.left);\n  var hrk1 = treeHeight(k1.right);\n  k1.height = (\n    hlk1 > hrk1 ? hlk1 : hrk1\n  ) + 1 | 0;\n  var hrk2 = treeHeight(k2.right);\n  var hk1 = k1.height;\n  k2.height = (\n    hrk2 > hk1 ? hrk2 : hk1\n  ) + 1 | 0;\n  return k2;\n}\n\nfunction doubleWithLeftChild(k3) {\n  var v = rotateWithRightChild(k3.left);\n  k3.left = v;\n  return rotateWithLeftChild(k3);\n}\n\nfunction doubleWithRightChild(k2) {\n  var v = rotateWithLeftChild(k2.right);\n  k2.right = v;\n  return rotateWithRightChild(k2);\n}\n\nfunction heightUpdateMutate(t) {\n  var hlt = treeHeight(t.left);\n  var hrt = treeHeight(t.right);\n  t.height = (\n    hlt > hrt ? hlt : hrt\n  ) + 1 | 0;\n  return t;\n}\n\nfunction balMutate(nt) {\n  var l = nt.left;\n  var r = nt.right;\n  var hl = treeHeight(l);\n  var hr = treeHeight(r);\n  if (hl > (2 + hr | 0)) {\n    var ll = l.left;\n    var lr = l.right;\n    if (heightGe(ll, lr)) {\n      return heightUpdateMutate(rotateWithLeftChild(nt));\n    } else {\n      return heightUpdateMutate(doubleWithLeftChild(nt));\n    }\n  } else if (hr > (2 + hl | 0)) {\n    var rl = r.left;\n    var rr = r.right;\n    if (heightGe(rr, rl)) {\n      return heightUpdateMutate(rotateWithRightChild(nt));\n    } else {\n      return heightUpdateMutate(doubleWithRightChild(nt));\n    }\n  } else {\n    nt.height = (\n      hl > hr ? hl : hr\n    ) + 1 | 0;\n    return nt;\n  }\n}\n\nfunction addMutate(cmp, t, x) {\n  if (t !== null) {\n    var k = t.value;\n    var c = cmp(x, k);\n    if (c === 0) {\n      return t;\n    } else {\n      var l = t.left;\n      var r = t.right;\n      if (c < 0) {\n        var ll = addMutate(cmp, l, x);\n        t.left = ll;\n      } else {\n        t.right = addMutate(cmp, r, x);\n      }\n      return balMutate(t);\n    }\n  } else {\n    return singleton(x);\n  }\n}\n\nfunction fromArray(xs, cmp) {\n  var len = xs.length;\n  if (len === 0) {\n    return null;\n  } else {\n    var next = Belt_SortArray.strictlySortedLengthU(xs, (function (x, y) {\n            return cmp(x, y) < 0;\n          }));\n    var result;\n    if (next >= 0) {\n      result = fromSortedArrayAux(xs, 0, next);\n    } else {\n      next = -next | 0;\n      result = fromSortedArrayRevAux(xs, next - 1 | 0, next);\n    }\n    for(var i = next ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n      result = addMutate(cmp, result, xs[i]);\n    }\n    return result;\n  }\n}\n\nfunction removeMinAuxWithRootMutate(nt, n) {\n  var rn = n.right;\n  var ln = n.left;\n  if (ln !== null) {\n    n.left = removeMinAuxWithRootMutate(nt, ln);\n    return balMutate(n);\n  } else {\n    nt.value = n.value;\n    return rn;\n  }\n}\n\nvar empty = null;\n\nexports.copy = copy;\nexports.create = create;\nexports.bal = bal;\nexports.singleton = singleton;\nexports.minimum = minimum;\nexports.minUndefined = minUndefined;\nexports.maximum = maximum;\nexports.maxUndefined = maxUndefined;\nexports.removeMinAuxWithRef = removeMinAuxWithRef;\nexports.empty = empty;\nexports.isEmpty = isEmpty;\nexports.stackAllLeft = stackAllLeft;\nexports.forEachU = forEachU;\nexports.forEach = forEach;\nexports.reduceU = reduceU;\nexports.reduce = reduce;\nexports.everyU = everyU;\nexports.every = every;\nexports.someU = someU;\nexports.some = some;\nexports.joinShared = joinShared;\nexports.concatShared = concatShared;\nexports.keepSharedU = keepSharedU;\nexports.keepShared = keepShared;\nexports.keepCopyU = keepCopyU;\nexports.keepCopy = keepCopy;\nexports.partitionSharedU = partitionSharedU;\nexports.partitionShared = partitionShared;\nexports.partitionCopyU = partitionCopyU;\nexports.partitionCopy = partitionCopy;\nexports.lengthNode = lengthNode;\nexports.size = size;\nexports.toList = toList;\nexports.checkInvariantInternal = checkInvariantInternal;\nexports.fillArray = fillArray;\nexports.toArray = toArray;\nexports.fromSortedArrayAux = fromSortedArrayAux;\nexports.fromSortedArrayRevAux = fromSortedArrayRevAux;\nexports.fromSortedArrayUnsafe = fromSortedArrayUnsafe;\nexports.has = has;\nexports.cmp = cmp;\nexports.eq = eq;\nexports.subset = subset;\nexports.get = get;\nexports.getUndefined = getUndefined;\nexports.getExn = getExn;\nexports.fromArray = fromArray;\nexports.addMutate = addMutate;\nexports.balMutate = balMutate;\nexports.removeMinAuxWithRootMutate = removeMinAuxWithRootMutate;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/belt_internalAVLset.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/belt_internalSetString.js":
/*!*******************************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/belt_internalSetString.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Belt_internalAVLset = __webpack_require__(/*! ./belt_internalAVLset.js */ \"./node_modules/bs-platform/lib/js/belt_internalAVLset.js\");\nvar Belt_SortArrayString = __webpack_require__(/*! ./belt_SortArrayString.js */ \"./node_modules/bs-platform/lib/js/belt_SortArrayString.js\");\n\nfunction has(_t, x) {\n  while(true) {\n    var t = _t;\n    if (t !== null) {\n      var v = t.value;\n      if (x === v) {\n        return true;\n      } else {\n        _t = x < v ? t.left : t.right;\n        continue ;\n      }\n    } else {\n      return false;\n    }\n  };\n}\n\nfunction compareAux(_e1, _e2) {\n  while(true) {\n    var e2 = _e2;\n    var e1 = _e1;\n    if (e1 && e2) {\n      var h2 = e2[0];\n      var h1 = e1[0];\n      var k1 = h1.value;\n      var k2 = h2.value;\n      if (k1 === k2) {\n        _e2 = Belt_internalAVLset.stackAllLeft(h2.right, e2[1]);\n        _e1 = Belt_internalAVLset.stackAllLeft(h1.right, e1[1]);\n        continue ;\n      } else if (k1 < k2) {\n        return -1;\n      } else {\n        return 1;\n      }\n    } else {\n      return 0;\n    }\n  };\n}\n\nfunction cmp(s1, s2) {\n  var len1 = Belt_internalAVLset.size(s1);\n  var len2 = Belt_internalAVLset.size(s2);\n  if (len1 === len2) {\n    return compareAux(Belt_internalAVLset.stackAllLeft(s1, /* [] */0), Belt_internalAVLset.stackAllLeft(s2, /* [] */0));\n  } else if (len1 < len2) {\n    return -1;\n  } else {\n    return 1;\n  }\n}\n\nfunction eq(s1, s2) {\n  return cmp(s1, s2) === 0;\n}\n\nfunction subset(_s1, _s2) {\n  while(true) {\n    var s2 = _s2;\n    var s1 = _s1;\n    if (s1 !== null) {\n      if (s2 !== null) {\n        var l1 = s1.left;\n        var v1 = s1.value;\n        var r1 = s1.right;\n        var l2 = s2.left;\n        var v2 = s2.value;\n        var r2 = s2.right;\n        if (v1 === v2) {\n          if (subset(l1, l2)) {\n            _s2 = r2;\n            _s1 = r1;\n            continue ;\n          } else {\n            return false;\n          }\n        } else if (v1 < v2) {\n          if (subset(Belt_internalAVLset.create(l1, v1, Belt_internalAVLset.empty), l2)) {\n            _s1 = r1;\n            continue ;\n          } else {\n            return false;\n          }\n        } else if (subset(Belt_internalAVLset.create(Belt_internalAVLset.empty, v1, r1), r2)) {\n          _s1 = l1;\n          continue ;\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    } else {\n      return true;\n    }\n  };\n}\n\nfunction get(_n, x) {\n  while(true) {\n    var n = _n;\n    if (n !== null) {\n      var v = n.value;\n      if (x === v) {\n        return v;\n      } else {\n        _n = x < v ? n.left : n.right;\n        continue ;\n      }\n    } else {\n      return undefined;\n    }\n  };\n}\n\nfunction getUndefined(_n, x) {\n  while(true) {\n    var n = _n;\n    if (n !== null) {\n      var v = n.value;\n      if (x === v) {\n        return v;\n      } else {\n        _n = x < v ? n.left : n.right;\n        continue ;\n      }\n    } else {\n      return undefined;\n    }\n  };\n}\n\nfunction getExn(_n, x) {\n  while(true) {\n    var n = _n;\n    if (n !== null) {\n      var v = n.value;\n      if (x === v) {\n        return v;\n      } else {\n        _n = x < v ? n.left : n.right;\n        continue ;\n      }\n    } else {\n      throw new Error(\"getExn\");\n    }\n  };\n}\n\nfunction addMutate(t, x) {\n  if (t !== null) {\n    var k = t.value;\n    if (x === k) {\n      return t;\n    } else {\n      var l = t.left;\n      var r = t.right;\n      if (x < k) {\n        t.left = addMutate(l, x);\n      } else {\n        t.right = addMutate(r, x);\n      }\n      return Belt_internalAVLset.balMutate(t);\n    }\n  } else {\n    return Belt_internalAVLset.singleton(x);\n  }\n}\n\nfunction fromArray(xs) {\n  var len = xs.length;\n  if (len === 0) {\n    return Belt_internalAVLset.empty;\n  } else {\n    var next = Belt_SortArrayString.strictlySortedLength(xs);\n    var result;\n    if (next >= 0) {\n      result = Belt_internalAVLset.fromSortedArrayAux(xs, 0, next);\n    } else {\n      next = -next | 0;\n      result = Belt_internalAVLset.fromSortedArrayRevAux(xs, next - 1 | 0, next);\n    }\n    for(var i = next ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n      result = addMutate(result, xs[i]);\n    }\n    return result;\n  }\n}\n\nvar S = 0;\n\nvar N = 0;\n\nvar A = 0;\n\nexports.S = S;\nexports.N = N;\nexports.A = A;\nexports.has = has;\nexports.compareAux = compareAux;\nexports.cmp = cmp;\nexports.eq = eq;\nexports.subset = subset;\nexports.get = get;\nexports.getUndefined = getUndefined;\nexports.getExn = getExn;\nexports.addMutate = addMutate;\nexports.fromArray = fromArray;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/belt_internalSetString.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/block.js":
/*!**************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/block.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n\nfunction __(tag, block) {\n  block.tag = tag;\n  return block;\n}\n\nfunction record(meta, xs) {\n  return Object.defineProperty(xs, Symbol.for(\"BsRecord\"), {\n              value: meta\n            });\n}\n\nfunction variant(meta, tag, xs) {\n  xs.tag = tag;\n  return Object.defineProperty(xs, Symbol.for(\"BsVariant\"), {\n              value: meta\n            });\n}\n\nfunction simpleVariant(meta, xs) {\n  return Object.defineProperty(xs, Symbol.for(\"BsVariant\"), {\n              value: meta\n            });\n}\n\nfunction localModule(meta, xs) {\n  return Object.defineProperty(xs, Symbol.for(\"BsLocalModule\"), {\n              value: meta\n            });\n}\n\nfunction polyVar(meta, xs) {\n  return Object.defineProperty(xs, Symbol.for(\"BsPolyVar\"), {\n              value: meta\n            });\n}\n\nfunction spliceApply (fn,args){\n  var i, argLen; \n  argLen = args.length\n  var applied = []\n  for(i = 0; i < argLen - 1; ++i){\n    applied.push(args[i])\n  }\n  var lastOne = args[argLen - 1]\n  for(i = 0; i < lastOne.length; ++i ){\n    applied.push(lastOne[i])\n  }\n  return fn.apply(null,applied)\n};\n\nfunction spliceObjApply (obj,name,args){\n  var i, argLen; \n  argLen = args.length\n  var applied = []\n  for(i = 0; i < argLen - 1; ++i){\n    applied.push(args[i])\n  }\n  var lastOne = args[argLen - 1]\n  for(i = 0; i < lastOne.length; ++i ){\n    applied.push(lastOne[i])\n  }\n  return (obj[name]).apply(obj,applied)\n};\n\nexports.__ = __;\nexports.record = record;\nexports.variant = variant;\nexports.simpleVariant = simpleVariant;\nexports.localModule = localModule;\nexports.polyVar = polyVar;\nexports.spliceApply = spliceApply;\nexports.spliceObjApply = spliceObjApply;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/block.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/bytes.js":
/*!**************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/bytes.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Char = __webpack_require__(/*! ./char.js */ \"./node_modules/bs-platform/lib/js/char.js\");\nvar List = __webpack_require__(/*! ./list.js */ \"./node_modules/bs-platform/lib/js/list.js\");\nvar Curry = __webpack_require__(/*! ./curry.js */ \"./node_modules/bs-platform/lib/js/curry.js\");\nvar Caml_obj = __webpack_require__(/*! ./caml_obj.js */ \"./node_modules/bs-platform/lib/js/caml_obj.js\");\nvar Caml_bytes = __webpack_require__(/*! ./caml_bytes.js */ \"./node_modules/bs-platform/lib/js/caml_bytes.js\");\nvar Caml_int32 = __webpack_require__(/*! ./caml_int32.js */ \"./node_modules/bs-platform/lib/js/caml_int32.js\");\nvar Caml_primitive = __webpack_require__(/*! ./caml_primitive.js */ \"./node_modules/bs-platform/lib/js/caml_primitive.js\");\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction make(n, c) {\n  var s = Caml_bytes.caml_create_bytes(n);\n  Caml_bytes.caml_fill_bytes(s, 0, n, c);\n  return s;\n}\n\nfunction init(n, f) {\n  var s = Caml_bytes.caml_create_bytes(n);\n  for(var i = 0 ,i_finish = n - 1 | 0; i <= i_finish; ++i){\n    s[i] = Curry._1(f, i);\n  }\n  return s;\n}\n\nvar empty = [];\n\nfunction copy(s) {\n  var len = s.length;\n  var r = Caml_bytes.caml_create_bytes(len);\n  Caml_bytes.caml_blit_bytes(s, 0, r, 0, len);\n  return r;\n}\n\nfunction to_string(b) {\n  return Caml_bytes.bytes_to_string(copy(b));\n}\n\nfunction of_string(s) {\n  return copy(Caml_bytes.bytes_of_string(s));\n}\n\nfunction sub(s, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.sub / Bytes.sub\"\n        ];\n  } else {\n    var r = Caml_bytes.caml_create_bytes(len);\n    Caml_bytes.caml_blit_bytes(s, ofs, r, 0, len);\n    return r;\n  }\n}\n\nfunction sub_string(b, ofs, len) {\n  return Caml_bytes.bytes_to_string(sub(b, ofs, len));\n}\n\nfunction extend(s, left, right) {\n  var len = (s.length + left | 0) + right | 0;\n  var r = Caml_bytes.caml_create_bytes(len);\n  var match = left < 0 ? /* tuple */[\n      -left | 0,\n      0\n    ] : /* tuple */[\n      0,\n      left\n    ];\n  var dstoff = match[1];\n  var srcoff = match[0];\n  var cpylen = Caml_primitive.caml_int_min(s.length - srcoff | 0, len - dstoff | 0);\n  if (cpylen > 0) {\n    Caml_bytes.caml_blit_bytes(s, srcoff, r, dstoff, cpylen);\n  }\n  return r;\n}\n\nfunction fill(s, ofs, len, c) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.fill / Bytes.fill\"\n        ];\n  } else {\n    return Caml_bytes.caml_fill_bytes(s, ofs, len, c);\n  }\n}\n\nfunction blit(s1, ofs1, s2, ofs2, len) {\n  if (len < 0 || ofs1 < 0 || ofs1 > (s1.length - len | 0) || ofs2 < 0 || ofs2 > (s2.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Bytes.blit\"\n        ];\n  } else {\n    return Caml_bytes.caml_blit_bytes(s1, ofs1, s2, ofs2, len);\n  }\n}\n\nfunction blit_string(s1, ofs1, s2, ofs2, len) {\n  if (len < 0 || ofs1 < 0 || ofs1 > (s1.length - len | 0) || ofs2 < 0 || ofs2 > (s2.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.blit / Bytes.blit_string\"\n        ];\n  } else {\n    return Caml_bytes.caml_blit_string(s1, ofs1, s2, ofs2, len);\n  }\n}\n\nfunction iter(f, a) {\n  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){\n    Curry._1(f, a[i]);\n  }\n  return /* () */0;\n}\n\nfunction iteri(f, a) {\n  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){\n    Curry._2(f, i, a[i]);\n  }\n  return /* () */0;\n}\n\nfunction concat(sep, l) {\n  if (l) {\n    var hd = l[0];\n    var num = /* record */[/* contents */0];\n    var len = /* record */[/* contents */0];\n    List.iter((function (s) {\n            num[0] = num[0] + 1 | 0;\n            len[0] = len[0] + s.length | 0;\n            return /* () */0;\n          }), l);\n    var r = Caml_bytes.caml_create_bytes(len[0] + Caml_int32.imul(sep.length, num[0] - 1 | 0) | 0);\n    Caml_bytes.caml_blit_bytes(hd, 0, r, 0, hd.length);\n    var pos = /* record */[/* contents */hd.length];\n    List.iter((function (s) {\n            Caml_bytes.caml_blit_bytes(sep, 0, r, pos[0], sep.length);\n            pos[0] = pos[0] + sep.length | 0;\n            Caml_bytes.caml_blit_bytes(s, 0, r, pos[0], s.length);\n            pos[0] = pos[0] + s.length | 0;\n            return /* () */0;\n          }), l[1]);\n    return r;\n  } else {\n    return empty;\n  }\n}\n\nfunction cat(s1, s2) {\n  var l1 = s1.length;\n  var l2 = s2.length;\n  var r = Caml_bytes.caml_create_bytes(l1 + l2 | 0);\n  Caml_bytes.caml_blit_bytes(s1, 0, r, 0, l1);\n  Caml_bytes.caml_blit_bytes(s2, 0, r, l1, l2);\n  return r;\n}\n\nfunction is_space(param) {\n  var switcher = param - 9 | 0;\n  if (switcher > 4 || switcher < 0) {\n    return switcher === 23;\n  } else {\n    return switcher !== 2;\n  }\n}\n\nfunction trim(s) {\n  var len = s.length;\n  var i = 0;\n  while(i < len && is_space(s[i])) {\n    i = i + 1 | 0;\n  };\n  var j = len - 1 | 0;\n  while(j >= i && is_space(s[j])) {\n    j = j - 1 | 0;\n  };\n  if (j >= i) {\n    return sub(s, i, (j - i | 0) + 1 | 0);\n  } else {\n    return empty;\n  }\n}\n\nfunction escaped(s) {\n  var n = 0;\n  for(var i = 0 ,i_finish = s.length - 1 | 0; i <= i_finish; ++i){\n    var match = s[i];\n    var tmp;\n    if (match >= 32) {\n      var switcher = match - 34 | 0;\n      tmp = switcher > 58 || switcher < 0 ? (\n          switcher >= 93 ? 4 : 1\n        ) : (\n          switcher > 57 || switcher < 1 ? 2 : 1\n        );\n    } else {\n      tmp = match >= 11 ? (\n          match !== 13 ? 4 : 2\n        ) : (\n          match >= 8 ? 2 : 4\n        );\n    }\n    n = n + tmp | 0;\n  }\n  if (n === s.length) {\n    return copy(s);\n  } else {\n    var s$prime = Caml_bytes.caml_create_bytes(n);\n    n = 0;\n    for(var i$1 = 0 ,i_finish$1 = s.length - 1 | 0; i$1 <= i_finish$1; ++i$1){\n      var c = s[i$1];\n      var exit = 0;\n      if (c >= 35) {\n        if (c !== 92) {\n          if (c >= 127) {\n            exit = 1;\n          } else {\n            s$prime[n] = c;\n          }\n        } else {\n          exit = 2;\n        }\n      } else if (c >= 32) {\n        if (c >= 34) {\n          exit = 2;\n        } else {\n          s$prime[n] = c;\n        }\n      } else if (c >= 14) {\n        exit = 1;\n      } else {\n        switch (c) {\n          case 8 : \n              s$prime[n] = /* \"\\\\\" */92;\n              n = n + 1 | 0;\n              s$prime[n] = /* \"b\" */98;\n              break;\n          case 9 : \n              s$prime[n] = /* \"\\\\\" */92;\n              n = n + 1 | 0;\n              s$prime[n] = /* \"t\" */116;\n              break;\n          case 10 : \n              s$prime[n] = /* \"\\\\\" */92;\n              n = n + 1 | 0;\n              s$prime[n] = /* \"n\" */110;\n              break;\n          case 0 : \n          case 1 : \n          case 2 : \n          case 3 : \n          case 4 : \n          case 5 : \n          case 6 : \n          case 7 : \n          case 11 : \n          case 12 : \n              exit = 1;\n              break;\n          case 13 : \n              s$prime[n] = /* \"\\\\\" */92;\n              n = n + 1 | 0;\n              s$prime[n] = /* \"r\" */114;\n              break;\n          \n        }\n      }\n      switch (exit) {\n        case 1 : \n            s$prime[n] = /* \"\\\\\" */92;\n            n = n + 1 | 0;\n            s$prime[n] = 48 + (c / 100 | 0) | 0;\n            n = n + 1 | 0;\n            s$prime[n] = 48 + (c / 10 | 0) % 10 | 0;\n            n = n + 1 | 0;\n            s$prime[n] = 48 + c % 10 | 0;\n            break;\n        case 2 : \n            s$prime[n] = /* \"\\\\\" */92;\n            n = n + 1 | 0;\n            s$prime[n] = c;\n            break;\n        \n      }\n      n = n + 1 | 0;\n    }\n    return s$prime;\n  }\n}\n\nfunction map(f, s) {\n  var l = s.length;\n  if (l === 0) {\n    return s;\n  } else {\n    var r = Caml_bytes.caml_create_bytes(l);\n    for(var i = 0 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n      r[i] = Curry._1(f, s[i]);\n    }\n    return r;\n  }\n}\n\nfunction mapi(f, s) {\n  var l = s.length;\n  if (l === 0) {\n    return s;\n  } else {\n    var r = Caml_bytes.caml_create_bytes(l);\n    for(var i = 0 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n      r[i] = Curry._2(f, i, s[i]);\n    }\n    return r;\n  }\n}\n\nfunction uppercase(s) {\n  return map(Char.uppercase, s);\n}\n\nfunction lowercase(s) {\n  return map(Char.lowercase, s);\n}\n\nfunction apply1(f, s) {\n  if (s.length === 0) {\n    return s;\n  } else {\n    var r = copy(s);\n    r[0] = Curry._1(f, s[0]);\n    return r;\n  }\n}\n\nfunction capitalize(s) {\n  return apply1(Char.uppercase, s);\n}\n\nfunction uncapitalize(s) {\n  return apply1(Char.lowercase, s);\n}\n\nfunction index_rec(s, lim, _i, c) {\n  while(true) {\n    var i = _i;\n    if (i >= lim) {\n      throw Caml_builtin_exceptions.not_found;\n    } else if (s[i] === c) {\n      return i;\n    } else {\n      _i = i + 1 | 0;\n      continue ;\n    }\n  };\n}\n\nfunction index(s, c) {\n  return index_rec(s, s.length, 0, c);\n}\n\nfunction index_from(s, i, c) {\n  var l = s.length;\n  if (i < 0 || i > l) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.index_from / Bytes.index_from\"\n        ];\n  } else {\n    return index_rec(s, l, i, c);\n  }\n}\n\nfunction rindex_rec(s, _i, c) {\n  while(true) {\n    var i = _i;\n    if (i < 0) {\n      throw Caml_builtin_exceptions.not_found;\n    } else if (s[i] === c) {\n      return i;\n    } else {\n      _i = i - 1 | 0;\n      continue ;\n    }\n  };\n}\n\nfunction rindex(s, c) {\n  return rindex_rec(s, s.length - 1 | 0, c);\n}\n\nfunction rindex_from(s, i, c) {\n  if (i < -1 || i >= s.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.rindex_from / Bytes.rindex_from\"\n        ];\n  } else {\n    return rindex_rec(s, i, c);\n  }\n}\n\nfunction contains_from(s, i, c) {\n  var l = s.length;\n  if (i < 0 || i > l) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.contains_from / Bytes.contains_from\"\n        ];\n  } else {\n    try {\n      index_rec(s, l, i, c);\n      return true;\n    }\n    catch (exn){\n      if (exn === Caml_builtin_exceptions.not_found) {\n        return false;\n      } else {\n        throw exn;\n      }\n    }\n  }\n}\n\nfunction contains(s, c) {\n  return contains_from(s, 0, c);\n}\n\nfunction rcontains_from(s, i, c) {\n  if (i < 0 || i >= s.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.rcontains_from / Bytes.rcontains_from\"\n        ];\n  } else {\n    try {\n      rindex_rec(s, i, c);\n      return true;\n    }\n    catch (exn){\n      if (exn === Caml_builtin_exceptions.not_found) {\n        return false;\n      } else {\n        throw exn;\n      }\n    }\n  }\n}\n\nvar compare = Caml_obj.caml_compare;\n\nvar unsafe_to_string = Caml_bytes.bytes_to_string;\n\nvar unsafe_of_string = Caml_bytes.bytes_of_string;\n\nexports.make = make;\nexports.init = init;\nexports.empty = empty;\nexports.copy = copy;\nexports.of_string = of_string;\nexports.to_string = to_string;\nexports.sub = sub;\nexports.sub_string = sub_string;\nexports.extend = extend;\nexports.fill = fill;\nexports.blit = blit;\nexports.blit_string = blit_string;\nexports.concat = concat;\nexports.cat = cat;\nexports.iter = iter;\nexports.iteri = iteri;\nexports.map = map;\nexports.mapi = mapi;\nexports.trim = trim;\nexports.escaped = escaped;\nexports.index = index;\nexports.rindex = rindex;\nexports.index_from = index_from;\nexports.rindex_from = rindex_from;\nexports.contains = contains;\nexports.contains_from = contains_from;\nexports.rcontains_from = rcontains_from;\nexports.uppercase = uppercase;\nexports.lowercase = lowercase;\nexports.capitalize = capitalize;\nexports.uncapitalize = uncapitalize;\nexports.compare = compare;\nexports.unsafe_to_string = unsafe_to_string;\nexports.unsafe_of_string = unsafe_of_string;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/bytes.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_array.js":
/*!*******************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_array.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction caml_array_sub(x, offset, len) {\n  var result = new Array(len);\n  var j = 0;\n  var i = offset;\n  while(j < len) {\n    result[j] = x[i];\n    j = j + 1 | 0;\n    i = i + 1 | 0;\n  };\n  return result;\n}\n\nfunction len(_acc, _l) {\n  while(true) {\n    var l = _l;\n    var acc = _acc;\n    if (l) {\n      _l = l[1];\n      _acc = l[0].length + acc | 0;\n      continue ;\n    } else {\n      return acc;\n    }\n  };\n}\n\nfunction fill(arr, _i, _l) {\n  while(true) {\n    var l = _l;\n    var i = _i;\n    if (l) {\n      var x = l[0];\n      var l$1 = x.length;\n      var k = i;\n      var j = 0;\n      while(j < l$1) {\n        arr[k] = x[j];\n        k = k + 1 | 0;\n        j = j + 1 | 0;\n      };\n      _l = l[1];\n      _i = k;\n      continue ;\n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction caml_array_concat(l) {\n  var v = len(0, l);\n  var result = new Array(v);\n  fill(result, 0, l);\n  return result;\n}\n\nfunction caml_array_set(xs, index, newval) {\n  if (index < 0 || index >= xs.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"index out of bounds\"\n        ];\n  } else {\n    xs[index] = newval;\n    return /* () */0;\n  }\n}\n\nfunction caml_array_get(xs, index) {\n  if (index < 0 || index >= xs.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"index out of bounds\"\n        ];\n  } else {\n    return xs[index];\n  }\n}\n\nfunction caml_make_vect(len, init) {\n  var b = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    b[i] = init;\n  }\n  return b;\n}\n\nfunction caml_make_float_vect(len) {\n  var b = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    b[i] = 0;\n  }\n  return b;\n}\n\nfunction caml_array_blit(a1, i1, a2, i2, len) {\n  if (i2 <= i1) {\n    for(var j = 0 ,j_finish = len - 1 | 0; j <= j_finish; ++j){\n      a2[j + i2 | 0] = a1[j + i1 | 0];\n    }\n    return /* () */0;\n  } else {\n    for(var j$1 = len - 1 | 0; j$1 >= 0; --j$1){\n      a2[j$1 + i2 | 0] = a1[j$1 + i1 | 0];\n    }\n    return /* () */0;\n  }\n}\n\nfunction caml_array_dup(prim) {\n  return prim.slice(0);\n}\n\nexports.caml_array_dup = caml_array_dup;\nexports.caml_array_sub = caml_array_sub;\nexports.caml_array_concat = caml_array_concat;\nexports.caml_make_vect = caml_make_vect;\nexports.caml_make_float_vect = caml_make_float_vect;\nexports.caml_array_blit = caml_array_blit;\nexports.caml_array_get = caml_array_get;\nexports.caml_array_set = caml_array_set;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_array.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js":
/*!********************************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n\nvar out_of_memory = /* tuple */[\n  \"Out_of_memory\",\n  0\n];\n\nvar sys_error = /* tuple */[\n  \"Sys_error\",\n  -1\n];\n\nvar failure = /* tuple */[\n  \"Failure\",\n  -2\n];\n\nvar invalid_argument = /* tuple */[\n  \"Invalid_argument\",\n  -3\n];\n\nvar end_of_file = /* tuple */[\n  \"End_of_file\",\n  -4\n];\n\nvar division_by_zero = /* tuple */[\n  \"Division_by_zero\",\n  -5\n];\n\nvar not_found = /* tuple */[\n  \"Not_found\",\n  -6\n];\n\nvar match_failure = /* tuple */[\n  \"Match_failure\",\n  -7\n];\n\nvar stack_overflow = /* tuple */[\n  \"Stack_overflow\",\n  -8\n];\n\nvar sys_blocked_io = /* tuple */[\n  \"Sys_blocked_io\",\n  -9\n];\n\nvar assert_failure = /* tuple */[\n  \"Assert_failure\",\n  -10\n];\n\nvar undefined_recursive_module = /* tuple */[\n  \"Undefined_recursive_module\",\n  -11\n];\n\nout_of_memory.tag = 248;\n\nsys_error.tag = 248;\n\nfailure.tag = 248;\n\ninvalid_argument.tag = 248;\n\nend_of_file.tag = 248;\n\ndivision_by_zero.tag = 248;\n\nnot_found.tag = 248;\n\nmatch_failure.tag = 248;\n\nstack_overflow.tag = 248;\n\nsys_blocked_io.tag = 248;\n\nassert_failure.tag = 248;\n\nundefined_recursive_module.tag = 248;\n\nexports.out_of_memory = out_of_memory;\nexports.sys_error = sys_error;\nexports.failure = failure;\nexports.invalid_argument = invalid_argument;\nexports.end_of_file = end_of_file;\nexports.division_by_zero = division_by_zero;\nexports.not_found = not_found;\nexports.match_failure = match_failure;\nexports.stack_overflow = stack_overflow;\nexports.sys_blocked_io = sys_blocked_io;\nexports.assert_failure = assert_failure;\nexports.undefined_recursive_module = undefined_recursive_module;\n/*  Not a pure module */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_bytes.js":
/*!*******************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_bytes.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction get(s, i) {\n  if (i < 0 || i >= s.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"index out of bounds\"\n        ];\n  } else {\n    return s[i];\n  }\n}\n\nfunction caml_fill_bytes(s, i, l, c) {\n  if (l > 0) {\n    for(var k = i ,k_finish = (l + i | 0) - 1 | 0; k <= k_finish; ++k){\n      s[k] = c;\n    }\n    return /* () */0;\n  } else {\n    return 0;\n  }\n}\n\nfunction caml_create_bytes(len) {\n  if (len < 0) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.create\"\n        ];\n  } else {\n    var result = new Array(len);\n    for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n      result[i] = /* \"\\000\" */0;\n    }\n    return result;\n  }\n}\n\nfunction caml_blit_bytes(s1, i1, s2, i2, len) {\n  if (len > 0) {\n    if (s1 === s2) {\n      var s1$1 = s1;\n      var i1$1 = i1;\n      var i2$1 = i2;\n      var len$1 = len;\n      if (i1$1 < i2$1) {\n        var range_a = (s1$1.length - i2$1 | 0) - 1 | 0;\n        var range_b = len$1 - 1 | 0;\n        var range = range_a > range_b ? range_b : range_a;\n        for(var j = range; j >= 0; --j){\n          s1$1[i2$1 + j | 0] = s1$1[i1$1 + j | 0];\n        }\n        return /* () */0;\n      } else if (i1$1 > i2$1) {\n        var range_a$1 = (s1$1.length - i1$1 | 0) - 1 | 0;\n        var range_b$1 = len$1 - 1 | 0;\n        var range$1 = range_a$1 > range_b$1 ? range_b$1 : range_a$1;\n        for(var k = 0; k <= range$1; ++k){\n          s1$1[i2$1 + k | 0] = s1$1[i1$1 + k | 0];\n        }\n        return /* () */0;\n      } else {\n        return 0;\n      }\n    } else {\n      var off1 = s1.length - i1 | 0;\n      if (len <= off1) {\n        for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n          s2[i2 + i | 0] = s1[i1 + i | 0];\n        }\n        return /* () */0;\n      } else {\n        for(var i$1 = 0 ,i_finish$1 = off1 - 1 | 0; i$1 <= i_finish$1; ++i$1){\n          s2[i2 + i$1 | 0] = s1[i1 + i$1 | 0];\n        }\n        for(var i$2 = off1 ,i_finish$2 = len - 1 | 0; i$2 <= i_finish$2; ++i$2){\n          s2[i2 + i$2 | 0] = /* \"\\000\" */0;\n        }\n        return /* () */0;\n      }\n    }\n  } else {\n    return 0;\n  }\n}\n\nfunction bytes_to_string(a) {\n  var bytes = a;\n  var i = 0;\n  var len = a.length;\n  var s = \"\";\n  var s_len = len;\n  if (i === 0 && len <= 4096 && len === bytes.length) {\n    return String.fromCharCode.apply(null, bytes);\n  } else {\n    var offset = 0;\n    while(s_len > 0) {\n      var next = s_len < 1024 ? s_len : 1024;\n      var tmp_bytes = new Array(next);\n      caml_blit_bytes(bytes, offset, tmp_bytes, 0, next);\n      s = s + String.fromCharCode.apply(null, tmp_bytes);\n      s_len = s_len - next | 0;\n      offset = offset + next | 0;\n    };\n    return s;\n  }\n}\n\nfunction caml_blit_string(s1, i1, s2, i2, len) {\n  if (len > 0) {\n    var off1 = s1.length - i1 | 0;\n    if (len <= off1) {\n      for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n        s2[i2 + i | 0] = s1.charCodeAt(i1 + i | 0);\n      }\n      return /* () */0;\n    } else {\n      for(var i$1 = 0 ,i_finish$1 = off1 - 1 | 0; i$1 <= i_finish$1; ++i$1){\n        s2[i2 + i$1 | 0] = s1.charCodeAt(i1 + i$1 | 0);\n      }\n      for(var i$2 = off1 ,i_finish$2 = len - 1 | 0; i$2 <= i_finish$2; ++i$2){\n        s2[i2 + i$2 | 0] = /* \"\\000\" */0;\n      }\n      return /* () */0;\n    }\n  } else {\n    return 0;\n  }\n}\n\nfunction bytes_of_string(s) {\n  var len = s.length;\n  var res = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    res[i] = s.charCodeAt(i);\n  }\n  return res;\n}\n\nexports.caml_create_bytes = caml_create_bytes;\nexports.caml_fill_bytes = caml_fill_bytes;\nexports.get = get;\nexports.bytes_to_string = bytes_to_string;\nexports.caml_blit_bytes = caml_blit_bytes;\nexports.caml_blit_string = caml_blit_string;\nexports.bytes_of_string = bytes_of_string;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_bytes.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_exceptions.js":
/*!************************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_exceptions.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n\nvar id = /* record */[/* contents */0];\n\nfunction caml_set_oo_id(b) {\n  b[1] = id[0];\n  id[0] += 1;\n  return b;\n}\n\nfunction caml_fresh_oo_id(param) {\n  id[0] += 1;\n  return id[0];\n}\n\nfunction create(str) {\n  var v_001 = caml_fresh_oo_id(/* () */0);\n  var v = /* tuple */[\n    str,\n    v_001\n  ];\n  v.tag = 248;\n  return v;\n}\n\nfunction caml_is_extension(e) {\n  if (e === undefined) {\n    return false;\n  } else if (e.tag === 248) {\n    return true;\n  } else {\n    var slot = e[0];\n    if (slot !== undefined) {\n      return slot.tag === 248;\n    } else {\n      return false;\n    }\n  }\n}\n\nexports.caml_set_oo_id = caml_set_oo_id;\nexports.caml_fresh_oo_id = caml_fresh_oo_id;\nexports.create = create;\nexports.caml_is_extension = caml_is_extension;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_exceptions.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_format.js":
/*!********************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_format.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Caml_int32 = __webpack_require__(/*! ./caml_int32.js */ \"./node_modules/bs-platform/lib/js/caml_int32.js\");\nvar Caml_int64 = __webpack_require__(/*! ./caml_int64.js */ \"./node_modules/bs-platform/lib/js/caml_int64.js\");\nvar Caml_utils = __webpack_require__(/*! ./caml_utils.js */ \"./node_modules/bs-platform/lib/js/caml_utils.js\");\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction parse_digit(c) {\n  if (c >= 65) {\n    if (c >= 97) {\n      if (c >= 123) {\n        return -1;\n      } else {\n        return c - 87 | 0;\n      }\n    } else if (c >= 91) {\n      return -1;\n    } else {\n      return c - 55 | 0;\n    }\n  } else if (c > 57 || c < 48) {\n    return -1;\n  } else {\n    return c - /* \"0\" */48 | 0;\n  }\n}\n\nfunction int_of_string_base(param) {\n  switch (param) {\n    case 0 : \n        return 8;\n    case 1 : \n        return 16;\n    case 2 : \n        return 10;\n    case 3 : \n        return 2;\n    \n  }\n}\n\nfunction parse_sign_and_base(s) {\n  var sign = 1;\n  var base = /* Dec */2;\n  var i = 0;\n  var match = s.charCodeAt(i);\n  switch (match) {\n    case 43 : \n        i = i + 1 | 0;\n        break;\n    case 44 : \n        break;\n    case 45 : \n        sign = -1;\n        i = i + 1 | 0;\n        break;\n    default:\n      \n  }\n  if (s[i] === \"0\") {\n    var match$1 = s.charCodeAt(i + 1 | 0);\n    if (match$1 >= 89) {\n      if (match$1 >= 111) {\n        if (match$1 < 121) {\n          switch (match$1 - 111 | 0) {\n            case 0 : \n                base = /* Oct */0;\n                i = i + 2 | 0;\n                break;\n            case 6 : \n                i = i + 2 | 0;\n                break;\n            case 1 : \n            case 2 : \n            case 3 : \n            case 4 : \n            case 5 : \n            case 7 : \n            case 8 : \n                break;\n            case 9 : \n                base = /* Hex */1;\n                i = i + 2 | 0;\n                break;\n            \n          }\n        }\n        \n      } else if (match$1 === 98) {\n        base = /* Bin */3;\n        i = i + 2 | 0;\n      }\n      \n    } else if (match$1 !== 66) {\n      if (match$1 >= 79) {\n        switch (match$1 - 79 | 0) {\n          case 0 : \n              base = /* Oct */0;\n              i = i + 2 | 0;\n              break;\n          case 6 : \n              i = i + 2 | 0;\n              break;\n          case 1 : \n          case 2 : \n          case 3 : \n          case 4 : \n          case 5 : \n          case 7 : \n          case 8 : \n              break;\n          case 9 : \n              base = /* Hex */1;\n              i = i + 2 | 0;\n              break;\n          \n        }\n      }\n      \n    } else {\n      base = /* Bin */3;\n      i = i + 2 | 0;\n    }\n  }\n  return /* tuple */[\n          i,\n          sign,\n          base\n        ];\n}\n\nfunction caml_int_of_string(s) {\n  var match = parse_sign_and_base(s);\n  var i = match[0];\n  var base = int_of_string_base(match[2]);\n  var threshold = 4294967295;\n  var len = s.length;\n  var c = i < len ? s.charCodeAt(i) : /* \"\\000\" */0;\n  var d = parse_digit(c);\n  if (d < 0 || d >= base) {\n    throw [\n          Caml_builtin_exceptions.failure,\n          \"int_of_string\"\n        ];\n  }\n  var aux = function (_acc, _k) {\n    while(true) {\n      var k = _k;\n      var acc = _acc;\n      if (k === len) {\n        return acc;\n      } else {\n        var a = s.charCodeAt(k);\n        if (a === /* \"_\" */95) {\n          _k = k + 1 | 0;\n          continue ;\n        } else {\n          var v = parse_digit(a);\n          if (v < 0 || v >= base) {\n            throw [\n                  Caml_builtin_exceptions.failure,\n                  \"int_of_string\"\n                ];\n          } else {\n            var acc$1 = base * acc + v;\n            if (acc$1 > threshold) {\n              throw [\n                    Caml_builtin_exceptions.failure,\n                    \"int_of_string\"\n                  ];\n            } else {\n              _k = k + 1 | 0;\n              _acc = acc$1;\n              continue ;\n            }\n          }\n        }\n      }\n    };\n  };\n  var res = match[1] * aux(d, i + 1 | 0);\n  var or_res = res | 0;\n  if (base === 10 && res !== or_res) {\n    throw [\n          Caml_builtin_exceptions.failure,\n          \"int_of_string\"\n        ];\n  }\n  return or_res;\n}\n\nfunction caml_int64_of_string(s) {\n  var match = parse_sign_and_base(s);\n  var hbase = match[2];\n  var i = match[0];\n  var base = Caml_int64.of_int32(int_of_string_base(hbase));\n  var sign = Caml_int64.of_int32(match[1]);\n  var threshold;\n  switch (hbase) {\n    case 0 : \n        threshold = /* int64 */[\n          /* hi */536870911,\n          /* lo */4294967295\n        ];\n        break;\n    case 1 : \n        threshold = /* int64 */[\n          /* hi */268435455,\n          /* lo */4294967295\n        ];\n        break;\n    case 2 : \n        threshold = /* int64 */[\n          /* hi */429496729,\n          /* lo */2576980377\n        ];\n        break;\n    case 3 : \n        threshold = /* int64 */[\n          /* hi */2147483647,\n          /* lo */4294967295\n        ];\n        break;\n    \n  }\n  var len = s.length;\n  var c = i < len ? s.charCodeAt(i) : /* \"\\000\" */0;\n  var d = Caml_int64.of_int32(parse_digit(c));\n  if (Caml_int64.lt(d, /* int64 */[\n          /* hi */0,\n          /* lo */0\n        ]) || Caml_int64.ge(d, base)) {\n    throw [\n          Caml_builtin_exceptions.failure,\n          \"int64_of_string\"\n        ];\n  }\n  var aux = function (_acc, _k) {\n    while(true) {\n      var k = _k;\n      var acc = _acc;\n      if (k === len) {\n        return acc;\n      } else {\n        var a = s.charCodeAt(k);\n        if (a === /* \"_\" */95) {\n          _k = k + 1 | 0;\n          continue ;\n        } else {\n          var v = Caml_int64.of_int32(parse_digit(a));\n          if (Caml_int64.lt(v, /* int64 */[\n                  /* hi */0,\n                  /* lo */0\n                ]) || Caml_int64.ge(v, base) || Caml_int64.gt(acc, threshold)) {\n            throw [\n                  Caml_builtin_exceptions.failure,\n                  \"int64_of_string\"\n                ];\n          } else {\n            var acc$1 = Caml_int64.add(Caml_int64.mul(base, acc), v);\n            _k = k + 1 | 0;\n            _acc = acc$1;\n            continue ;\n          }\n        }\n      }\n    };\n  };\n  var res = Caml_int64.mul(sign, aux(d, i + 1 | 0));\n  var or_res = Caml_int64.or_(res, /* int64 */[\n        /* hi */0,\n        /* lo */0\n      ]);\n  if (Caml_int64.eq(base, /* int64 */[\n          /* hi */0,\n          /* lo */10\n        ]) && Caml_int64.neq(res, or_res)) {\n    throw [\n          Caml_builtin_exceptions.failure,\n          \"int64_of_string\"\n        ];\n  }\n  return or_res;\n}\n\nfunction int_of_base(param) {\n  switch (param) {\n    case 0 : \n        return 8;\n    case 1 : \n        return 16;\n    case 2 : \n        return 10;\n    \n  }\n}\n\nfunction lowercase(c) {\n  if (c >= /* \"A\" */65 && c <= /* \"Z\" */90 || c >= /* \"\\192\" */192 && c <= /* \"\\214\" */214 || c >= /* \"\\216\" */216 && c <= /* \"\\222\" */222) {\n    return c + 32 | 0;\n  } else {\n    return c;\n  }\n}\n\nfunction parse_format(fmt) {\n  var len = fmt.length;\n  if (len > 31) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"format_int: format too long\"\n        ];\n  }\n  var f = /* record */[\n    /* justify */\"+\",\n    /* signstyle */\"-\",\n    /* filter */\" \",\n    /* alternate */false,\n    /* base : Dec */2,\n    /* signedconv */false,\n    /* width */0,\n    /* uppercase */false,\n    /* sign */1,\n    /* prec */-1,\n    /* conv */\"f\"\n  ];\n  var _i = 0;\n  while(true) {\n    var i = _i;\n    if (i >= len) {\n      return f;\n    } else {\n      var c = fmt.charCodeAt(i);\n      var exit = 0;\n      if (c >= 69) {\n        if (c >= 88) {\n          if (c >= 121) {\n            exit = 1;\n          } else {\n            switch (c - 88 | 0) {\n              case 0 : \n                  f[/* base */4] = /* Hex */1;\n                  f[/* uppercase */7] = true;\n                  _i = i + 1 | 0;\n                  continue ;\n              case 13 : \n              case 14 : \n              case 15 : \n                  exit = 5;\n                  break;\n              case 12 : \n              case 17 : \n                  exit = 4;\n                  break;\n              case 23 : \n                  f[/* base */4] = /* Oct */0;\n                  _i = i + 1 | 0;\n                  continue ;\n              case 29 : \n                  f[/* base */4] = /* Dec */2;\n                  _i = i + 1 | 0;\n                  continue ;\n              case 1 : \n              case 2 : \n              case 3 : \n              case 4 : \n              case 5 : \n              case 6 : \n              case 7 : \n              case 8 : \n              case 9 : \n              case 10 : \n              case 11 : \n              case 16 : \n              case 18 : \n              case 19 : \n              case 20 : \n              case 21 : \n              case 22 : \n              case 24 : \n              case 25 : \n              case 26 : \n              case 27 : \n              case 28 : \n              case 30 : \n              case 31 : \n                  exit = 1;\n                  break;\n              case 32 : \n                  f[/* base */4] = /* Hex */1;\n                  _i = i + 1 | 0;\n                  continue ;\n              \n            }\n          }\n        } else if (c >= 72) {\n          exit = 1;\n        } else {\n          f[/* signedconv */5] = true;\n          f[/* uppercase */7] = true;\n          f[/* conv */10] = String.fromCharCode(lowercase(c));\n          _i = i + 1 | 0;\n          continue ;\n        }\n      } else {\n        switch (c) {\n          case 35 : \n              f[/* alternate */3] = true;\n              _i = i + 1 | 0;\n              continue ;\n          case 32 : \n          case 43 : \n              exit = 2;\n              break;\n          case 45 : \n              f[/* justify */0] = \"-\";\n              _i = i + 1 | 0;\n              continue ;\n          case 46 : \n              f[/* prec */9] = 0;\n              var j = i + 1 | 0;\n              while((function(j){\n                  return function () {\n                    var w = fmt.charCodeAt(j) - /* \"0\" */48 | 0;\n                    return w >= 0 && w <= 9;\n                  }\n                  }(j))()) {\n                f[/* prec */9] = (Caml_int32.imul(f[/* prec */9], 10) + fmt.charCodeAt(j) | 0) - /* \"0\" */48 | 0;\n                j = j + 1 | 0;\n              };\n              _i = j;\n              continue ;\n          case 33 : \n          case 34 : \n          case 36 : \n          case 37 : \n          case 38 : \n          case 39 : \n          case 40 : \n          case 41 : \n          case 42 : \n          case 44 : \n          case 47 : \n              exit = 1;\n              break;\n          case 48 : \n              f[/* filter */2] = \"0\";\n              _i = i + 1 | 0;\n              continue ;\n          case 49 : \n          case 50 : \n          case 51 : \n          case 52 : \n          case 53 : \n          case 54 : \n          case 55 : \n          case 56 : \n          case 57 : \n              exit = 3;\n              break;\n          default:\n            exit = 1;\n        }\n      }\n      switch (exit) {\n        case 1 : \n            _i = i + 1 | 0;\n            continue ;\n        case 2 : \n            f[/* signstyle */1] = String.fromCharCode(c);\n            _i = i + 1 | 0;\n            continue ;\n        case 3 : \n            f[/* width */6] = 0;\n            var j$1 = i;\n            while((function(j$1){\n                return function () {\n                  var w = fmt.charCodeAt(j$1) - /* \"0\" */48 | 0;\n                  return w >= 0 && w <= 9;\n                }\n                }(j$1))()) {\n              f[/* width */6] = (Caml_int32.imul(f[/* width */6], 10) + fmt.charCodeAt(j$1) | 0) - /* \"0\" */48 | 0;\n              j$1 = j$1 + 1 | 0;\n            };\n            _i = j$1;\n            continue ;\n        case 4 : \n            f[/* signedconv */5] = true;\n            f[/* base */4] = /* Dec */2;\n            _i = i + 1 | 0;\n            continue ;\n        case 5 : \n            f[/* signedconv */5] = true;\n            f[/* conv */10] = String.fromCharCode(c);\n            _i = i + 1 | 0;\n            continue ;\n        \n      }\n    }\n  };\n}\n\nfunction finish_formatting(config, rawbuffer) {\n  var justify = config[/* justify */0];\n  var signstyle = config[/* signstyle */1];\n  var filter = config[/* filter */2];\n  var alternate = config[/* alternate */3];\n  var base = config[/* base */4];\n  var signedconv = config[/* signedconv */5];\n  var width = config[/* width */6];\n  var uppercase = config[/* uppercase */7];\n  var sign = config[/* sign */8];\n  var len = rawbuffer.length;\n  if (signedconv && (sign < 0 || signstyle !== \"-\")) {\n    len = len + 1 | 0;\n  }\n  if (alternate) {\n    if (base === /* Oct */0) {\n      len = len + 1 | 0;\n    } else if (base === /* Hex */1) {\n      len = len + 2 | 0;\n    }\n    \n  }\n  var buffer = \"\";\n  if (justify === \"+\" && filter === \" \") {\n    for(var i = len ,i_finish = width - 1 | 0; i <= i_finish; ++i){\n      buffer = buffer + filter;\n    }\n  }\n  if (signedconv) {\n    if (sign < 0) {\n      buffer = buffer + \"-\";\n    } else if (signstyle !== \"-\") {\n      buffer = buffer + signstyle;\n    }\n    \n  }\n  if (alternate && base === /* Oct */0) {\n    buffer = buffer + \"0\";\n  }\n  if (alternate && base === /* Hex */1) {\n    buffer = buffer + \"0x\";\n  }\n  if (justify === \"+\" && filter === \"0\") {\n    for(var i$1 = len ,i_finish$1 = width - 1 | 0; i$1 <= i_finish$1; ++i$1){\n      buffer = buffer + filter;\n    }\n  }\n  buffer = uppercase ? buffer + rawbuffer.toUpperCase() : buffer + rawbuffer;\n  if (justify === \"-\") {\n    for(var i$2 = len ,i_finish$2 = width - 1 | 0; i$2 <= i_finish$2; ++i$2){\n      buffer = buffer + \" \";\n    }\n  }\n  return buffer;\n}\n\nfunction caml_format_int(fmt, i) {\n  if (fmt === \"%d\") {\n    return String(i);\n  } else {\n    var f = parse_format(fmt);\n    var f$1 = f;\n    var i$1 = i;\n    var i$2 = i$1 < 0 ? (\n        f$1[/* signedconv */5] ? (f$1[/* sign */8] = -1, -i$1) : (i$1 >>> 0)\n      ) : i$1;\n    var s = i$2.toString(int_of_base(f$1[/* base */4]));\n    if (f$1[/* prec */9] >= 0) {\n      f$1[/* filter */2] = \" \";\n      var n = f$1[/* prec */9] - s.length | 0;\n      if (n > 0) {\n        s = Caml_utils.repeat(n, \"0\") + s;\n      }\n      \n    }\n    return finish_formatting(f$1, s);\n  }\n}\n\nfunction caml_int64_format(fmt, x) {\n  var f = parse_format(fmt);\n  var x$1 = f[/* signedconv */5] && Caml_int64.lt(x, /* int64 */[\n        /* hi */0,\n        /* lo */0\n      ]) ? (f[/* sign */8] = -1, Caml_int64.neg(x)) : x;\n  var s = \"\";\n  var match = f[/* base */4];\n  switch (match) {\n    case 0 : \n        var wbase = /* int64 */[\n          /* hi */0,\n          /* lo */8\n        ];\n        var cvtbl = \"01234567\";\n        if (Caml_int64.lt(x$1, /* int64 */[\n                /* hi */0,\n                /* lo */0\n              ])) {\n          var y = Caml_int64.discard_sign(x$1);\n          var match$1 = Caml_int64.div_mod(y, wbase);\n          var quotient = Caml_int64.add(/* int64 */[\n                /* hi */268435456,\n                /* lo */0\n              ], match$1[0]);\n          var modulus = match$1[1];\n          s = String.fromCharCode(cvtbl.charCodeAt(modulus[1] | 0)) + s;\n          while(Caml_int64.neq(quotient, /* int64 */[\n                  /* hi */0,\n                  /* lo */0\n                ])) {\n            var match$2 = Caml_int64.div_mod(quotient, wbase);\n            quotient = match$2[0];\n            modulus = match$2[1];\n            s = String.fromCharCode(cvtbl.charCodeAt(modulus[1] | 0)) + s;\n          };\n        } else {\n          var match$3 = Caml_int64.div_mod(x$1, wbase);\n          var quotient$1 = match$3[0];\n          var modulus$1 = match$3[1];\n          s = String.fromCharCode(cvtbl.charCodeAt(modulus$1[1] | 0)) + s;\n          while(Caml_int64.neq(quotient$1, /* int64 */[\n                  /* hi */0,\n                  /* lo */0\n                ])) {\n            var match$4 = Caml_int64.div_mod(quotient$1, wbase);\n            quotient$1 = match$4[0];\n            modulus$1 = match$4[1];\n            s = String.fromCharCode(cvtbl.charCodeAt(modulus$1[1] | 0)) + s;\n          };\n        }\n        break;\n    case 1 : \n        s = Caml_int64.to_hex(x$1) + s;\n        break;\n    case 2 : \n        var wbase$1 = /* int64 */[\n          /* hi */0,\n          /* lo */10\n        ];\n        var cvtbl$1 = \"0123456789\";\n        if (Caml_int64.lt(x$1, /* int64 */[\n                /* hi */0,\n                /* lo */0\n              ])) {\n          var y$1 = Caml_int64.discard_sign(x$1);\n          var match$5 = Caml_int64.div_mod(y$1, wbase$1);\n          var match$6 = Caml_int64.div_mod(Caml_int64.add(/* int64 */[\n                    /* hi */0,\n                    /* lo */8\n                  ], match$5[1]), wbase$1);\n          var quotient$2 = Caml_int64.add(Caml_int64.add(/* int64 */[\n                    /* hi */214748364,\n                    /* lo */3435973836\n                  ], match$5[0]), match$6[0]);\n          var modulus$2 = match$6[1];\n          s = String.fromCharCode(cvtbl$1.charCodeAt(modulus$2[1] | 0)) + s;\n          while(Caml_int64.neq(quotient$2, /* int64 */[\n                  /* hi */0,\n                  /* lo */0\n                ])) {\n            var match$7 = Caml_int64.div_mod(quotient$2, wbase$1);\n            quotient$2 = match$7[0];\n            modulus$2 = match$7[1];\n            s = String.fromCharCode(cvtbl$1.charCodeAt(modulus$2[1] | 0)) + s;\n          };\n        } else {\n          var match$8 = Caml_int64.div_mod(x$1, wbase$1);\n          var quotient$3 = match$8[0];\n          var modulus$3 = match$8[1];\n          s = String.fromCharCode(cvtbl$1.charCodeAt(modulus$3[1] | 0)) + s;\n          while(Caml_int64.neq(quotient$3, /* int64 */[\n                  /* hi */0,\n                  /* lo */0\n                ])) {\n            var match$9 = Caml_int64.div_mod(quotient$3, wbase$1);\n            quotient$3 = match$9[0];\n            modulus$3 = match$9[1];\n            s = String.fromCharCode(cvtbl$1.charCodeAt(modulus$3[1] | 0)) + s;\n          };\n        }\n        break;\n    \n  }\n  if (f[/* prec */9] >= 0) {\n    f[/* filter */2] = \" \";\n    var n = f[/* prec */9] - s.length | 0;\n    if (n > 0) {\n      s = Caml_utils.repeat(n, \"0\") + s;\n    }\n    \n  }\n  return finish_formatting(f, s);\n}\n\nfunction caml_format_float(fmt, x) {\n  var f = parse_format(fmt);\n  var prec = f[/* prec */9] < 0 ? 6 : f[/* prec */9];\n  var x$1 = x < 0 ? (f[/* sign */8] = -1, -x) : x;\n  var s = \"\";\n  if (isNaN(x$1)) {\n    s = \"nan\";\n    f[/* filter */2] = \" \";\n  } else if (isFinite(x$1)) {\n    var match = f[/* conv */10];\n    switch (match) {\n      case \"e\" : \n          s = x$1.toExponential(prec);\n          var i = s.length;\n          if (s[i - 3 | 0] === \"e\") {\n            s = s.slice(0, i - 1 | 0) + (\"0\" + s.slice(i - 1 | 0));\n          }\n          break;\n      case \"f\" : \n          s = x$1.toFixed(prec);\n          break;\n      case \"g\" : \n          var prec$1 = prec !== 0 ? prec : 1;\n          s = x$1.toExponential(prec$1 - 1 | 0);\n          var j = s.indexOf(\"e\");\n          var exp = Number(s.slice(j + 1 | 0)) | 0;\n          if (exp < -4 || x$1 >= 1e21 || x$1.toFixed().length > prec$1) {\n            var i$1 = j - 1 | 0;\n            while(s[i$1] === \"0\") {\n              i$1 = i$1 - 1 | 0;\n            };\n            if (s[i$1] === \".\") {\n              i$1 = i$1 - 1 | 0;\n            }\n            s = s.slice(0, i$1 + 1 | 0) + s.slice(j);\n            var i$2 = s.length;\n            if (s[i$2 - 3 | 0] === \"e\") {\n              s = s.slice(0, i$2 - 1 | 0) + (\"0\" + s.slice(i$2 - 1 | 0));\n            }\n            \n          } else {\n            var p = prec$1;\n            if (exp < 0) {\n              p = p - (exp + 1 | 0) | 0;\n              s = x$1.toFixed(p);\n            } else {\n              while((function () {\n                      s = x$1.toFixed(p);\n                      return s.length > (prec$1 + 1 | 0);\n                    })()) {\n                p = p - 1 | 0;\n              };\n            }\n            if (p !== 0) {\n              var k = s.length - 1 | 0;\n              while(s[k] === \"0\") {\n                k = k - 1 | 0;\n              };\n              if (s[k] === \".\") {\n                k = k - 1 | 0;\n              }\n              s = s.slice(0, k + 1 | 0);\n            }\n            \n          }\n          break;\n      default:\n        \n    }\n  } else {\n    s = \"inf\";\n    f[/* filter */2] = \" \";\n  }\n  return finish_formatting(f, s);\n}\n\nfunction float_of_string (s,exn){ \n\n    var res = +s;\n    if ((s.length > 0) && (res === res))\n        return res;\n    s = s.replace(/_/g, \"\");\n    res = +s;\n    if (((s.length > 0) && (res === res)) || /^[+-]?nan$/i.test(s)) {\n        return res;\n    };\n    if (/^\\+?inf(inity)?$/i.test(s))\n        return Infinity;\n    if (/^-inf(inity)?$/i.test(s))\n        return -Infinity;\n    throw exn;\n\n};\n\nfunction caml_float_of_string(s) {\n  return float_of_string(s, [\n              Caml_builtin_exceptions.failure,\n              \"float_of_string\"\n            ]);\n}\n\nvar caml_nativeint_format = caml_format_int;\n\nvar caml_int32_format = caml_format_int;\n\nvar caml_int32_of_string = caml_int_of_string;\n\nvar caml_nativeint_of_string = caml_int_of_string;\n\nexports.caml_format_float = caml_format_float;\nexports.caml_format_int = caml_format_int;\nexports.caml_nativeint_format = caml_nativeint_format;\nexports.caml_int32_format = caml_int32_format;\nexports.caml_float_of_string = caml_float_of_string;\nexports.caml_int64_format = caml_int64_format;\nexports.caml_int_of_string = caml_int_of_string;\nexports.caml_int32_of_string = caml_int32_of_string;\nexports.caml_int64_of_string = caml_int64_of_string;\nexports.caml_nativeint_of_string = caml_nativeint_of_string;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_format.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_int32.js":
/*!*******************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_int32.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction div(x, y) {\n  if (y === 0) {\n    throw Caml_builtin_exceptions.division_by_zero;\n  } else {\n    return x / y | 0;\n  }\n}\n\nfunction mod_(x, y) {\n  if (y === 0) {\n    throw Caml_builtin_exceptions.division_by_zero;\n  } else {\n    return x % y;\n  }\n}\n\nfunction caml_bswap16(x) {\n  return ((x & 255) << 8) | ((x & 65280) >>> 8);\n}\n\nfunction caml_int32_bswap(x) {\n  return ((x & 255) << 24) | ((x & 65280) << 8) | ((x & 16711680) >>> 8) | ((x & 4278190080) >>> 24);\n}\n\nvar imul = ( Math.imul || function (x,y) {\n  y |= 0; return ((((x >> 16) * y) << 16) + (x & 0xffff) * y)|0; \n}\n);\n\nvar caml_nativeint_bswap = caml_int32_bswap;\n\nexports.div = div;\nexports.mod_ = mod_;\nexports.caml_bswap16 = caml_bswap16;\nexports.caml_int32_bswap = caml_int32_bswap;\nexports.caml_nativeint_bswap = caml_nativeint_bswap;\nexports.imul = imul;\n/* imul Not a pure module */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_int32.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_int64.js":
/*!*******************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_int64.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Caml_int32 = __webpack_require__(/*! ./caml_int32.js */ \"./node_modules/bs-platform/lib/js/caml_int32.js\");\nvar Caml_utils = __webpack_require__(/*! ./caml_utils.js */ \"./node_modules/bs-platform/lib/js/caml_utils.js\");\nvar Caml_primitive = __webpack_require__(/*! ./caml_primitive.js */ \"./node_modules/bs-platform/lib/js/caml_primitive.js\");\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nvar min_int = /* record */[\n  /* hi */-2147483648,\n  /* lo */0\n];\n\nvar max_int = /* record */[\n  /* hi */2147483647,\n  /* lo */1\n];\n\nvar one = /* record */[\n  /* hi */0,\n  /* lo */1\n];\n\nvar zero = /* record */[\n  /* hi */0,\n  /* lo */0\n];\n\nvar neg_one = /* record */[\n  /* hi */-1,\n  /* lo */4294967295\n];\n\nfunction neg_signed(x) {\n  return (x & 2147483648) !== 0;\n}\n\nfunction add(param, param$1) {\n  var other_low_ = param$1[/* lo */1];\n  var this_low_ = param[/* lo */1];\n  var lo = this_low_ + other_low_ & 4294967295;\n  var overflow = neg_signed(this_low_) && (neg_signed(other_low_) || !neg_signed(lo)) || neg_signed(other_low_) && !neg_signed(lo) ? 1 : 0;\n  var hi = param[/* hi */0] + param$1[/* hi */0] + overflow & 4294967295;\n  return /* record */[\n          /* hi */hi,\n          /* lo */(lo >>> 0)\n        ];\n}\n\nfunction not(param) {\n  var hi = param[/* hi */0] ^ -1;\n  var lo = param[/* lo */1] ^ -1;\n  return /* record */[\n          /* hi */hi,\n          /* lo */(lo >>> 0)\n        ];\n}\n\nfunction eq(x, y) {\n  if (x[/* hi */0] === y[/* hi */0]) {\n    return x[/* lo */1] === y[/* lo */1];\n  } else {\n    return false;\n  }\n}\n\nfunction equal_null(x, y) {\n  if (y !== null) {\n    return eq(x, y);\n  } else {\n    return false;\n  }\n}\n\nfunction equal_undefined(x, y) {\n  if (y !== undefined) {\n    return eq(x, y);\n  } else {\n    return false;\n  }\n}\n\nfunction equal_nullable(x, y) {\n  if (y == null) {\n    return false;\n  } else {\n    return eq(x, y);\n  }\n}\n\nfunction neg(x) {\n  if (eq(x, min_int)) {\n    return min_int;\n  } else {\n    return add(not(x), one);\n  }\n}\n\nfunction sub(x, y) {\n  return add(x, neg(y));\n}\n\nfunction lsl_(x, numBits) {\n  if (numBits === 0) {\n    return x;\n  } else {\n    var lo = x[/* lo */1];\n    if (numBits >= 32) {\n      return /* record */[\n              /* hi */(lo << (numBits - 32 | 0)),\n              /* lo */0\n            ];\n    } else {\n      var hi = (lo >>> (32 - numBits | 0)) | (x[/* hi */0] << numBits);\n      return /* record */[\n              /* hi */hi,\n              /* lo */((lo << numBits) >>> 0)\n            ];\n    }\n  }\n}\n\nfunction lsr_(x, numBits) {\n  if (numBits === 0) {\n    return x;\n  } else {\n    var hi = x[/* hi */0];\n    var offset = numBits - 32 | 0;\n    if (offset === 0) {\n      return /* record */[\n              /* hi */0,\n              /* lo */(hi >>> 0)\n            ];\n    } else if (offset > 0) {\n      var lo = (hi >>> offset);\n      return /* record */[\n              /* hi */0,\n              /* lo */(lo >>> 0)\n            ];\n    } else {\n      var hi$1 = (hi >>> numBits);\n      var lo$1 = (hi << (-offset | 0)) | (x[/* lo */1] >>> numBits);\n      return /* record */[\n              /* hi */hi$1,\n              /* lo */(lo$1 >>> 0)\n            ];\n    }\n  }\n}\n\nfunction asr_(x, numBits) {\n  if (numBits === 0) {\n    return x;\n  } else {\n    var hi = x[/* hi */0];\n    if (numBits < 32) {\n      var hi$1 = (hi >> numBits);\n      var lo = (hi << (32 - numBits | 0)) | (x[/* lo */1] >>> numBits);\n      return /* record */[\n              /* hi */hi$1,\n              /* lo */(lo >>> 0)\n            ];\n    } else {\n      var lo$1 = (hi >> (numBits - 32 | 0));\n      return /* record */[\n              /* hi */hi >= 0 ? 0 : -1,\n              /* lo */(lo$1 >>> 0)\n            ];\n    }\n  }\n}\n\nfunction is_zero(param) {\n  if (param[/* hi */0] !== 0 || param[/* lo */1] !== 0) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nfunction mul(_this, _other) {\n  while(true) {\n    var other = _other;\n    var $$this = _this;\n    var exit = 0;\n    var lo;\n    var this_hi = $$this[/* hi */0];\n    var exit$1 = 0;\n    var exit$2 = 0;\n    var exit$3 = 0;\n    if (this_hi !== 0 || $$this[/* lo */1] !== 0) {\n      exit$3 = 4;\n    } else {\n      return zero;\n    }\n    if (exit$3 === 4) {\n      if (other[/* hi */0] !== 0 || other[/* lo */1] !== 0) {\n        exit$2 = 3;\n      } else {\n        return zero;\n      }\n    }\n    if (exit$2 === 3) {\n      if (this_hi !== -2147483648 || $$this[/* lo */1] !== 0) {\n        exit$1 = 2;\n      } else {\n        lo = other[/* lo */1];\n        exit = 1;\n      }\n    }\n    if (exit$1 === 2) {\n      var other_hi = other[/* hi */0];\n      var lo$1 = $$this[/* lo */1];\n      var exit$4 = 0;\n      if (other_hi !== -2147483648 || other[/* lo */1] !== 0) {\n        exit$4 = 3;\n      } else {\n        lo = lo$1;\n        exit = 1;\n      }\n      if (exit$4 === 3) {\n        var other_lo = other[/* lo */1];\n        if (this_hi < 0) {\n          if (other_hi < 0) {\n            _other = neg(other);\n            _this = neg($$this);\n            continue ;\n          } else {\n            return neg(mul(neg($$this), other));\n          }\n        } else if (other_hi < 0) {\n          return neg(mul($$this, neg(other)));\n        } else {\n          var a48 = (this_hi >>> 16);\n          var a32 = this_hi & 65535;\n          var a16 = (lo$1 >>> 16);\n          var a00 = lo$1 & 65535;\n          var b48 = (other_hi >>> 16);\n          var b32 = other_hi & 65535;\n          var b16 = (other_lo >>> 16);\n          var b00 = other_lo & 65535;\n          var c48 = 0;\n          var c32 = 0;\n          var c16 = 0;\n          var c00 = a00 * b00;\n          c16 = (c00 >>> 16) + a16 * b00;\n          c32 = (c16 >>> 16);\n          c16 = (c16 & 65535) + a00 * b16;\n          c32 = c32 + (c16 >>> 16) + a32 * b00;\n          c48 = (c32 >>> 16);\n          c32 = (c32 & 65535) + a16 * b16;\n          c48 += (c32 >>> 16);\n          c32 = (c32 & 65535) + a00 * b32;\n          c48 += (c32 >>> 16);\n          c32 = c32 & 65535;\n          c48 = c48 + (a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48) & 65535;\n          var hi = c32 | (c48 << 16);\n          var lo$2 = c00 & 65535 | ((c16 & 65535) << 16);\n          return /* record */[\n                  /* hi */hi,\n                  /* lo */(lo$2 >>> 0)\n                ];\n        }\n      }\n      \n    }\n    if (exit === 1) {\n      if ((lo & 1) === 0) {\n        return zero;\n      } else {\n        return min_int;\n      }\n    }\n    \n  };\n}\n\nfunction swap(param) {\n  var hi = Caml_int32.caml_int32_bswap(param[/* lo */1]);\n  var lo = Caml_int32.caml_int32_bswap(param[/* hi */0]);\n  return /* record */[\n          /* hi */hi,\n          /* lo */(lo >>> 0)\n        ];\n}\n\nfunction xor(param, param$1) {\n  return /* record */[\n          /* hi */param[/* hi */0] ^ param$1[/* hi */0],\n          /* lo */((param[/* lo */1] ^ param$1[/* lo */1]) >>> 0)\n        ];\n}\n\nfunction or_(param, param$1) {\n  return /* record */[\n          /* hi */param[/* hi */0] | param$1[/* hi */0],\n          /* lo */((param[/* lo */1] | param$1[/* lo */1]) >>> 0)\n        ];\n}\n\nfunction and_(param, param$1) {\n  return /* record */[\n          /* hi */param[/* hi */0] & param$1[/* hi */0],\n          /* lo */((param[/* lo */1] & param$1[/* lo */1]) >>> 0)\n        ];\n}\n\nfunction ge(param, param$1) {\n  var other_hi = param$1[/* hi */0];\n  var hi = param[/* hi */0];\n  if (hi > other_hi) {\n    return true;\n  } else if (hi < other_hi) {\n    return false;\n  } else {\n    return param[/* lo */1] >= param$1[/* lo */1];\n  }\n}\n\nfunction neq(x, y) {\n  return !eq(x, y);\n}\n\nfunction lt(x, y) {\n  return !ge(x, y);\n}\n\nfunction gt(x, y) {\n  if (x[/* hi */0] > y[/* hi */0]) {\n    return true;\n  } else if (x[/* hi */0] < y[/* hi */0]) {\n    return false;\n  } else {\n    return x[/* lo */1] > y[/* lo */1];\n  }\n}\n\nfunction le(x, y) {\n  return !gt(x, y);\n}\n\nfunction min(x, y) {\n  if (ge(x, y)) {\n    return y;\n  } else {\n    return x;\n  }\n}\n\nfunction max(x, y) {\n  if (gt(x, y)) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction to_float(param) {\n  return param[/* hi */0] * (0x100000000) + param[/* lo */1];\n}\n\nfunction of_float(x) {\n  if (isNaN(x) || !isFinite(x)) {\n    return zero;\n  } else if (x <= -9.22337203685477581e+18) {\n    return min_int;\n  } else if (x + 1 >= 9.22337203685477581e+18) {\n    return max_int;\n  } else if (x < 0) {\n    return neg(of_float(-x));\n  } else {\n    var hi = x / 4294967296 | 0;\n    var lo = x % 4294967296 | 0;\n    return /* record */[\n            /* hi */hi,\n            /* lo */(lo >>> 0)\n          ];\n  }\n}\n\nfunction div(_self, _other) {\n  while(true) {\n    var other = _other;\n    var self = _self;\n    var self_hi = self[/* hi */0];\n    var exit = 0;\n    var exit$1 = 0;\n    if (other[/* hi */0] !== 0 || other[/* lo */1] !== 0) {\n      exit$1 = 2;\n    } else {\n      throw Caml_builtin_exceptions.division_by_zero;\n    }\n    if (exit$1 === 2) {\n      if (self_hi !== -2147483648) {\n        if (self_hi !== 0 || self[/* lo */1] !== 0) {\n          exit = 1;\n        } else {\n          return zero;\n        }\n      } else if (self[/* lo */1] !== 0) {\n        exit = 1;\n      } else if (eq(other, one) || eq(other, neg_one)) {\n        return self;\n      } else if (eq(other, min_int)) {\n        return one;\n      } else {\n        var other_hi = other[/* hi */0];\n        var half_this = asr_(self, 1);\n        var approx = lsl_(div(half_this, other), 1);\n        var exit$2 = 0;\n        if (approx[/* hi */0] !== 0 || approx[/* lo */1] !== 0) {\n          exit$2 = 3;\n        } else if (other_hi < 0) {\n          return one;\n        } else {\n          return neg(one);\n        }\n        if (exit$2 === 3) {\n          var y = mul(other, approx);\n          var rem = add(self, neg(y));\n          return add(approx, div(rem, other));\n        }\n        \n      }\n    }\n    if (exit === 1) {\n      var other_hi$1 = other[/* hi */0];\n      var exit$3 = 0;\n      if (other_hi$1 !== -2147483648 || other[/* lo */1] !== 0) {\n        exit$3 = 2;\n      } else {\n        return zero;\n      }\n      if (exit$3 === 2) {\n        if (self_hi < 0) {\n          if (other_hi$1 < 0) {\n            _other = neg(other);\n            _self = neg(self);\n            continue ;\n          } else {\n            return neg(div(neg(self), other));\n          }\n        } else if (other_hi$1 < 0) {\n          return neg(div(self, neg(other)));\n        } else {\n          var res = zero;\n          var rem$1 = self;\n          while(ge(rem$1, other)) {\n            var approx$1 = Caml_primitive.caml_float_max(1, Math.floor(to_float(rem$1) / to_float(other)));\n            var log2 = Math.ceil(Math.log(approx$1) / Math.LN2);\n            var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);\n            var approxRes = of_float(approx$1);\n            var approxRem = mul(approxRes, other);\n            while(approxRem[/* hi */0] < 0 || gt(approxRem, rem$1)) {\n              approx$1 -= delta;\n              approxRes = of_float(approx$1);\n              approxRem = mul(approxRes, other);\n            };\n            if (is_zero(approxRes)) {\n              approxRes = one;\n            }\n            res = add(res, approxRes);\n            rem$1 = add(rem$1, neg(approxRem));\n          };\n          return res;\n        }\n      }\n      \n    }\n    \n  };\n}\n\nfunction mod_(self, other) {\n  var y = mul(div(self, other), other);\n  return add(self, neg(y));\n}\n\nfunction div_mod(self, other) {\n  var quotient = div(self, other);\n  var y = mul(quotient, other);\n  return /* tuple */[\n          quotient,\n          add(self, neg(y))\n        ];\n}\n\nfunction compare(self, other) {\n  var v = Caml_primitive.caml_nativeint_compare(self[/* hi */0], other[/* hi */0]);\n  if (v === 0) {\n    return Caml_primitive.caml_nativeint_compare(self[/* lo */1], other[/* lo */1]);\n  } else {\n    return v;\n  }\n}\n\nfunction of_int32(lo) {\n  return /* record */[\n          /* hi */lo < 0 ? -1 : 0,\n          /* lo */(lo >>> 0)\n        ];\n}\n\nfunction to_int32(x) {\n  return x[/* lo */1] | 0;\n}\n\nfunction to_hex(x) {\n  var x_lo = x[/* lo */1];\n  var x_hi = x[/* hi */0];\n  var aux = function (v) {\n    return (v >>> 0).toString(16);\n  };\n  var exit = 0;\n  if (x_hi !== 0 || x_lo !== 0) {\n    exit = 1;\n  } else {\n    return \"0\";\n  }\n  if (exit === 1) {\n    if (x_lo !== 0) {\n      if (x_hi !== 0) {\n        var lo = aux(x_lo);\n        var pad = 8 - lo.length | 0;\n        if (pad <= 0) {\n          return aux(x_hi) + lo;\n        } else {\n          return aux(x_hi) + (Caml_utils.repeat(pad, \"0\") + lo);\n        }\n      } else {\n        return aux(x_lo);\n      }\n    } else {\n      return aux(x_hi) + \"00000000\";\n    }\n  }\n  \n}\n\nfunction discard_sign(x) {\n  return /* record */[\n          /* hi */2147483647 & x[/* hi */0],\n          /* lo */x[/* lo */1]\n        ];\n}\n\nfunction float_of_bits (x){ \n  return new Float64Array(new Int32Array([x[1],x[0]]).buffer)[0]\n};\n\nfunction bits_of_float(x) {\n  var buf = (new Int32Array(new Float64Array([x]).buffer));\n  return /* record */[\n          /* hi */buf[1],\n          /* lo */(buf[0] >>> 0)\n        ];\n}\n\nfunction get64(s, i) {\n  var hi = (s.charCodeAt(i + 4 | 0) << 32) | (s.charCodeAt(i + 5 | 0) << 40) | (s.charCodeAt(i + 6 | 0) << 48) | (s.charCodeAt(i + 7 | 0) << 56);\n  var lo = s.charCodeAt(i) | (s.charCodeAt(i + 1 | 0) << 8) | (s.charCodeAt(i + 2 | 0) << 16) | (s.charCodeAt(i + 3 | 0) << 24);\n  return /* record */[\n          /* hi */hi,\n          /* lo */(lo >>> 0)\n        ];\n}\n\nexports.min_int = min_int;\nexports.max_int = max_int;\nexports.one = one;\nexports.zero = zero;\nexports.not = not;\nexports.of_int32 = of_int32;\nexports.to_int32 = to_int32;\nexports.add = add;\nexports.neg = neg;\nexports.sub = sub;\nexports.lsl_ = lsl_;\nexports.lsr_ = lsr_;\nexports.asr_ = asr_;\nexports.is_zero = is_zero;\nexports.mul = mul;\nexports.xor = xor;\nexports.or_ = or_;\nexports.and_ = and_;\nexports.swap = swap;\nexports.ge = ge;\nexports.eq = eq;\nexports.neq = neq;\nexports.lt = lt;\nexports.gt = gt;\nexports.le = le;\nexports.equal_null = equal_null;\nexports.equal_undefined = equal_undefined;\nexports.equal_nullable = equal_nullable;\nexports.min = min;\nexports.max = max;\nexports.to_float = to_float;\nexports.of_float = of_float;\nexports.div = div;\nexports.mod_ = mod_;\nexports.compare = compare;\nexports.float_of_bits = float_of_bits;\nexports.bits_of_float = bits_of_float;\nexports.get64 = get64;\nexports.div_mod = div_mod;\nexports.to_hex = to_hex;\nexports.discard_sign = discard_sign;\n/* Caml_int32 Not a pure module */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_int64.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_io.js":
/*!****************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_io.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nvar Curry = __webpack_require__(/*! ./curry.js */ \"./node_modules/bs-platform/lib/js/curry.js\");\n\nvar stdout = /* record */[\n  /* buffer */\"\",\n  /* output */(function (param, s) {\n      var v = s.length - 1 | 0;\n      if (( (typeof process !== \"undefined\") && process.stdout && process.stdout.write)) {\n        return ( process.stdout.write )(s);\n      } else if (s[v] === \"\\n\") {\n        console.log(s.slice(0, v));\n        return /* () */0;\n      } else {\n        console.log(s);\n        return /* () */0;\n      }\n    })\n];\n\nvar stderr = /* record */[\n  /* buffer */\"\",\n  /* output */(function (param, s) {\n      var v = s.length - 1 | 0;\n      if (s[v] === \"\\n\") {\n        console.log(s.slice(0, v));\n        return /* () */0;\n      } else {\n        console.log(s);\n        return /* () */0;\n      }\n    })\n];\n\nfunction caml_ml_flush(oc) {\n  if (oc[/* buffer */0] !== \"\") {\n    Curry._2(oc[/* output */1], oc, oc[/* buffer */0]);\n    oc[/* buffer */0] = \"\";\n    return /* () */0;\n  } else {\n    return 0;\n  }\n}\n\nfunction caml_ml_output(oc, str, offset, len) {\n  var str$1 = offset === 0 && len === str.length ? str : str.slice(offset, len);\n  if (( (typeof process !== \"undefined\") && process.stdout && process.stdout.write ) && oc === stdout) {\n    return ( process.stdout.write )(str$1);\n  } else {\n    var id = str$1.lastIndexOf(\"\\n\");\n    if (id < 0) {\n      oc[/* buffer */0] = oc[/* buffer */0] + str$1;\n      return /* () */0;\n    } else {\n      oc[/* buffer */0] = oc[/* buffer */0] + str$1.slice(0, id + 1 | 0);\n      caml_ml_flush(oc);\n      oc[/* buffer */0] = oc[/* buffer */0] + str$1.slice(id + 1 | 0);\n      return /* () */0;\n    }\n  }\n}\n\nfunction caml_ml_output_char(oc, $$char) {\n  return caml_ml_output(oc, String.fromCharCode($$char), 0, 1);\n}\n\nfunction caml_ml_out_channels_list(param) {\n  return /* :: */[\n          stdout,\n          /* :: */[\n            stderr,\n            /* [] */0\n          ]\n        ];\n}\n\nvar stdin = undefined;\n\nexports.stdin = stdin;\nexports.stdout = stdout;\nexports.stderr = stderr;\nexports.caml_ml_flush = caml_ml_flush;\nexports.caml_ml_output = caml_ml_output;\nexports.caml_ml_output_char = caml_ml_output_char;\nexports.caml_ml_out_channels_list = caml_ml_out_channels_list;\n/* No side effect */\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_io.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_js_exceptions.js":
/*!***************************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_js_exceptions.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Caml_option = __webpack_require__(/*! ./caml_option.js */ \"./node_modules/bs-platform/lib/js/caml_option.js\");\nvar Caml_exceptions = __webpack_require__(/*! ./caml_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_exceptions.js\");\n\nvar $$Error = Caml_exceptions.create(\"Caml_js_exceptions.Error\");\n\nfunction internalToOCamlException(e) {\n  if (Caml_exceptions.caml_is_extension(e)) {\n    return e;\n  } else {\n    return [\n            $$Error,\n            e\n          ];\n  }\n}\n\nfunction caml_as_js_exn(exn) {\n  if (exn[0] === $$Error) {\n    return Caml_option.some(exn[1]);\n  }\n  \n}\n\nexports.$$Error = $$Error;\nexports.internalToOCamlException = internalToOCamlException;\nexports.caml_as_js_exn = caml_as_js_exn;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_js_exceptions.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_missing_polyfill.js":
/*!******************************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_missing_polyfill.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n\nfunction not_implemented (s){\n  throw new Error(s + \" not implemented by BuckleScript yet\\n\")\n};\n\nexports.not_implemented = not_implemented;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_missing_polyfill.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_obj.js":
/*!*****************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_obj.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Block = __webpack_require__(/*! ./block.js */ \"./node_modules/bs-platform/lib/js/block.js\");\nvar Caml_primitive = __webpack_require__(/*! ./caml_primitive.js */ \"./node_modules/bs-platform/lib/js/caml_primitive.js\");\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction caml_obj_block(tag, size) {\n  var v = new Array(size);\n  v.tag = tag;\n  return v;\n}\n\nfunction caml_obj_dup(x) {\n  var len = x.length | 0;\n  var v = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    v[i] = x[i];\n  }\n  v.tag = x.tag | 0;\n  return v;\n}\n\nfunction caml_obj_truncate(x, new_size) {\n  var len = x.length | 0;\n  if (new_size <= 0 || new_size > len) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Obj.truncate\"\n        ];\n  } else if (len !== new_size) {\n    for(var i = new_size ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n      x[i] = 0;\n    }\n    x.length = new_size;\n    return /* () */0;\n  } else {\n    return 0;\n  }\n}\n\nfunction caml_lazy_make_forward(x) {\n  return Block.__(250, [x]);\n}\n\nfunction caml_update_dummy(x, y) {\n  var len = y.length | 0;\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    x[i] = y[i];\n  }\n  var y_tag = y.tag | 0;\n  if (y_tag !== 0) {\n    x.tag = y_tag;\n    return /* () */0;\n  } else {\n    return 0;\n  }\n}\n\nfunction for_in (o,foo){\n        for (var x in o) { foo(x) }\n      };\n\nfunction caml_compare(_a, _b) {\n  while(true) {\n    var b = _b;\n    var a = _a;\n    if (a === b) {\n      return 0;\n    } else {\n      var a_type = typeof a;\n      var b_type = typeof b;\n      var exit = 0;\n      switch (a_type) {\n        case \"boolean\" : \n            if (b_type === \"boolean\") {\n              return Caml_primitive.caml_bool_compare(a, b);\n            } else {\n              exit = 1;\n            }\n            break;\n        case \"function\" : \n            if (b_type === \"function\") {\n              throw [\n                    Caml_builtin_exceptions.invalid_argument,\n                    \"compare: functional value\"\n                  ];\n            } else {\n              exit = 1;\n            }\n            break;\n        case \"number\" : \n            if (b_type === \"number\") {\n              return Caml_primitive.caml_int_compare(a, b);\n            } else {\n              exit = 1;\n            }\n            break;\n        case \"string\" : \n            if (b_type === \"string\") {\n              return Caml_primitive.caml_string_compare(a, b);\n            } else {\n              return 1;\n            }\n        case \"undefined\" : \n            return -1;\n        default:\n          exit = 1;\n      }\n      if (exit === 1) {\n        switch (b_type) {\n          case \"string\" : \n              return -1;\n          case \"undefined\" : \n              return 1;\n          default:\n            if (a_type === \"boolean\") {\n              return 1;\n            } else if (b_type === \"boolean\") {\n              return -1;\n            } else if (a_type === \"function\") {\n              return 1;\n            } else if (b_type === \"function\") {\n              return -1;\n            } else if (a_type === \"number\") {\n              if (b === null || b.tag === 256) {\n                return 1;\n              } else {\n                return -1;\n              }\n            } else if (b_type === \"number\") {\n              if (a === null || a.tag === 256) {\n                return -1;\n              } else {\n                return 1;\n              }\n            } else if (a === null) {\n              if (b.tag === 256) {\n                return 1;\n              } else {\n                return -1;\n              }\n            } else if (b === null) {\n              if (a.tag === 256) {\n                return -1;\n              } else {\n                return 1;\n              }\n            } else {\n              var tag_a = a.tag | 0;\n              var tag_b = b.tag | 0;\n              if (tag_a === 250) {\n                _a = a[0];\n                continue ;\n              } else if (tag_b === 250) {\n                _b = b[0];\n                continue ;\n              } else if (tag_a === 256) {\n                if (tag_b === 256) {\n                  return Caml_primitive.caml_int_compare(a[1], b[1]);\n                } else {\n                  return -1;\n                }\n              } else if (tag_a === 248) {\n                return Caml_primitive.caml_int_compare(a[1], b[1]);\n              } else if (tag_a === 251) {\n                throw [\n                      Caml_builtin_exceptions.invalid_argument,\n                      \"equal: abstract value\"\n                    ];\n              } else if (tag_a !== tag_b) {\n                if (tag_a < tag_b) {\n                  return -1;\n                } else {\n                  return 1;\n                }\n              } else {\n                var len_a = a.length | 0;\n                var len_b = b.length | 0;\n                if (len_a === len_b) {\n                  if (Array.isArray(a)) {\n                    var a$1 = a;\n                    var b$1 = b;\n                    var _i = 0;\n                    var same_length = len_a;\n                    while(true) {\n                      var i = _i;\n                      if (i === same_length) {\n                        return 0;\n                      } else {\n                        var res = caml_compare(a$1[i], b$1[i]);\n                        if (res !== 0) {\n                          return res;\n                        } else {\n                          _i = i + 1 | 0;\n                          continue ;\n                        }\n                      }\n                    };\n                  } else if ((a instanceof Date && b instanceof Date)) {\n                    return (a - b);\n                  } else {\n                    var a$2 = a;\n                    var b$2 = b;\n                    var min_key_lhs = /* record */[/* contents */undefined];\n                    var min_key_rhs = /* record */[/* contents */undefined];\n                    var do_key = function (param, key) {\n                      var min_key = param[2];\n                      var b = param[1];\n                      if (!b.hasOwnProperty(key) || caml_compare(param[0][key], b[key]) > 0) {\n                        var match = min_key[0];\n                        if (match !== undefined && key >= match) {\n                          return 0;\n                        } else {\n                          min_key[0] = key;\n                          return /* () */0;\n                        }\n                      } else {\n                        return 0;\n                      }\n                    };\n                    var partial_arg = /* tuple */[\n                      a$2,\n                      b$2,\n                      min_key_rhs\n                    ];\n                    var do_key_a = (function(partial_arg){\n                    return function do_key_a(param) {\n                      return do_key(partial_arg, param);\n                    }\n                    }(partial_arg));\n                    var partial_arg$1 = /* tuple */[\n                      b$2,\n                      a$2,\n                      min_key_lhs\n                    ];\n                    var do_key_b = (function(partial_arg$1){\n                    return function do_key_b(param) {\n                      return do_key(partial_arg$1, param);\n                    }\n                    }(partial_arg$1));\n                    for_in(a$2, do_key_a);\n                    for_in(b$2, do_key_b);\n                    var match = min_key_lhs[0];\n                    var match$1 = min_key_rhs[0];\n                    if (match !== undefined) {\n                      if (match$1 !== undefined) {\n                        return Caml_primitive.caml_string_compare(match, match$1);\n                      } else {\n                        return -1;\n                      }\n                    } else if (match$1 !== undefined) {\n                      return 1;\n                    } else {\n                      return 0;\n                    }\n                  }\n                } else if (len_a < len_b) {\n                  var a$3 = a;\n                  var b$3 = b;\n                  var _i$1 = 0;\n                  var short_length = len_a;\n                  while(true) {\n                    var i$1 = _i$1;\n                    if (i$1 === short_length) {\n                      return -1;\n                    } else {\n                      var res$1 = caml_compare(a$3[i$1], b$3[i$1]);\n                      if (res$1 !== 0) {\n                        return res$1;\n                      } else {\n                        _i$1 = i$1 + 1 | 0;\n                        continue ;\n                      }\n                    }\n                  };\n                } else {\n                  var a$4 = a;\n                  var b$4 = b;\n                  var _i$2 = 0;\n                  var short_length$1 = len_b;\n                  while(true) {\n                    var i$2 = _i$2;\n                    if (i$2 === short_length$1) {\n                      return 1;\n                    } else {\n                      var res$2 = caml_compare(a$4[i$2], b$4[i$2]);\n                      if (res$2 !== 0) {\n                        return res$2;\n                      } else {\n                        _i$2 = i$2 + 1 | 0;\n                        continue ;\n                      }\n                    }\n                  };\n                }\n              }\n            }\n        }\n      }\n      \n    }\n  };\n}\n\nfunction caml_equal(_a, _b) {\n  while(true) {\n    var b = _b;\n    var a = _a;\n    if (a === b) {\n      return true;\n    } else {\n      var a_type = typeof a;\n      if (a_type === \"string\" || a_type === \"number\" || a_type === \"boolean\" || a_type === \"undefined\" || a === null) {\n        return false;\n      } else {\n        var b_type = typeof b;\n        if (a_type === \"function\" || b_type === \"function\") {\n          throw [\n                Caml_builtin_exceptions.invalid_argument,\n                \"equal: functional value\"\n              ];\n        } else if (b_type === \"number\" || b_type === \"undefined\" || b === null) {\n          return false;\n        } else {\n          var tag_a = a.tag | 0;\n          var tag_b = b.tag | 0;\n          if (tag_a === 250) {\n            _a = a[0];\n            continue ;\n          } else if (tag_b === 250) {\n            _b = b[0];\n            continue ;\n          } else if (tag_a === 248) {\n            return a[1] === b[1];\n          } else if (tag_a === 251) {\n            throw [\n                  Caml_builtin_exceptions.invalid_argument,\n                  \"equal: abstract value\"\n                ];\n          } else if (tag_a !== tag_b) {\n            return false;\n          } else if (tag_a === 256) {\n            return a[1] === b[1];\n          } else {\n            var len_a = a.length | 0;\n            var len_b = b.length | 0;\n            if (len_a === len_b) {\n              if (Array.isArray(a)) {\n                var a$1 = a;\n                var b$1 = b;\n                var _i = 0;\n                var same_length = len_a;\n                while(true) {\n                  var i = _i;\n                  if (i === same_length) {\n                    return true;\n                  } else if (caml_equal(a$1[i], b$1[i])) {\n                    _i = i + 1 | 0;\n                    continue ;\n                  } else {\n                    return false;\n                  }\n                };\n              } else if ((a instanceof Date && b instanceof Date)) {\n                return !(a > b || a < b);\n              } else {\n                var a$2 = a;\n                var b$2 = b;\n                var result = /* record */[/* contents */true];\n                var do_key_a = (function(b$2,result){\n                return function do_key_a(key) {\n                  if (b$2.hasOwnProperty(key)) {\n                    return 0;\n                  } else {\n                    result[0] = false;\n                    return /* () */0;\n                  }\n                }\n                }(b$2,result));\n                var do_key_b = (function(a$2,b$2,result){\n                return function do_key_b(key) {\n                  if (!a$2.hasOwnProperty(key) || !caml_equal(b$2[key], a$2[key])) {\n                    result[0] = false;\n                    return /* () */0;\n                  } else {\n                    return 0;\n                  }\n                }\n                }(a$2,b$2,result));\n                for_in(a$2, do_key_a);\n                if (result[0]) {\n                  for_in(b$2, do_key_b);\n                }\n                return result[0];\n              }\n            } else {\n              return false;\n            }\n          }\n        }\n      }\n    }\n  };\n}\n\nfunction caml_equal_null(x, y) {\n  if (y !== null) {\n    return caml_equal(x, y);\n  } else {\n    return x === y;\n  }\n}\n\nfunction caml_equal_undefined(x, y) {\n  if (y !== undefined) {\n    return caml_equal(x, y);\n  } else {\n    return x === y;\n  }\n}\n\nfunction caml_equal_nullable(x, y) {\n  if (y == null) {\n    return x === y;\n  } else {\n    return caml_equal(x, y);\n  }\n}\n\nfunction caml_notequal(a, b) {\n  return !caml_equal(a, b);\n}\n\nfunction caml_greaterequal(a, b) {\n  return caml_compare(a, b) >= 0;\n}\n\nfunction caml_greaterthan(a, b) {\n  return caml_compare(a, b) > 0;\n}\n\nfunction caml_lessequal(a, b) {\n  return caml_compare(a, b) <= 0;\n}\n\nfunction caml_lessthan(a, b) {\n  return caml_compare(a, b) < 0;\n}\n\nfunction caml_min(x, y) {\n  if (caml_compare(x, y) <= 0) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_max(x, y) {\n  if (caml_compare(x, y) >= 0) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_obj_set_tag(prim, prim$1) {\n  prim.tag = prim$1;\n  return /* () */0;\n}\n\nexports.caml_obj_block = caml_obj_block;\nexports.caml_obj_dup = caml_obj_dup;\nexports.caml_obj_truncate = caml_obj_truncate;\nexports.caml_lazy_make_forward = caml_lazy_make_forward;\nexports.caml_update_dummy = caml_update_dummy;\nexports.caml_compare = caml_compare;\nexports.caml_equal = caml_equal;\nexports.caml_equal_null = caml_equal_null;\nexports.caml_equal_undefined = caml_equal_undefined;\nexports.caml_equal_nullable = caml_equal_nullable;\nexports.caml_notequal = caml_notequal;\nexports.caml_greaterequal = caml_greaterequal;\nexports.caml_greaterthan = caml_greaterthan;\nexports.caml_lessthan = caml_lessthan;\nexports.caml_lessequal = caml_lessequal;\nexports.caml_min = caml_min;\nexports.caml_max = caml_max;\nexports.caml_obj_set_tag = caml_obj_set_tag;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_obj.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_option.js":
/*!********************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_option.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n\nvar undefinedHeader = /* array */[];\n\nfunction some(x) {\n  if (x === undefined) {\n    var block = /* tuple */[\n      undefinedHeader,\n      0\n    ];\n    block.tag = 256;\n    return block;\n  } else if (x !== null && x[0] === undefinedHeader) {\n    var nid = x[1] + 1 | 0;\n    var block$1 = /* tuple */[\n      undefinedHeader,\n      nid\n    ];\n    block$1.tag = 256;\n    return block$1;\n  } else {\n    return x;\n  }\n}\n\nfunction nullable_to_opt(x) {\n  if (x === null || x === undefined) {\n    return undefined;\n  } else {\n    return some(x);\n  }\n}\n\nfunction undefined_to_opt(x) {\n  if (x === undefined) {\n    return undefined;\n  } else {\n    return some(x);\n  }\n}\n\nfunction null_to_opt(x) {\n  if (x === null) {\n    return undefined;\n  } else {\n    return some(x);\n  }\n}\n\nfunction valFromOption(x) {\n  if (x !== null && x[0] === undefinedHeader) {\n    var depth = x[1];\n    if (depth === 0) {\n      return undefined;\n    } else {\n      return /* tuple */[\n              undefinedHeader,\n              depth - 1 | 0\n            ];\n    }\n  } else {\n    return x;\n  }\n}\n\nfunction option_get(x) {\n  if (x === undefined) {\n    return undefined;\n  } else {\n    return valFromOption(x);\n  }\n}\n\nfunction option_get_unwrap(x) {\n  if (x === undefined) {\n    return undefined;\n  } else {\n    return valFromOption(x)[1];\n  }\n}\n\nexports.nullable_to_opt = nullable_to_opt;\nexports.undefined_to_opt = undefined_to_opt;\nexports.null_to_opt = null_to_opt;\nexports.valFromOption = valFromOption;\nexports.some = some;\nexports.option_get = option_get;\nexports.option_get_unwrap = option_get_unwrap;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_option.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_primitive.js":
/*!***********************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_primitive.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n\nfunction caml_int_compare(x, y) {\n  if (x < y) {\n    return -1;\n  } else if (x === y) {\n    return 0;\n  } else {\n    return 1;\n  }\n}\n\nfunction caml_bool_compare(x, y) {\n  if (x) {\n    if (y) {\n      return 0;\n    } else {\n      return 1;\n    }\n  } else if (y) {\n    return -1;\n  } else {\n    return 0;\n  }\n}\n\nfunction caml_float_compare(x, y) {\n  if (x === y) {\n    return 0;\n  } else if (x < y) {\n    return -1;\n  } else if (x > y || x === x) {\n    return 1;\n  } else if (y === y) {\n    return -1;\n  } else {\n    return 0;\n  }\n}\n\nfunction caml_string_compare(s1, s2) {\n  if (s1 === s2) {\n    return 0;\n  } else if (s1 < s2) {\n    return -1;\n  } else {\n    return 1;\n  }\n}\n\nfunction caml_bytes_compare_aux(s1, s2, _off, len, def) {\n  while(true) {\n    var off = _off;\n    if (off < len) {\n      var a = s1[off];\n      var b = s2[off];\n      if (a > b) {\n        return 1;\n      } else if (a < b) {\n        return -1;\n      } else {\n        _off = off + 1 | 0;\n        continue ;\n      }\n    } else {\n      return def;\n    }\n  };\n}\n\nfunction caml_bytes_compare(s1, s2) {\n  var len1 = s1.length;\n  var len2 = s2.length;\n  if (len1 === len2) {\n    return caml_bytes_compare_aux(s1, s2, 0, len1, 0);\n  } else if (len1 < len2) {\n    return caml_bytes_compare_aux(s1, s2, 0, len1, -1);\n  } else {\n    return caml_bytes_compare_aux(s1, s2, 0, len2, 1);\n  }\n}\n\nfunction caml_bytes_equal(s1, s2) {\n  var len1 = s1.length;\n  var len2 = s2.length;\n  if (len1 === len2) {\n    var s1$1 = s1;\n    var s2$1 = s2;\n    var _off = 0;\n    var len = len1;\n    while(true) {\n      var off = _off;\n      if (off === len) {\n        return true;\n      } else {\n        var a = s1$1[off];\n        var b = s2$1[off];\n        if (a === b) {\n          _off = off + 1 | 0;\n          continue ;\n        } else {\n          return false;\n        }\n      }\n    };\n  } else {\n    return false;\n  }\n}\n\nfunction caml_bool_min(x, y) {\n  if (x) {\n    return y;\n  } else {\n    return x;\n  }\n}\n\nfunction caml_int_min(x, y) {\n  if (x < y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_float_min(x, y) {\n  if (x < y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_string_min(x, y) {\n  if (x < y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_nativeint_min(x, y) {\n  if (x < y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_int32_min(x, y) {\n  if (x < y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_bool_max(x, y) {\n  if (x) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_int_max(x, y) {\n  if (x > y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_float_max(x, y) {\n  if (x > y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_string_max(x, y) {\n  if (x > y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_nativeint_max(x, y) {\n  if (x > y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_int32_max(x, y) {\n  if (x > y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nvar caml_nativeint_compare = caml_int_compare;\n\nvar caml_int32_compare = caml_int_compare;\n\nexports.caml_bytes_compare = caml_bytes_compare;\nexports.caml_bytes_equal = caml_bytes_equal;\nexports.caml_int_compare = caml_int_compare;\nexports.caml_bool_compare = caml_bool_compare;\nexports.caml_float_compare = caml_float_compare;\nexports.caml_nativeint_compare = caml_nativeint_compare;\nexports.caml_string_compare = caml_string_compare;\nexports.caml_int32_compare = caml_int32_compare;\nexports.caml_bool_min = caml_bool_min;\nexports.caml_int_min = caml_int_min;\nexports.caml_float_min = caml_float_min;\nexports.caml_string_min = caml_string_min;\nexports.caml_nativeint_min = caml_nativeint_min;\nexports.caml_int32_min = caml_int32_min;\nexports.caml_bool_max = caml_bool_max;\nexports.caml_int_max = caml_int_max;\nexports.caml_float_max = caml_float_max;\nexports.caml_string_max = caml_string_max;\nexports.caml_nativeint_max = caml_nativeint_max;\nexports.caml_int32_max = caml_int32_max;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_primitive.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_string.js":
/*!********************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_string.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction caml_string_get(s, i) {\n  if (i >= s.length || i < 0) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"index out of bounds\"\n        ];\n  } else {\n    return s.charCodeAt(i);\n  }\n}\n\nfunction caml_string_get16(s, i) {\n  return s.charCodeAt(i) + (s.charCodeAt(i + 1 | 0) << 8) | 0;\n}\n\nfunction caml_string_get32(s, i) {\n  return ((s.charCodeAt(i) + (s.charCodeAt(i + 1 | 0) << 8) | 0) + (s.charCodeAt(i + 2 | 0) << 16) | 0) + (s.charCodeAt(i + 3 | 0) << 24) | 0;\n}\n\nfunction get(s, i) {\n  if (i < 0 || i >= s.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"index out of bounds\"\n        ];\n  } else {\n    return s.charCodeAt(i);\n  }\n}\n\nexports.caml_string_get = caml_string_get;\nexports.caml_string_get16 = caml_string_get16;\nexports.caml_string_get32 = caml_string_get32;\nexports.get = get;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_string.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_sys.js":
/*!*****************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_sys.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction caml_sys_getenv(s) {\n  if (typeof process === \"undefined\" || (process.env) === undefined) {\n    throw Caml_builtin_exceptions.not_found;\n  } else {\n    var match = (process.env)[s];\n    if (match !== undefined) {\n      return match;\n    } else {\n      throw Caml_builtin_exceptions.not_found;\n    }\n  }\n}\n\nfunction caml_sys_time(param) {\n  if (typeof process === \"undefined\" || (process.uptime) === undefined) {\n    return -1;\n  } else {\n    return process.uptime();\n  }\n}\n\nfunction caml_sys_random_seed(param) {\n  return /* array */[((Date.now() | 0) ^ 4294967295) * Math.random() | 0];\n}\n\nfunction caml_sys_system_command(_cmd) {\n  return 127;\n}\n\nfunction caml_sys_getcwd(param) {\n  if (typeof process === \"undefined\") {\n    return \"/\";\n  } else {\n    return process.cwd();\n  }\n}\n\nfunction caml_sys_get_argv(param) {\n  if (typeof process === \"undefined\") {\n    return /* tuple */[\n            \"\",\n            /* array */[\"\"]\n          ];\n  } else {\n    var argv = (process.argv);\n    if (argv == null) {\n      return /* tuple */[\n              \"\",\n              /* array */[\"\"]\n            ];\n    } else {\n      return /* tuple */[\n              argv[0],\n              argv\n            ];\n    }\n  }\n}\n\nfunction caml_sys_exit(exit_code) {\n  if (typeof process !== \"undefined\") {\n    return process.exit(exit_code);\n  } else {\n    return 0;\n  }\n}\n\nfunction caml_sys_is_directory(_s) {\n  throw [\n        Caml_builtin_exceptions.failure,\n        \"caml_sys_is_directory not implemented\"\n      ];\n}\n\nfunction caml_sys_file_exists(_s) {\n  throw [\n        Caml_builtin_exceptions.failure,\n        \"caml_sys_file_exists not implemented\"\n      ];\n}\n\nexports.caml_sys_getenv = caml_sys_getenv;\nexports.caml_sys_time = caml_sys_time;\nexports.caml_sys_random_seed = caml_sys_random_seed;\nexports.caml_sys_system_command = caml_sys_system_command;\nexports.caml_sys_getcwd = caml_sys_getcwd;\nexports.caml_sys_get_argv = caml_sys_get_argv;\nexports.caml_sys_exit = caml_sys_exit;\nexports.caml_sys_is_directory = caml_sys_is_directory;\nexports.caml_sys_file_exists = caml_sys_file_exists;\n/* No side effect */\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_sys.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_utils.js":
/*!*******************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_utils.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n\nfunction repeat (count,self){\n    if (self.repeat){\n        return self.repeat(count)\n    }\n    if (self.length == 0 || count == 0) {\n            return '';\n        }\n    // Ensuring count is a 31-bit integer allows us to heavily optimize the\n    // main part. But anyway, most current (August 2014) browsers can't handle\n    // strings 1 << 28 chars or longer, so:\n    if (self.length * count >= 1 << 28) {\n            throw new RangeError('repeat count must not overflow maximum string size');\n    }\n    var rpt = '';\n    for (;;) {\n            if ((count & 1) == 1) {\n                rpt += self;\n            }\n            count >>>= 1;\n            if (count == 0) {\n                break;\n            }\n            self += self;\n    }\n    return rpt;\n\n};\n\nexports.repeat = repeat;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_utils.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/camlinternalFormatBasics.js":
/*!*********************************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/camlinternalFormatBasics.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Block = __webpack_require__(/*! ./block.js */ \"./node_modules/bs-platform/lib/js/block.js\");\n\nfunction erase_rel(param) {\n  if (typeof param === \"number\") {\n    return /* End_of_fmtty */0;\n  } else {\n    switch (param.tag | 0) {\n      case 0 : \n          return /* Char_ty */Block.__(0, [erase_rel(param[0])]);\n      case 1 : \n          return /* String_ty */Block.__(1, [erase_rel(param[0])]);\n      case 2 : \n          return /* Int_ty */Block.__(2, [erase_rel(param[0])]);\n      case 3 : \n          return /* Int32_ty */Block.__(3, [erase_rel(param[0])]);\n      case 4 : \n          return /* Nativeint_ty */Block.__(4, [erase_rel(param[0])]);\n      case 5 : \n          return /* Int64_ty */Block.__(5, [erase_rel(param[0])]);\n      case 6 : \n          return /* Float_ty */Block.__(6, [erase_rel(param[0])]);\n      case 7 : \n          return /* Bool_ty */Block.__(7, [erase_rel(param[0])]);\n      case 8 : \n          return /* Format_arg_ty */Block.__(8, [\n                    param[0],\n                    erase_rel(param[1])\n                  ]);\n      case 9 : \n          var ty1 = param[0];\n          return /* Format_subst_ty */Block.__(9, [\n                    ty1,\n                    ty1,\n                    erase_rel(param[2])\n                  ]);\n      case 10 : \n          return /* Alpha_ty */Block.__(10, [erase_rel(param[0])]);\n      case 11 : \n          return /* Theta_ty */Block.__(11, [erase_rel(param[0])]);\n      case 12 : \n          return /* Any_ty */Block.__(12, [erase_rel(param[0])]);\n      case 13 : \n          return /* Reader_ty */Block.__(13, [erase_rel(param[0])]);\n      case 14 : \n          return /* Ignored_reader_ty */Block.__(14, [erase_rel(param[0])]);\n      \n    }\n  }\n}\n\nfunction concat_fmtty(fmtty1, fmtty2) {\n  if (typeof fmtty1 === \"number\") {\n    return fmtty2;\n  } else {\n    switch (fmtty1.tag | 0) {\n      case 0 : \n          return /* Char_ty */Block.__(0, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 1 : \n          return /* String_ty */Block.__(1, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 2 : \n          return /* Int_ty */Block.__(2, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 3 : \n          return /* Int32_ty */Block.__(3, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 4 : \n          return /* Nativeint_ty */Block.__(4, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 5 : \n          return /* Int64_ty */Block.__(5, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 6 : \n          return /* Float_ty */Block.__(6, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 7 : \n          return /* Bool_ty */Block.__(7, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 8 : \n          return /* Format_arg_ty */Block.__(8, [\n                    fmtty1[0],\n                    concat_fmtty(fmtty1[1], fmtty2)\n                  ]);\n      case 9 : \n          return /* Format_subst_ty */Block.__(9, [\n                    fmtty1[0],\n                    fmtty1[1],\n                    concat_fmtty(fmtty1[2], fmtty2)\n                  ]);\n      case 10 : \n          return /* Alpha_ty */Block.__(10, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 11 : \n          return /* Theta_ty */Block.__(11, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 12 : \n          return /* Any_ty */Block.__(12, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 13 : \n          return /* Reader_ty */Block.__(13, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 14 : \n          return /* Ignored_reader_ty */Block.__(14, [concat_fmtty(fmtty1[0], fmtty2)]);\n      \n    }\n  }\n}\n\nfunction concat_fmt(fmt1, fmt2) {\n  if (typeof fmt1 === \"number\") {\n    return fmt2;\n  } else {\n    switch (fmt1.tag | 0) {\n      case 0 : \n          return /* Char */Block.__(0, [concat_fmt(fmt1[0], fmt2)]);\n      case 1 : \n          return /* Caml_char */Block.__(1, [concat_fmt(fmt1[0], fmt2)]);\n      case 2 : \n          return /* String */Block.__(2, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 3 : \n          return /* Caml_string */Block.__(3, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 4 : \n          return /* Int */Block.__(4, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 5 : \n          return /* Int32 */Block.__(5, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 6 : \n          return /* Nativeint */Block.__(6, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 7 : \n          return /* Int64 */Block.__(7, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 8 : \n          return /* Float */Block.__(8, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 9 : \n          return /* Bool */Block.__(9, [concat_fmt(fmt1[0], fmt2)]);\n      case 10 : \n          return /* Flush */Block.__(10, [concat_fmt(fmt1[0], fmt2)]);\n      case 11 : \n          return /* String_literal */Block.__(11, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 12 : \n          return /* Char_literal */Block.__(12, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 13 : \n          return /* Format_arg */Block.__(13, [\n                    fmt1[0],\n                    fmt1[1],\n                    concat_fmt(fmt1[2], fmt2)\n                  ]);\n      case 14 : \n          return /* Format_subst */Block.__(14, [\n                    fmt1[0],\n                    fmt1[1],\n                    concat_fmt(fmt1[2], fmt2)\n                  ]);\n      case 15 : \n          return /* Alpha */Block.__(15, [concat_fmt(fmt1[0], fmt2)]);\n      case 16 : \n          return /* Theta */Block.__(16, [concat_fmt(fmt1[0], fmt2)]);\n      case 17 : \n          return /* Formatting_lit */Block.__(17, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 18 : \n          return /* Formatting_gen */Block.__(18, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 19 : \n          return /* Reader */Block.__(19, [concat_fmt(fmt1[0], fmt2)]);\n      case 20 : \n          return /* Scan_char_set */Block.__(20, [\n                    fmt1[0],\n                    fmt1[1],\n                    concat_fmt(fmt1[2], fmt2)\n                  ]);\n      case 21 : \n          return /* Scan_get_counter */Block.__(21, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 22 : \n          return /* Scan_next_char */Block.__(22, [concat_fmt(fmt1[0], fmt2)]);\n      case 23 : \n          return /* Ignored_param */Block.__(23, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 24 : \n          return /* Custom */Block.__(24, [\n                    fmt1[0],\n                    fmt1[1],\n                    concat_fmt(fmt1[2], fmt2)\n                  ]);\n      \n    }\n  }\n}\n\nexports.concat_fmtty = concat_fmtty;\nexports.erase_rel = erase_rel;\nexports.concat_fmt = concat_fmt;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/camlinternalFormatBasics.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/char.js":
/*!*************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/char.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Caml_bytes = __webpack_require__(/*! ./caml_bytes.js */ \"./node_modules/bs-platform/lib/js/caml_bytes.js\");\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction chr(n) {\n  if (n < 0 || n > 255) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Char.chr\"\n        ];\n  } else {\n    return n;\n  }\n}\n\nfunction escaped(c) {\n  var exit = 0;\n  if (c >= 40) {\n    if (c !== 92) {\n      exit = c >= 127 ? 1 : 2;\n    } else {\n      return \"\\\\\\\\\";\n    }\n  } else if (c >= 32) {\n    if (c >= 39) {\n      return \"\\\\'\";\n    } else {\n      exit = 2;\n    }\n  } else if (c >= 14) {\n    exit = 1;\n  } else {\n    switch (c) {\n      case 8 : \n          return \"\\\\b\";\n      case 9 : \n          return \"\\\\t\";\n      case 10 : \n          return \"\\\\n\";\n      case 0 : \n      case 1 : \n      case 2 : \n      case 3 : \n      case 4 : \n      case 5 : \n      case 6 : \n      case 7 : \n      case 11 : \n      case 12 : \n          exit = 1;\n          break;\n      case 13 : \n          return \"\\\\r\";\n      \n    }\n  }\n  switch (exit) {\n    case 1 : \n        var s = [\n          0,\n          0,\n          0,\n          0\n        ];\n        s[0] = /* \"\\\\\" */92;\n        s[1] = 48 + (c / 100 | 0) | 0;\n        s[2] = 48 + (c / 10 | 0) % 10 | 0;\n        s[3] = 48 + c % 10 | 0;\n        return Caml_bytes.bytes_to_string(s);\n    case 2 : \n        var s$1 = [0];\n        s$1[0] = c;\n        return Caml_bytes.bytes_to_string(s$1);\n    \n  }\n}\n\nfunction lowercase(c) {\n  if (c >= /* \"A\" */65 && c <= /* \"Z\" */90 || c >= /* \"\\192\" */192 && c <= /* \"\\214\" */214 || c >= /* \"\\216\" */216 && c <= /* \"\\222\" */222) {\n    return c + 32 | 0;\n  } else {\n    return c;\n  }\n}\n\nfunction uppercase(c) {\n  if (c >= /* \"a\" */97 && c <= /* \"z\" */122 || c >= /* \"\\224\" */224 && c <= /* \"\\246\" */246 || c >= /* \"\\248\" */248 && c <= /* \"\\254\" */254) {\n    return c - 32 | 0;\n  } else {\n    return c;\n  }\n}\n\nfunction compare(c1, c2) {\n  return c1 - c2 | 0;\n}\n\nexports.chr = chr;\nexports.escaped = escaped;\nexports.lowercase = lowercase;\nexports.uppercase = uppercase;\nexports.compare = compare;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/char.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/curry.js":
/*!**************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/curry.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Caml_array = __webpack_require__(/*! ./caml_array.js */ \"./node_modules/bs-platform/lib/js/caml_array.js\");\n\nfunction app(_f, _args) {\n  while(true) {\n    var args = _args;\n    var f = _f;\n    var init_arity = f.length;\n    var arity = init_arity === 0 ? 1 : init_arity;\n    var len = args.length;\n    var d = arity - len | 0;\n    if (d === 0) {\n      return f.apply(null, args);\n    } else if (d < 0) {\n      _args = Caml_array.caml_array_sub(args, arity, -d | 0);\n      _f = f.apply(null, Caml_array.caml_array_sub(args, 0, arity));\n      continue ;\n    } else {\n      return (function(f,args){\n      return function (x) {\n        return app(f, args.concat(/* array */[x]));\n      }\n      }(f,args));\n    }\n  };\n}\n\nfunction curry_1(o, a0, arity) {\n  switch (arity) {\n    case 1 : \n        return o(a0);\n    case 2 : \n        return (function (param) {\n            return o(a0, param);\n          });\n    case 3 : \n        return (function (param, param$1) {\n            return o(a0, param, param$1);\n          });\n    case 4 : \n        return (function (param, param$1, param$2) {\n            return o(a0, param, param$1, param$2);\n          });\n    case 5 : \n        return (function (param, param$1, param$2, param$3) {\n            return o(a0, param, param$1, param$2, param$3);\n          });\n    case 6 : \n        return (function (param, param$1, param$2, param$3, param$4) {\n            return o(a0, param, param$1, param$2, param$3, param$4);\n          });\n    case 7 : \n        return (function (param, param$1, param$2, param$3, param$4, param$5) {\n            return o(a0, param, param$1, param$2, param$3, param$4, param$5);\n          });\n    default:\n      return app(o, /* array */[a0]);\n  }\n}\n\nfunction _1(o, a0) {\n  var arity = o.length;\n  if (arity === 1) {\n    return o(a0);\n  } else {\n    return curry_1(o, a0, arity);\n  }\n}\n\nfunction __1(o) {\n  var arity = o.length;\n  if (arity === 1) {\n    return o;\n  } else {\n    return (function (a0) {\n        return _1(o, a0);\n      });\n  }\n}\n\nfunction curry_2(o, a0, a1, arity) {\n  switch (arity) {\n    case 1 : \n        return app(o(a0), /* array */[a1]);\n    case 2 : \n        return o(a0, a1);\n    case 3 : \n        return (function (param) {\n            return o(a0, a1, param);\n          });\n    case 4 : \n        return (function (param, param$1) {\n            return o(a0, a1, param, param$1);\n          });\n    case 5 : \n        return (function (param, param$1, param$2) {\n            return o(a0, a1, param, param$1, param$2);\n          });\n    case 6 : \n        return (function (param, param$1, param$2, param$3) {\n            return o(a0, a1, param, param$1, param$2, param$3);\n          });\n    case 7 : \n        return (function (param, param$1, param$2, param$3, param$4) {\n            return o(a0, a1, param, param$1, param$2, param$3, param$4);\n          });\n    default:\n      return app(o, /* array */[\n                  a0,\n                  a1\n                ]);\n  }\n}\n\nfunction _2(o, a0, a1) {\n  var arity = o.length;\n  if (arity === 2) {\n    return o(a0, a1);\n  } else {\n    return curry_2(o, a0, a1, arity);\n  }\n}\n\nfunction __2(o) {\n  var arity = o.length;\n  if (arity === 2) {\n    return o;\n  } else {\n    return (function (a0, a1) {\n        return _2(o, a0, a1);\n      });\n  }\n}\n\nfunction curry_3(o, a0, a1, a2, arity) {\n  switch (arity) {\n    case 1 : \n        return app(o(a0), /* array */[\n                    a1,\n                    a2\n                  ]);\n    case 2 : \n        return app(o(a0, a1), /* array */[a2]);\n    case 3 : \n        return o(a0, a1, a2);\n    case 4 : \n        return (function (param) {\n            return o(a0, a1, a2, param);\n          });\n    case 5 : \n        return (function (param, param$1) {\n            return o(a0, a1, a2, param, param$1);\n          });\n    case 6 : \n        return (function (param, param$1, param$2) {\n            return o(a0, a1, a2, param, param$1, param$2);\n          });\n    case 7 : \n        return (function (param, param$1, param$2, param$3) {\n            return o(a0, a1, a2, param, param$1, param$2, param$3);\n          });\n    default:\n      return app(o, /* array */[\n                  a0,\n                  a1,\n                  a2\n                ]);\n  }\n}\n\nfunction _3(o, a0, a1, a2) {\n  var arity = o.length;\n  if (arity === 3) {\n    return o(a0, a1, a2);\n  } else {\n    return curry_3(o, a0, a1, a2, arity);\n  }\n}\n\nfunction __3(o) {\n  var arity = o.length;\n  if (arity === 3) {\n    return o;\n  } else {\n    return (function (a0, a1, a2) {\n        return _3(o, a0, a1, a2);\n      });\n  }\n}\n\nfunction curry_4(o, a0, a1, a2, a3, arity) {\n  switch (arity) {\n    case 1 : \n        return app(o(a0), /* array */[\n                    a1,\n                    a2,\n                    a3\n                  ]);\n    case 2 : \n        return app(o(a0, a1), /* array */[\n                    a2,\n                    a3\n                  ]);\n    case 3 : \n        return app(o(a0, a1, a2), /* array */[a3]);\n    case 4 : \n        return o(a0, a1, a2, a3);\n    case 5 : \n        return (function (param) {\n            return o(a0, a1, a2, a3, param);\n          });\n    case 6 : \n        return (function (param, param$1) {\n            return o(a0, a1, a2, a3, param, param$1);\n          });\n    case 7 : \n        return (function (param, param$1, param$2) {\n            return o(a0, a1, a2, a3, param, param$1, param$2);\n          });\n    default:\n      return app(o, /* array */[\n                  a0,\n                  a1,\n                  a2,\n                  a3\n                ]);\n  }\n}\n\nfunction _4(o, a0, a1, a2, a3) {\n  var arity = o.length;\n  if (arity === 4) {\n    return o(a0, a1, a2, a3);\n  } else {\n    return curry_4(o, a0, a1, a2, a3, arity);\n  }\n}\n\nfunction __4(o) {\n  var arity = o.length;\n  if (arity === 4) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3) {\n        return _4(o, a0, a1, a2, a3);\n      });\n  }\n}\n\nfunction curry_5(o, a0, a1, a2, a3, a4, arity) {\n  switch (arity) {\n    case 1 : \n        return app(o(a0), /* array */[\n                    a1,\n                    a2,\n                    a3,\n                    a4\n                  ]);\n    case 2 : \n        return app(o(a0, a1), /* array */[\n                    a2,\n                    a3,\n                    a4\n                  ]);\n    case 3 : \n        return app(o(a0, a1, a2), /* array */[\n                    a3,\n                    a4\n                  ]);\n    case 4 : \n        return app(o(a0, a1, a2, a3), /* array */[a4]);\n    case 5 : \n        return o(a0, a1, a2, a3, a4);\n    case 6 : \n        return (function (param) {\n            return o(a0, a1, a2, a3, a4, param);\n          });\n    case 7 : \n        return (function (param, param$1) {\n            return o(a0, a1, a2, a3, a4, param, param$1);\n          });\n    default:\n      return app(o, /* array */[\n                  a0,\n                  a1,\n                  a2,\n                  a3,\n                  a4\n                ]);\n  }\n}\n\nfunction _5(o, a0, a1, a2, a3, a4) {\n  var arity = o.length;\n  if (arity === 5) {\n    return o(a0, a1, a2, a3, a4);\n  } else {\n    return curry_5(o, a0, a1, a2, a3, a4, arity);\n  }\n}\n\nfunction __5(o) {\n  var arity = o.length;\n  if (arity === 5) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3, a4) {\n        return _5(o, a0, a1, a2, a3, a4);\n      });\n  }\n}\n\nfunction curry_6(o, a0, a1, a2, a3, a4, a5, arity) {\n  switch (arity) {\n    case 1 : \n        return app(o(a0), /* array */[\n                    a1,\n                    a2,\n                    a3,\n                    a4,\n                    a5\n                  ]);\n    case 2 : \n        return app(o(a0, a1), /* array */[\n                    a2,\n                    a3,\n                    a4,\n                    a5\n                  ]);\n    case 3 : \n        return app(o(a0, a1, a2), /* array */[\n                    a3,\n                    a4,\n                    a5\n                  ]);\n    case 4 : \n        return app(o(a0, a1, a2, a3), /* array */[\n                    a4,\n                    a5\n                  ]);\n    case 5 : \n        return app(o(a0, a1, a2, a3, a4), /* array */[a5]);\n    case 6 : \n        return o(a0, a1, a2, a3, a4, a5);\n    case 7 : \n        return (function (param) {\n            return o(a0, a1, a2, a3, a4, a5, param);\n          });\n    default:\n      return app(o, /* array */[\n                  a0,\n                  a1,\n                  a2,\n                  a3,\n                  a4,\n                  a5\n                ]);\n  }\n}\n\nfunction _6(o, a0, a1, a2, a3, a4, a5) {\n  var arity = o.length;\n  if (arity === 6) {\n    return o(a0, a1, a2, a3, a4, a5);\n  } else {\n    return curry_6(o, a0, a1, a2, a3, a4, a5, arity);\n  }\n}\n\nfunction __6(o) {\n  var arity = o.length;\n  if (arity === 6) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3, a4, a5) {\n        return _6(o, a0, a1, a2, a3, a4, a5);\n      });\n  }\n}\n\nfunction curry_7(o, a0, a1, a2, a3, a4, a5, a6, arity) {\n  switch (arity) {\n    case 1 : \n        return app(o(a0), /* array */[\n                    a1,\n                    a2,\n                    a3,\n                    a4,\n                    a5,\n                    a6\n                  ]);\n    case 2 : \n        return app(o(a0, a1), /* array */[\n                    a2,\n                    a3,\n                    a4,\n                    a5,\n                    a6\n                  ]);\n    case 3 : \n        return app(o(a0, a1, a2), /* array */[\n                    a3,\n                    a4,\n                    a5,\n                    a6\n                  ]);\n    case 4 : \n        return app(o(a0, a1, a2, a3), /* array */[\n                    a4,\n                    a5,\n                    a6\n                  ]);\n    case 5 : \n        return app(o(a0, a1, a2, a3, a4), /* array */[\n                    a5,\n                    a6\n                  ]);\n    case 6 : \n        return app(o(a0, a1, a2, a3, a4, a5), /* array */[a6]);\n    case 7 : \n        return o(a0, a1, a2, a3, a4, a5, a6);\n    default:\n      return app(o, /* array */[\n                  a0,\n                  a1,\n                  a2,\n                  a3,\n                  a4,\n                  a5,\n                  a6\n                ]);\n  }\n}\n\nfunction _7(o, a0, a1, a2, a3, a4, a5, a6) {\n  var arity = o.length;\n  if (arity === 7) {\n    return o(a0, a1, a2, a3, a4, a5, a6);\n  } else {\n    return curry_7(o, a0, a1, a2, a3, a4, a5, a6, arity);\n  }\n}\n\nfunction __7(o) {\n  var arity = o.length;\n  if (arity === 7) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3, a4, a5, a6) {\n        return _7(o, a0, a1, a2, a3, a4, a5, a6);\n      });\n  }\n}\n\nfunction curry_8(o, a0, a1, a2, a3, a4, a5, a6, a7, arity) {\n  switch (arity) {\n    case 1 : \n        return app(o(a0), /* array */[\n                    a1,\n                    a2,\n                    a3,\n                    a4,\n                    a5,\n                    a6,\n                    a7\n                  ]);\n    case 2 : \n        return app(o(a0, a1), /* array */[\n                    a2,\n                    a3,\n                    a4,\n                    a5,\n                    a6,\n                    a7\n                  ]);\n    case 3 : \n        return app(o(a0, a1, a2), /* array */[\n                    a3,\n                    a4,\n                    a5,\n                    a6,\n                    a7\n                  ]);\n    case 4 : \n        return app(o(a0, a1, a2, a3), /* array */[\n                    a4,\n                    a5,\n                    a6,\n                    a7\n                  ]);\n    case 5 : \n        return app(o(a0, a1, a2, a3, a4), /* array */[\n                    a5,\n                    a6,\n                    a7\n                  ]);\n    case 6 : \n        return app(o(a0, a1, a2, a3, a4, a5), /* array */[\n                    a6,\n                    a7\n                  ]);\n    case 7 : \n        return app(o(a0, a1, a2, a3, a4, a5, a6), /* array */[a7]);\n    default:\n      return app(o, /* array */[\n                  a0,\n                  a1,\n                  a2,\n                  a3,\n                  a4,\n                  a5,\n                  a6,\n                  a7\n                ]);\n  }\n}\n\nfunction _8(o, a0, a1, a2, a3, a4, a5, a6, a7) {\n  var arity = o.length;\n  if (arity === 8) {\n    return o(a0, a1, a2, a3, a4, a5, a6, a7);\n  } else {\n    return curry_8(o, a0, a1, a2, a3, a4, a5, a6, a7, arity);\n  }\n}\n\nfunction __8(o) {\n  var arity = o.length;\n  if (arity === 8) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return _8(o, a0, a1, a2, a3, a4, a5, a6, a7);\n      });\n  }\n}\n\nexports.app = app;\nexports.curry_1 = curry_1;\nexports._1 = _1;\nexports.__1 = __1;\nexports.curry_2 = curry_2;\nexports._2 = _2;\nexports.__2 = __2;\nexports.curry_3 = curry_3;\nexports._3 = _3;\nexports.__3 = __3;\nexports.curry_4 = curry_4;\nexports._4 = _4;\nexports.__4 = __4;\nexports.curry_5 = curry_5;\nexports._5 = _5;\nexports.__5 = __5;\nexports.curry_6 = curry_6;\nexports._6 = _6;\nexports.__6 = __6;\nexports.curry_7 = curry_7;\nexports._7 = _7;\nexports.__7 = __7;\nexports.curry_8 = curry_8;\nexports._8 = _8;\nexports.__8 = __8;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/curry.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/js_int.js":
/*!***************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/js_int.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n\nfunction equal(x, y) {\n  return x === y;\n}\n\nvar max = 2147483647;\n\nvar min = -2147483648;\n\nexports.equal = equal;\nexports.max = max;\nexports.min = min;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/js_int.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/js_math.js":
/*!****************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/js_math.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Js_int = __webpack_require__(/*! ./js_int.js */ \"./node_modules/bs-platform/lib/js/js_int.js\");\n\nfunction unsafe_ceil(prim) {\n  return Math.ceil(prim);\n}\n\nfunction ceil_int(f) {\n  if (f > Js_int.max) {\n    return Js_int.max;\n  } else if (f < Js_int.min) {\n    return Js_int.min;\n  } else {\n    return Math.ceil(f);\n  }\n}\n\nfunction unsafe_floor(prim) {\n  return Math.floor(prim);\n}\n\nfunction floor_int(f) {\n  if (f > Js_int.max) {\n    return Js_int.max;\n  } else if (f < Js_int.min) {\n    return Js_int.min;\n  } else {\n    return Math.floor(f);\n  }\n}\n\nfunction random_int(min, max) {\n  return floor_int(Math.random() * (max - min | 0)) + min | 0;\n}\n\nvar ceil = ceil_int;\n\nvar floor = floor_int;\n\nexports.unsafe_ceil = unsafe_ceil;\nexports.ceil_int = ceil_int;\nexports.ceil = ceil;\nexports.unsafe_floor = unsafe_floor;\nexports.floor_int = floor_int;\nexports.floor = floor;\nexports.random_int = random_int;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/js_math.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/list.js":
/*!*************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/list.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Curry = __webpack_require__(/*! ./curry.js */ \"./node_modules/bs-platform/lib/js/curry.js\");\nvar Caml_obj = __webpack_require__(/*! ./caml_obj.js */ \"./node_modules/bs-platform/lib/js/caml_obj.js\");\nvar Pervasives = __webpack_require__(/*! ./pervasives.js */ \"./node_modules/bs-platform/lib/js/pervasives.js\");\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction length(l) {\n  var _len = 0;\n  var _param = l;\n  while(true) {\n    var param = _param;\n    var len = _len;\n    if (param) {\n      _param = param[1];\n      _len = len + 1 | 0;\n      continue ;\n    } else {\n      return len;\n    }\n  };\n}\n\nfunction hd(param) {\n  if (param) {\n    return param[0];\n  } else {\n    throw [\n          Caml_builtin_exceptions.failure,\n          \"hd\"\n        ];\n  }\n}\n\nfunction tl(param) {\n  if (param) {\n    return param[1];\n  } else {\n    throw [\n          Caml_builtin_exceptions.failure,\n          \"tl\"\n        ];\n  }\n}\n\nfunction nth(l, n) {\n  if (n < 0) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"List.nth\"\n        ];\n  } else {\n    var _l = l;\n    var _n = n;\n    while(true) {\n      var n$1 = _n;\n      var l$1 = _l;\n      if (l$1) {\n        if (n$1 === 0) {\n          return l$1[0];\n        } else {\n          _n = n$1 - 1 | 0;\n          _l = l$1[1];\n          continue ;\n        }\n      } else {\n        throw [\n              Caml_builtin_exceptions.failure,\n              \"nth\"\n            ];\n      }\n    };\n  }\n}\n\nfunction rev_append(_l1, _l2) {\n  while(true) {\n    var l2 = _l2;\n    var l1 = _l1;\n    if (l1) {\n      _l2 = /* :: */[\n        l1[0],\n        l2\n      ];\n      _l1 = l1[1];\n      continue ;\n    } else {\n      return l2;\n    }\n  };\n}\n\nfunction rev(l) {\n  return rev_append(l, /* [] */0);\n}\n\nfunction flatten(param) {\n  if (param) {\n    return Pervasives.$at(param[0], flatten(param[1]));\n  } else {\n    return /* [] */0;\n  }\n}\n\nfunction map(f, param) {\n  if (param) {\n    var r = Curry._1(f, param[0]);\n    return /* :: */[\n            r,\n            map(f, param[1])\n          ];\n  } else {\n    return /* [] */0;\n  }\n}\n\nfunction mapi(i, f, param) {\n  if (param) {\n    var r = Curry._2(f, i, param[0]);\n    return /* :: */[\n            r,\n            mapi(i + 1 | 0, f, param[1])\n          ];\n  } else {\n    return /* [] */0;\n  }\n}\n\nfunction mapi$1(f, l) {\n  return mapi(0, f, l);\n}\n\nfunction rev_map(f, l) {\n  var _accu = /* [] */0;\n  var _param = l;\n  while(true) {\n    var param = _param;\n    var accu = _accu;\n    if (param) {\n      _param = param[1];\n      _accu = /* :: */[\n        Curry._1(f, param[0]),\n        accu\n      ];\n      continue ;\n    } else {\n      return accu;\n    }\n  };\n}\n\nfunction iter(f, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      Curry._1(f, param[0]);\n      _param = param[1];\n      continue ;\n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction iteri(f, l) {\n  var _i = 0;\n  var f$1 = f;\n  var _param = l;\n  while(true) {\n    var param = _param;\n    var i = _i;\n    if (param) {\n      Curry._2(f$1, i, param[0]);\n      _param = param[1];\n      _i = i + 1 | 0;\n      continue ;\n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction fold_left(f, _accu, _l) {\n  while(true) {\n    var l = _l;\n    var accu = _accu;\n    if (l) {\n      _l = l[1];\n      _accu = Curry._2(f, accu, l[0]);\n      continue ;\n    } else {\n      return accu;\n    }\n  };\n}\n\nfunction fold_right(f, l, accu) {\n  if (l) {\n    return Curry._2(f, l[0], fold_right(f, l[1], accu));\n  } else {\n    return accu;\n  }\n}\n\nfunction map2(f, l1, l2) {\n  if (l1) {\n    if (l2) {\n      var r = Curry._2(f, l1[0], l2[0]);\n      return /* :: */[\n              r,\n              map2(f, l1[1], l2[1])\n            ];\n    } else {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.map2\"\n          ];\n    }\n  } else if (l2) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"List.map2\"\n        ];\n  } else {\n    return /* [] */0;\n  }\n}\n\nfunction rev_map2(f, l1, l2) {\n  var _accu = /* [] */0;\n  var _l1 = l1;\n  var _l2 = l2;\n  while(true) {\n    var l2$1 = _l2;\n    var l1$1 = _l1;\n    var accu = _accu;\n    if (l1$1) {\n      if (l2$1) {\n        _l2 = l2$1[1];\n        _l1 = l1$1[1];\n        _accu = /* :: */[\n          Curry._2(f, l1$1[0], l2$1[0]),\n          accu\n        ];\n        continue ;\n      } else {\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              \"List.rev_map2\"\n            ];\n      }\n    } else if (l2$1) {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.rev_map2\"\n          ];\n    } else {\n      return accu;\n    }\n  };\n}\n\nfunction iter2(f, _l1, _l2) {\n  while(true) {\n    var l2 = _l2;\n    var l1 = _l1;\n    if (l1) {\n      if (l2) {\n        Curry._2(f, l1[0], l2[0]);\n        _l2 = l2[1];\n        _l1 = l1[1];\n        continue ;\n      } else {\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              \"List.iter2\"\n            ];\n      }\n    } else if (l2) {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.iter2\"\n          ];\n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction fold_left2(f, _accu, _l1, _l2) {\n  while(true) {\n    var l2 = _l2;\n    var l1 = _l1;\n    var accu = _accu;\n    if (l1) {\n      if (l2) {\n        _l2 = l2[1];\n        _l1 = l1[1];\n        _accu = Curry._3(f, accu, l1[0], l2[0]);\n        continue ;\n      } else {\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              \"List.fold_left2\"\n            ];\n      }\n    } else if (l2) {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.fold_left2\"\n          ];\n    } else {\n      return accu;\n    }\n  };\n}\n\nfunction fold_right2(f, l1, l2, accu) {\n  if (l1) {\n    if (l2) {\n      return Curry._3(f, l1[0], l2[0], fold_right2(f, l1[1], l2[1], accu));\n    } else {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.fold_right2\"\n          ];\n    }\n  } else if (l2) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"List.fold_right2\"\n        ];\n  } else {\n    return accu;\n  }\n}\n\nfunction for_all(p, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      if (Curry._1(p, param[0])) {\n        _param = param[1];\n        continue ;\n      } else {\n        return false;\n      }\n    } else {\n      return true;\n    }\n  };\n}\n\nfunction exists(p, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      if (Curry._1(p, param[0])) {\n        return true;\n      } else {\n        _param = param[1];\n        continue ;\n      }\n    } else {\n      return false;\n    }\n  };\n}\n\nfunction for_all2(p, _l1, _l2) {\n  while(true) {\n    var l2 = _l2;\n    var l1 = _l1;\n    if (l1) {\n      if (l2) {\n        if (Curry._2(p, l1[0], l2[0])) {\n          _l2 = l2[1];\n          _l1 = l1[1];\n          continue ;\n        } else {\n          return false;\n        }\n      } else {\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              \"List.for_all2\"\n            ];\n      }\n    } else if (l2) {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.for_all2\"\n          ];\n    } else {\n      return true;\n    }\n  };\n}\n\nfunction exists2(p, _l1, _l2) {\n  while(true) {\n    var l2 = _l2;\n    var l1 = _l1;\n    if (l1) {\n      if (l2) {\n        if (Curry._2(p, l1[0], l2[0])) {\n          return true;\n        } else {\n          _l2 = l2[1];\n          _l1 = l1[1];\n          continue ;\n        }\n      } else {\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              \"List.exists2\"\n            ];\n      }\n    } else if (l2) {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.exists2\"\n          ];\n    } else {\n      return false;\n    }\n  };\n}\n\nfunction mem(x, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      if (Caml_obj.caml_equal(param[0], x)) {\n        return true;\n      } else {\n        _param = param[1];\n        continue ;\n      }\n    } else {\n      return false;\n    }\n  };\n}\n\nfunction memq(x, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      if (param[0] === x) {\n        return true;\n      } else {\n        _param = param[1];\n        continue ;\n      }\n    } else {\n      return false;\n    }\n  };\n}\n\nfunction assoc(x, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      var match = param[0];\n      if (Caml_obj.caml_equal(match[0], x)) {\n        return match[1];\n      } else {\n        _param = param[1];\n        continue ;\n      }\n    } else {\n      throw Caml_builtin_exceptions.not_found;\n    }\n  };\n}\n\nfunction assq(x, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      var match = param[0];\n      if (match[0] === x) {\n        return match[1];\n      } else {\n        _param = param[1];\n        continue ;\n      }\n    } else {\n      throw Caml_builtin_exceptions.not_found;\n    }\n  };\n}\n\nfunction mem_assoc(x, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      if (Caml_obj.caml_equal(param[0][0], x)) {\n        return true;\n      } else {\n        _param = param[1];\n        continue ;\n      }\n    } else {\n      return false;\n    }\n  };\n}\n\nfunction mem_assq(x, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      if (param[0][0] === x) {\n        return true;\n      } else {\n        _param = param[1];\n        continue ;\n      }\n    } else {\n      return false;\n    }\n  };\n}\n\nfunction remove_assoc(x, param) {\n  if (param) {\n    var l = param[1];\n    var pair = param[0];\n    if (Caml_obj.caml_equal(pair[0], x)) {\n      return l;\n    } else {\n      return /* :: */[\n              pair,\n              remove_assoc(x, l)\n            ];\n    }\n  } else {\n    return /* [] */0;\n  }\n}\n\nfunction remove_assq(x, param) {\n  if (param) {\n    var l = param[1];\n    var pair = param[0];\n    if (pair[0] === x) {\n      return l;\n    } else {\n      return /* :: */[\n              pair,\n              remove_assq(x, l)\n            ];\n    }\n  } else {\n    return /* [] */0;\n  }\n}\n\nfunction find(p, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      var x = param[0];\n      if (Curry._1(p, x)) {\n        return x;\n      } else {\n        _param = param[1];\n        continue ;\n      }\n    } else {\n      throw Caml_builtin_exceptions.not_found;\n    }\n  };\n}\n\nfunction find_all(p) {\n  return (function (param) {\n      var _accu = /* [] */0;\n      var _param = param;\n      while(true) {\n        var param$1 = _param;\n        var accu = _accu;\n        if (param$1) {\n          var l = param$1[1];\n          var x = param$1[0];\n          if (Curry._1(p, x)) {\n            _param = l;\n            _accu = /* :: */[\n              x,\n              accu\n            ];\n            continue ;\n          } else {\n            _param = l;\n            continue ;\n          }\n        } else {\n          return rev_append(accu, /* [] */0);\n        }\n      };\n    });\n}\n\nfunction partition(p, l) {\n  var _yes = /* [] */0;\n  var _no = /* [] */0;\n  var _param = l;\n  while(true) {\n    var param = _param;\n    var no = _no;\n    var yes = _yes;\n    if (param) {\n      var l$1 = param[1];\n      var x = param[0];\n      if (Curry._1(p, x)) {\n        _param = l$1;\n        _yes = /* :: */[\n          x,\n          yes\n        ];\n        continue ;\n      } else {\n        _param = l$1;\n        _no = /* :: */[\n          x,\n          no\n        ];\n        continue ;\n      }\n    } else {\n      return /* tuple */[\n              rev_append(yes, /* [] */0),\n              rev_append(no, /* [] */0)\n            ];\n    }\n  };\n}\n\nfunction split(param) {\n  if (param) {\n    var match = param[0];\n    var match$1 = split(param[1]);\n    return /* tuple */[\n            /* :: */[\n              match[0],\n              match$1[0]\n            ],\n            /* :: */[\n              match[1],\n              match$1[1]\n            ]\n          ];\n  } else {\n    return /* tuple */[\n            /* [] */0,\n            /* [] */0\n          ];\n  }\n}\n\nfunction combine(l1, l2) {\n  if (l1) {\n    if (l2) {\n      return /* :: */[\n              /* tuple */[\n                l1[0],\n                l2[0]\n              ],\n              combine(l1[1], l2[1])\n            ];\n    } else {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.combine\"\n          ];\n    }\n  } else if (l2) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"List.combine\"\n        ];\n  } else {\n    return /* [] */0;\n  }\n}\n\nfunction merge(cmp, l1, l2) {\n  if (l1) {\n    if (l2) {\n      var h2 = l2[0];\n      var h1 = l1[0];\n      if (Curry._2(cmp, h1, h2) <= 0) {\n        return /* :: */[\n                h1,\n                merge(cmp, l1[1], l2)\n              ];\n      } else {\n        return /* :: */[\n                h2,\n                merge(cmp, l1, l2[1])\n              ];\n      }\n    } else {\n      return l1;\n    }\n  } else {\n    return l2;\n  }\n}\n\nfunction chop(_k, _l) {\n  while(true) {\n    var l = _l;\n    var k = _k;\n    if (k === 0) {\n      return l;\n    } else if (l) {\n      _l = l[1];\n      _k = k - 1 | 0;\n      continue ;\n    } else {\n      throw [\n            Caml_builtin_exceptions.assert_failure,\n            /* tuple */[\n              \"list.ml\",\n              223,\n              11\n            ]\n          ];\n    }\n  };\n}\n\nfunction stable_sort(cmp, l) {\n  var sort = function (n, l) {\n    var exit = 0;\n    if (n !== 2) {\n      if (n !== 3 || !l) {\n        exit = 1;\n      } else {\n        var match = l[1];\n        if (match) {\n          var match$1 = match[1];\n          if (match$1) {\n            var x3 = match$1[0];\n            var x2 = match[0];\n            var x1 = l[0];\n            if (Curry._2(cmp, x1, x2) <= 0) {\n              if (Curry._2(cmp, x2, x3) <= 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x2,\n                          /* :: */[\n                            x3,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else if (Curry._2(cmp, x1, x3) <= 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x3,\n                          /* :: */[\n                            x2,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else {\n                return /* :: */[\n                        x3,\n                        /* :: */[\n                          x1,\n                          /* :: */[\n                            x2,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              }\n            } else if (Curry._2(cmp, x1, x3) <= 0) {\n              return /* :: */[\n                      x2,\n                      /* :: */[\n                        x1,\n                        /* :: */[\n                          x3,\n                          /* [] */0\n                        ]\n                      ]\n                    ];\n            } else if (Curry._2(cmp, x2, x3) <= 0) {\n              return /* :: */[\n                      x2,\n                      /* :: */[\n                        x3,\n                        /* :: */[\n                          x1,\n                          /* [] */0\n                        ]\n                      ]\n                    ];\n            } else {\n              return /* :: */[\n                      x3,\n                      /* :: */[\n                        x2,\n                        /* :: */[\n                          x1,\n                          /* [] */0\n                        ]\n                      ]\n                    ];\n            }\n          } else {\n            exit = 1;\n          }\n        } else {\n          exit = 1;\n        }\n      }\n    } else if (l) {\n      var match$2 = l[1];\n      if (match$2) {\n        var x2$1 = match$2[0];\n        var x1$1 = l[0];\n        if (Curry._2(cmp, x1$1, x2$1) <= 0) {\n          return /* :: */[\n                  x1$1,\n                  /* :: */[\n                    x2$1,\n                    /* [] */0\n                  ]\n                ];\n        } else {\n          return /* :: */[\n                  x2$1,\n                  /* :: */[\n                    x1$1,\n                    /* [] */0\n                  ]\n                ];\n        }\n      } else {\n        exit = 1;\n      }\n    } else {\n      exit = 1;\n    }\n    if (exit === 1) {\n      var n1 = (n >> 1);\n      var n2 = n - n1 | 0;\n      var l2 = chop(n1, l);\n      var s1 = rev_sort(n1, l);\n      var s2 = rev_sort(n2, l2);\n      var _l1 = s1;\n      var _l2 = s2;\n      var _accu = /* [] */0;\n      while(true) {\n        var accu = _accu;\n        var l2$1 = _l2;\n        var l1 = _l1;\n        if (l1) {\n          if (l2$1) {\n            var h2 = l2$1[0];\n            var h1 = l1[0];\n            if (Curry._2(cmp, h1, h2) > 0) {\n              _accu = /* :: */[\n                h1,\n                accu\n              ];\n              _l1 = l1[1];\n              continue ;\n            } else {\n              _accu = /* :: */[\n                h2,\n                accu\n              ];\n              _l2 = l2$1[1];\n              continue ;\n            }\n          } else {\n            return rev_append(l1, accu);\n          }\n        } else {\n          return rev_append(l2$1, accu);\n        }\n      };\n    }\n    \n  };\n  var rev_sort = function (n, l) {\n    var exit = 0;\n    if (n !== 2) {\n      if (n !== 3 || !l) {\n        exit = 1;\n      } else {\n        var match = l[1];\n        if (match) {\n          var match$1 = match[1];\n          if (match$1) {\n            var x3 = match$1[0];\n            var x2 = match[0];\n            var x1 = l[0];\n            if (Curry._2(cmp, x1, x2) > 0) {\n              if (Curry._2(cmp, x2, x3) > 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x2,\n                          /* :: */[\n                            x3,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else if (Curry._2(cmp, x1, x3) > 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x3,\n                          /* :: */[\n                            x2,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else {\n                return /* :: */[\n                        x3,\n                        /* :: */[\n                          x1,\n                          /* :: */[\n                            x2,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              }\n            } else if (Curry._2(cmp, x1, x3) > 0) {\n              return /* :: */[\n                      x2,\n                      /* :: */[\n                        x1,\n                        /* :: */[\n                          x3,\n                          /* [] */0\n                        ]\n                      ]\n                    ];\n            } else if (Curry._2(cmp, x2, x3) > 0) {\n              return /* :: */[\n                      x2,\n                      /* :: */[\n                        x3,\n                        /* :: */[\n                          x1,\n                          /* [] */0\n                        ]\n                      ]\n                    ];\n            } else {\n              return /* :: */[\n                      x3,\n                      /* :: */[\n                        x2,\n                        /* :: */[\n                          x1,\n                          /* [] */0\n                        ]\n                      ]\n                    ];\n            }\n          } else {\n            exit = 1;\n          }\n        } else {\n          exit = 1;\n        }\n      }\n    } else if (l) {\n      var match$2 = l[1];\n      if (match$2) {\n        var x2$1 = match$2[0];\n        var x1$1 = l[0];\n        if (Curry._2(cmp, x1$1, x2$1) > 0) {\n          return /* :: */[\n                  x1$1,\n                  /* :: */[\n                    x2$1,\n                    /* [] */0\n                  ]\n                ];\n        } else {\n          return /* :: */[\n                  x2$1,\n                  /* :: */[\n                    x1$1,\n                    /* [] */0\n                  ]\n                ];\n        }\n      } else {\n        exit = 1;\n      }\n    } else {\n      exit = 1;\n    }\n    if (exit === 1) {\n      var n1 = (n >> 1);\n      var n2 = n - n1 | 0;\n      var l2 = chop(n1, l);\n      var s1 = sort(n1, l);\n      var s2 = sort(n2, l2);\n      var _l1 = s1;\n      var _l2 = s2;\n      var _accu = /* [] */0;\n      while(true) {\n        var accu = _accu;\n        var l2$1 = _l2;\n        var l1 = _l1;\n        if (l1) {\n          if (l2$1) {\n            var h2 = l2$1[0];\n            var h1 = l1[0];\n            if (Curry._2(cmp, h1, h2) <= 0) {\n              _accu = /* :: */[\n                h1,\n                accu\n              ];\n              _l1 = l1[1];\n              continue ;\n            } else {\n              _accu = /* :: */[\n                h2,\n                accu\n              ];\n              _l2 = l2$1[1];\n              continue ;\n            }\n          } else {\n            return rev_append(l1, accu);\n          }\n        } else {\n          return rev_append(l2$1, accu);\n        }\n      };\n    }\n    \n  };\n  var len = length(l);\n  if (len < 2) {\n    return l;\n  } else {\n    return sort(len, l);\n  }\n}\n\nfunction sort_uniq(cmp, l) {\n  var sort = function (n, l) {\n    var exit = 0;\n    if (n !== 2) {\n      if (n !== 3 || !l) {\n        exit = 1;\n      } else {\n        var match = l[1];\n        if (match) {\n          var match$1 = match[1];\n          if (match$1) {\n            var x3 = match$1[0];\n            var x2 = match[0];\n            var x1 = l[0];\n            var c = Curry._2(cmp, x1, x2);\n            if (c === 0) {\n              var c$1 = Curry._2(cmp, x2, x3);\n              if (c$1 === 0) {\n                return /* :: */[\n                        x2,\n                        /* [] */0\n                      ];\n              } else if (c$1 < 0) {\n                return /* :: */[\n                        x2,\n                        /* :: */[\n                          x3,\n                          /* [] */0\n                        ]\n                      ];\n              } else {\n                return /* :: */[\n                        x3,\n                        /* :: */[\n                          x2,\n                          /* [] */0\n                        ]\n                      ];\n              }\n            } else if (c < 0) {\n              var c$2 = Curry._2(cmp, x2, x3);\n              if (c$2 === 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x2,\n                          /* [] */0\n                        ]\n                      ];\n              } else if (c$2 < 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x2,\n                          /* :: */[\n                            x3,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else {\n                var c$3 = Curry._2(cmp, x1, x3);\n                if (c$3 === 0) {\n                  return /* :: */[\n                          x1,\n                          /* :: */[\n                            x2,\n                            /* [] */0\n                          ]\n                        ];\n                } else if (c$3 < 0) {\n                  return /* :: */[\n                          x1,\n                          /* :: */[\n                            x3,\n                            /* :: */[\n                              x2,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                } else {\n                  return /* :: */[\n                          x3,\n                          /* :: */[\n                            x1,\n                            /* :: */[\n                              x2,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                }\n              }\n            } else {\n              var c$4 = Curry._2(cmp, x1, x3);\n              if (c$4 === 0) {\n                return /* :: */[\n                        x2,\n                        /* :: */[\n                          x1,\n                          /* [] */0\n                        ]\n                      ];\n              } else if (c$4 < 0) {\n                return /* :: */[\n                        x2,\n                        /* :: */[\n                          x1,\n                          /* :: */[\n                            x3,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else {\n                var c$5 = Curry._2(cmp, x2, x3);\n                if (c$5 === 0) {\n                  return /* :: */[\n                          x2,\n                          /* :: */[\n                            x1,\n                            /* [] */0\n                          ]\n                        ];\n                } else if (c$5 < 0) {\n                  return /* :: */[\n                          x2,\n                          /* :: */[\n                            x3,\n                            /* :: */[\n                              x1,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                } else {\n                  return /* :: */[\n                          x3,\n                          /* :: */[\n                            x2,\n                            /* :: */[\n                              x1,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                }\n              }\n            }\n          } else {\n            exit = 1;\n          }\n        } else {\n          exit = 1;\n        }\n      }\n    } else if (l) {\n      var match$2 = l[1];\n      if (match$2) {\n        var x2$1 = match$2[0];\n        var x1$1 = l[0];\n        var c$6 = Curry._2(cmp, x1$1, x2$1);\n        if (c$6 === 0) {\n          return /* :: */[\n                  x1$1,\n                  /* [] */0\n                ];\n        } else if (c$6 < 0) {\n          return /* :: */[\n                  x1$1,\n                  /* :: */[\n                    x2$1,\n                    /* [] */0\n                  ]\n                ];\n        } else {\n          return /* :: */[\n                  x2$1,\n                  /* :: */[\n                    x1$1,\n                    /* [] */0\n                  ]\n                ];\n        }\n      } else {\n        exit = 1;\n      }\n    } else {\n      exit = 1;\n    }\n    if (exit === 1) {\n      var n1 = (n >> 1);\n      var n2 = n - n1 | 0;\n      var l2 = chop(n1, l);\n      var s1 = rev_sort(n1, l);\n      var s2 = rev_sort(n2, l2);\n      var _l1 = s1;\n      var _l2 = s2;\n      var _accu = /* [] */0;\n      while(true) {\n        var accu = _accu;\n        var l2$1 = _l2;\n        var l1 = _l1;\n        if (l1) {\n          if (l2$1) {\n            var t2 = l2$1[1];\n            var h2 = l2$1[0];\n            var t1 = l1[1];\n            var h1 = l1[0];\n            var c$7 = Curry._2(cmp, h1, h2);\n            if (c$7 === 0) {\n              _accu = /* :: */[\n                h1,\n                accu\n              ];\n              _l2 = t2;\n              _l1 = t1;\n              continue ;\n            } else if (c$7 > 0) {\n              _accu = /* :: */[\n                h1,\n                accu\n              ];\n              _l1 = t1;\n              continue ;\n            } else {\n              _accu = /* :: */[\n                h2,\n                accu\n              ];\n              _l2 = t2;\n              continue ;\n            }\n          } else {\n            return rev_append(l1, accu);\n          }\n        } else {\n          return rev_append(l2$1, accu);\n        }\n      };\n    }\n    \n  };\n  var rev_sort = function (n, l) {\n    var exit = 0;\n    if (n !== 2) {\n      if (n !== 3 || !l) {\n        exit = 1;\n      } else {\n        var match = l[1];\n        if (match) {\n          var match$1 = match[1];\n          if (match$1) {\n            var x3 = match$1[0];\n            var x2 = match[0];\n            var x1 = l[0];\n            var c = Curry._2(cmp, x1, x2);\n            if (c === 0) {\n              var c$1 = Curry._2(cmp, x2, x3);\n              if (c$1 === 0) {\n                return /* :: */[\n                        x2,\n                        /* [] */0\n                      ];\n              } else if (c$1 > 0) {\n                return /* :: */[\n                        x2,\n                        /* :: */[\n                          x3,\n                          /* [] */0\n                        ]\n                      ];\n              } else {\n                return /* :: */[\n                        x3,\n                        /* :: */[\n                          x2,\n                          /* [] */0\n                        ]\n                      ];\n              }\n            } else if (c > 0) {\n              var c$2 = Curry._2(cmp, x2, x3);\n              if (c$2 === 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x2,\n                          /* [] */0\n                        ]\n                      ];\n              } else if (c$2 > 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x2,\n                          /* :: */[\n                            x3,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else {\n                var c$3 = Curry._2(cmp, x1, x3);\n                if (c$3 === 0) {\n                  return /* :: */[\n                          x1,\n                          /* :: */[\n                            x2,\n                            /* [] */0\n                          ]\n                        ];\n                } else if (c$3 > 0) {\n                  return /* :: */[\n                          x1,\n                          /* :: */[\n                            x3,\n                            /* :: */[\n                              x2,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                } else {\n                  return /* :: */[\n                          x3,\n                          /* :: */[\n                            x1,\n                            /* :: */[\n                              x2,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                }\n              }\n            } else {\n              var c$4 = Curry._2(cmp, x1, x3);\n              if (c$4 === 0) {\n                return /* :: */[\n                        x2,\n                        /* :: */[\n                          x1,\n                          /* [] */0\n                        ]\n                      ];\n              } else if (c$4 > 0) {\n                return /* :: */[\n                        x2,\n                        /* :: */[\n                          x1,\n                          /* :: */[\n                            x3,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else {\n                var c$5 = Curry._2(cmp, x2, x3);\n                if (c$5 === 0) {\n                  return /* :: */[\n                          x2,\n                          /* :: */[\n                            x1,\n                            /* [] */0\n                          ]\n                        ];\n                } else if (c$5 > 0) {\n                  return /* :: */[\n                          x2,\n                          /* :: */[\n                            x3,\n                            /* :: */[\n                              x1,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                } else {\n                  return /* :: */[\n                          x3,\n                          /* :: */[\n                            x2,\n                            /* :: */[\n                              x1,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                }\n              }\n            }\n          } else {\n            exit = 1;\n          }\n        } else {\n          exit = 1;\n        }\n      }\n    } else if (l) {\n      var match$2 = l[1];\n      if (match$2) {\n        var x2$1 = match$2[0];\n        var x1$1 = l[0];\n        var c$6 = Curry._2(cmp, x1$1, x2$1);\n        if (c$6 === 0) {\n          return /* :: */[\n                  x1$1,\n                  /* [] */0\n                ];\n        } else if (c$6 > 0) {\n          return /* :: */[\n                  x1$1,\n                  /* :: */[\n                    x2$1,\n                    /* [] */0\n                  ]\n                ];\n        } else {\n          return /* :: */[\n                  x2$1,\n                  /* :: */[\n                    x1$1,\n                    /* [] */0\n                  ]\n                ];\n        }\n      } else {\n        exit = 1;\n      }\n    } else {\n      exit = 1;\n    }\n    if (exit === 1) {\n      var n1 = (n >> 1);\n      var n2 = n - n1 | 0;\n      var l2 = chop(n1, l);\n      var s1 = sort(n1, l);\n      var s2 = sort(n2, l2);\n      var _l1 = s1;\n      var _l2 = s2;\n      var _accu = /* [] */0;\n      while(true) {\n        var accu = _accu;\n        var l2$1 = _l2;\n        var l1 = _l1;\n        if (l1) {\n          if (l2$1) {\n            var t2 = l2$1[1];\n            var h2 = l2$1[0];\n            var t1 = l1[1];\n            var h1 = l1[0];\n            var c$7 = Curry._2(cmp, h1, h2);\n            if (c$7 === 0) {\n              _accu = /* :: */[\n                h1,\n                accu\n              ];\n              _l2 = t2;\n              _l1 = t1;\n              continue ;\n            } else if (c$7 < 0) {\n              _accu = /* :: */[\n                h1,\n                accu\n              ];\n              _l1 = t1;\n              continue ;\n            } else {\n              _accu = /* :: */[\n                h2,\n                accu\n              ];\n              _l2 = t2;\n              continue ;\n            }\n          } else {\n            return rev_append(l1, accu);\n          }\n        } else {\n          return rev_append(l2$1, accu);\n        }\n      };\n    }\n    \n  };\n  var len = length(l);\n  if (len < 2) {\n    return l;\n  } else {\n    return sort(len, l);\n  }\n}\n\nvar append = Pervasives.$at;\n\nvar concat = flatten;\n\nvar filter = find_all;\n\nvar sort = stable_sort;\n\nvar fast_sort = stable_sort;\n\nexports.length = length;\nexports.hd = hd;\nexports.tl = tl;\nexports.nth = nth;\nexports.rev = rev;\nexports.append = append;\nexports.rev_append = rev_append;\nexports.concat = concat;\nexports.flatten = flatten;\nexports.iter = iter;\nexports.iteri = iteri;\nexports.map = map;\nexports.mapi = mapi$1;\nexports.rev_map = rev_map;\nexports.fold_left = fold_left;\nexports.fold_right = fold_right;\nexports.iter2 = iter2;\nexports.map2 = map2;\nexports.rev_map2 = rev_map2;\nexports.fold_left2 = fold_left2;\nexports.fold_right2 = fold_right2;\nexports.for_all = for_all;\nexports.exists = exists;\nexports.for_all2 = for_all2;\nexports.exists2 = exists2;\nexports.mem = mem;\nexports.memq = memq;\nexports.find = find;\nexports.filter = filter;\nexports.find_all = find_all;\nexports.partition = partition;\nexports.assoc = assoc;\nexports.assq = assq;\nexports.mem_assoc = mem_assoc;\nexports.mem_assq = mem_assq;\nexports.remove_assoc = remove_assoc;\nexports.remove_assq = remove_assq;\nexports.split = split;\nexports.combine = combine;\nexports.sort = sort;\nexports.stable_sort = stable_sort;\nexports.fast_sort = fast_sort;\nexports.sort_uniq = sort_uniq;\nexports.merge = merge;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/list.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/pervasives.js":
/*!*******************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/pervasives.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Curry = __webpack_require__(/*! ./curry.js */ \"./node_modules/bs-platform/lib/js/curry.js\");\nvar Caml_io = __webpack_require__(/*! ./caml_io.js */ \"./node_modules/bs-platform/lib/js/caml_io.js\");\nvar Caml_sys = __webpack_require__(/*! ./caml_sys.js */ \"./node_modules/bs-platform/lib/js/caml_sys.js\");\nvar Caml_bytes = __webpack_require__(/*! ./caml_bytes.js */ \"./node_modules/bs-platform/lib/js/caml_bytes.js\");\nvar Caml_format = __webpack_require__(/*! ./caml_format.js */ \"./node_modules/bs-platform/lib/js/caml_format.js\");\nvar Caml_string = __webpack_require__(/*! ./caml_string.js */ \"./node_modules/bs-platform/lib/js/caml_string.js\");\nvar Caml_exceptions = __webpack_require__(/*! ./caml_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_exceptions.js\");\nvar Caml_missing_polyfill = __webpack_require__(/*! ./caml_missing_polyfill.js */ \"./node_modules/bs-platform/lib/js/caml_missing_polyfill.js\");\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\nvar CamlinternalFormatBasics = __webpack_require__(/*! ./camlinternalFormatBasics.js */ \"./node_modules/bs-platform/lib/js/camlinternalFormatBasics.js\");\n\nfunction failwith(s) {\n  throw [\n        Caml_builtin_exceptions.failure,\n        s\n      ];\n}\n\nfunction invalid_arg(s) {\n  throw [\n        Caml_builtin_exceptions.invalid_argument,\n        s\n      ];\n}\n\nvar Exit = Caml_exceptions.create(\"Pervasives.Exit\");\n\nfunction abs(x) {\n  if (x >= 0) {\n    return x;\n  } else {\n    return -x | 0;\n  }\n}\n\nfunction lnot(x) {\n  return x ^ -1;\n}\n\nvar min_int = -2147483648;\n\nfunction classify_float(x) {\n  if (isFinite(x)) {\n    if (Math.abs(x) >= 2.2250738585072014e-308) {\n      return /* FP_normal */0;\n    } else if (x !== 0) {\n      return /* FP_subnormal */1;\n    } else {\n      return /* FP_zero */2;\n    }\n  } else if (isNaN(x)) {\n    return /* FP_nan */4;\n  } else {\n    return /* FP_infinite */3;\n  }\n}\n\nfunction char_of_int(n) {\n  if (n < 0 || n > 255) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"char_of_int\"\n        ];\n  } else {\n    return n;\n  }\n}\n\nfunction string_of_bool(b) {\n  if (b) {\n    return \"true\";\n  } else {\n    return \"false\";\n  }\n}\n\nfunction bool_of_string(param) {\n  switch (param) {\n    case \"false\" : \n        return false;\n    case \"true\" : \n        return true;\n    default:\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"bool_of_string\"\n          ];\n  }\n}\n\nfunction valid_float_lexem(s) {\n  var l = s.length;\n  var _i = 0;\n  while(true) {\n    var i = _i;\n    if (i >= l) {\n      return s + \".\";\n    } else {\n      var match = Caml_string.get(s, i);\n      if (match >= 48) {\n        if (match >= 58) {\n          return s;\n        } else {\n          _i = i + 1 | 0;\n          continue ;\n        }\n      } else if (match !== 45) {\n        return s;\n      } else {\n        _i = i + 1 | 0;\n        continue ;\n      }\n    }\n  };\n}\n\nfunction string_of_float(f) {\n  return valid_float_lexem(Caml_format.caml_format_float(\"%.12g\", f));\n}\n\nfunction $at(l1, l2) {\n  if (l1) {\n    return /* :: */[\n            l1[0],\n            $at(l1[1], l2)\n          ];\n  } else {\n    return l2;\n  }\n}\n\nvar stdin = Caml_io.stdin;\n\nvar stdout = Caml_io.stdout;\n\nvar stderr = Caml_io.stderr;\n\nfunction open_out_gen(mode, perm, name) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_open_descriptor_out\");\n}\n\nfunction open_out(name) {\n  return open_out_gen(/* :: */[\n              /* Open_wronly */1,\n              /* :: */[\n                /* Open_creat */3,\n                /* :: */[\n                  /* Open_trunc */4,\n                  /* :: */[\n                    /* Open_text */7,\n                    /* [] */0\n                  ]\n                ]\n              ]\n            ], 438, name);\n}\n\nfunction open_out_bin(name) {\n  return open_out_gen(/* :: */[\n              /* Open_wronly */1,\n              /* :: */[\n                /* Open_creat */3,\n                /* :: */[\n                  /* Open_trunc */4,\n                  /* :: */[\n                    /* Open_binary */6,\n                    /* [] */0\n                  ]\n                ]\n              ]\n            ], 438, name);\n}\n\nfunction flush_all(param) {\n  var _param = Caml_io.caml_ml_out_channels_list(/* () */0);\n  while(true) {\n    var param$1 = _param;\n    if (param$1) {\n      try {\n        Caml_io.caml_ml_flush(param$1[0]);\n      }\n      catch (exn){\n        \n      }\n      _param = param$1[1];\n      continue ;\n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction output_bytes(oc, s) {\n  return Caml_io.caml_ml_output(oc, s, 0, s.length);\n}\n\nfunction output_string(oc, s) {\n  return Caml_io.caml_ml_output(oc, s, 0, s.length);\n}\n\nfunction output(oc, s, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"output\"\n        ];\n  } else {\n    return Caml_io.caml_ml_output(oc, s, ofs, len);\n  }\n}\n\nfunction output_substring(oc, s, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"output_substring\"\n        ];\n  } else {\n    return Caml_io.caml_ml_output(oc, s, ofs, len);\n  }\n}\n\nfunction output_value(chan, v) {\n  return Caml_missing_polyfill.not_implemented(\"caml_output_value\");\n}\n\nfunction close_out(oc) {\n  Caml_io.caml_ml_flush(oc);\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_close_channel\");\n}\n\nfunction close_out_noerr(oc) {\n  try {\n    Caml_io.caml_ml_flush(oc);\n  }\n  catch (exn){\n    \n  }\n  try {\n    return Caml_missing_polyfill.not_implemented(\"caml_ml_close_channel\");\n  }\n  catch (exn$1){\n    return /* () */0;\n  }\n}\n\nfunction open_in_gen(mode, perm, name) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_open_descriptor_in\");\n}\n\nfunction open_in(name) {\n  return open_in_gen(/* :: */[\n              /* Open_rdonly */0,\n              /* :: */[\n                /* Open_text */7,\n                /* [] */0\n              ]\n            ], 0, name);\n}\n\nfunction open_in_bin(name) {\n  return open_in_gen(/* :: */[\n              /* Open_rdonly */0,\n              /* :: */[\n                /* Open_binary */6,\n                /* [] */0\n              ]\n            ], 0, name);\n}\n\nfunction input(ic, s, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"input\"\n        ];\n  } else {\n    return Caml_missing_polyfill.not_implemented(\"caml_ml_input\");\n  }\n}\n\nfunction unsafe_really_input(ic, s, _ofs, _len) {\n  while(true) {\n    var len = _len;\n    var ofs = _ofs;\n    if (len <= 0) {\n      return /* () */0;\n    } else {\n      var r = Caml_missing_polyfill.not_implemented(\"caml_ml_input\");\n      if (r === 0) {\n        throw Caml_builtin_exceptions.end_of_file;\n      } else {\n        _len = len - r | 0;\n        _ofs = ofs + r | 0;\n        continue ;\n      }\n    }\n  };\n}\n\nfunction really_input(ic, s, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"really_input\"\n        ];\n  } else {\n    return unsafe_really_input(ic, s, ofs, len);\n  }\n}\n\nfunction really_input_string(ic, len) {\n  var s = Caml_bytes.caml_create_bytes(len);\n  really_input(ic, s, 0, len);\n  return Caml_bytes.bytes_to_string(s);\n}\n\nfunction input_line(chan) {\n  var build_result = function (buf, _pos, _param) {\n    while(true) {\n      var param = _param;\n      var pos = _pos;\n      if (param) {\n        var hd = param[0];\n        var len = hd.length;\n        Caml_bytes.caml_blit_bytes(hd, 0, buf, pos - len | 0, len);\n        _param = param[1];\n        _pos = pos - len | 0;\n        continue ;\n      } else {\n        return buf;\n      }\n    };\n  };\n  var scan = function (_accu, _len) {\n    while(true) {\n      var len = _len;\n      var accu = _accu;\n      var n = Caml_missing_polyfill.not_implemented(\"caml_ml_input_scan_line\");\n      if (n === 0) {\n        if (accu) {\n          return build_result(Caml_bytes.caml_create_bytes(len), len, accu);\n        } else {\n          throw Caml_builtin_exceptions.end_of_file;\n        }\n      } else if (n > 0) {\n        var res = Caml_bytes.caml_create_bytes(n - 1 | 0);\n        Caml_missing_polyfill.not_implemented(\"caml_ml_input\");\n        Caml_missing_polyfill.not_implemented(\"caml_ml_input_char\");\n        if (accu) {\n          var len$1 = (len + n | 0) - 1 | 0;\n          return build_result(Caml_bytes.caml_create_bytes(len$1), len$1, /* :: */[\n                      res,\n                      accu\n                    ]);\n        } else {\n          return res;\n        }\n      } else {\n        var beg = Caml_bytes.caml_create_bytes(-n | 0);\n        Caml_missing_polyfill.not_implemented(\"caml_ml_input\");\n        _len = len - n | 0;\n        _accu = /* :: */[\n          beg,\n          accu\n        ];\n        continue ;\n      }\n    };\n  };\n  return Caml_bytes.bytes_to_string(scan(/* [] */0, 0));\n}\n\nfunction close_in_noerr(ic) {\n  try {\n    return Caml_missing_polyfill.not_implemented(\"caml_ml_close_channel\");\n  }\n  catch (exn){\n    return /* () */0;\n  }\n}\n\nfunction print_char(c) {\n  return Caml_io.caml_ml_output_char(stdout, c);\n}\n\nfunction print_string(s) {\n  return output_string(stdout, s);\n}\n\nfunction print_bytes(s) {\n  return output_bytes(stdout, s);\n}\n\nfunction print_int(i) {\n  return output_string(stdout, String(i));\n}\n\nfunction print_float(f) {\n  return output_string(stdout, valid_float_lexem(Caml_format.caml_format_float(\"%.12g\", f)));\n}\n\nfunction print_newline(param) {\n  Caml_io.caml_ml_output_char(stdout, /* \"\\n\" */10);\n  return Caml_io.caml_ml_flush(stdout);\n}\n\nfunction prerr_char(c) {\n  return Caml_io.caml_ml_output_char(stderr, c);\n}\n\nfunction prerr_string(s) {\n  return output_string(stderr, s);\n}\n\nfunction prerr_bytes(s) {\n  return output_bytes(stderr, s);\n}\n\nfunction prerr_int(i) {\n  return output_string(stderr, String(i));\n}\n\nfunction prerr_float(f) {\n  return output_string(stderr, valid_float_lexem(Caml_format.caml_format_float(\"%.12g\", f)));\n}\n\nfunction prerr_newline(param) {\n  Caml_io.caml_ml_output_char(stderr, /* \"\\n\" */10);\n  return Caml_io.caml_ml_flush(stderr);\n}\n\nfunction read_line(param) {\n  Caml_io.caml_ml_flush(stdout);\n  return input_line(stdin);\n}\n\nfunction read_int(param) {\n  return Caml_format.caml_int_of_string((Caml_io.caml_ml_flush(stdout), input_line(stdin)));\n}\n\nfunction read_float(param) {\n  return Caml_format.caml_float_of_string((Caml_io.caml_ml_flush(stdout), input_line(stdin)));\n}\n\nfunction string_of_format(param) {\n  return param[1];\n}\n\nfunction $caret$caret(param, param$1) {\n  return /* Format */[\n          CamlinternalFormatBasics.concat_fmt(param[0], param$1[0]),\n          param[1] + (\"%,\" + param$1[1])\n        ];\n}\n\nvar exit_function = /* record */[/* contents */flush_all];\n\nfunction at_exit(f) {\n  var g = exit_function[0];\n  exit_function[0] = (function (param) {\n      Curry._1(f, /* () */0);\n      return Curry._1(g, /* () */0);\n    });\n  return /* () */0;\n}\n\nfunction do_at_exit(param) {\n  return Curry._1(exit_function[0], /* () */0);\n}\n\nfunction exit(retcode) {\n  do_at_exit(/* () */0);\n  return Caml_sys.caml_sys_exit(retcode);\n}\n\nvar max_int = 2147483647;\n\nvar epsilon_float = 2.220446049250313e-16;\n\nvar flush = Caml_io.caml_ml_flush;\n\nvar output_char = Caml_io.caml_ml_output_char;\n\nvar output_byte = Caml_io.caml_ml_output_char;\n\nfunction output_binary_int(prim, prim$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_output_int\");\n}\n\nfunction seek_out(prim, prim$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_seek_out\");\n}\n\nfunction pos_out(prim) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_pos_out\");\n}\n\nfunction out_channel_length(prim) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_channel_size\");\n}\n\nfunction set_binary_mode_out(prim, prim$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_set_binary_mode\");\n}\n\nfunction input_char(prim) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_input_char\");\n}\n\nfunction input_byte(prim) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_input_char\");\n}\n\nfunction input_binary_int(prim) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_input_int\");\n}\n\nfunction input_value(prim) {\n  return Caml_missing_polyfill.not_implemented(\"caml_input_value\");\n}\n\nfunction seek_in(prim, prim$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_seek_in\");\n}\n\nfunction pos_in(prim) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_pos_in\");\n}\n\nfunction in_channel_length(prim) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_channel_size\");\n}\n\nfunction close_in(prim) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_close_channel\");\n}\n\nfunction set_binary_mode_in(prim, prim$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_set_binary_mode\");\n}\n\nfunction LargeFile_000(prim, prim$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_seek_out_64\");\n}\n\nfunction LargeFile_001(prim) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_pos_out_64\");\n}\n\nfunction LargeFile_002(prim) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_channel_size_64\");\n}\n\nfunction LargeFile_003(prim, prim$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_seek_in_64\");\n}\n\nfunction LargeFile_004(prim) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_pos_in_64\");\n}\n\nfunction LargeFile_005(prim) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_channel_size_64\");\n}\n\nvar LargeFile = [\n  LargeFile_000,\n  LargeFile_001,\n  LargeFile_002,\n  LargeFile_003,\n  LargeFile_004,\n  LargeFile_005\n];\n\nexports.invalid_arg = invalid_arg;\nexports.failwith = failwith;\nexports.Exit = Exit;\nexports.abs = abs;\nexports.max_int = max_int;\nexports.min_int = min_int;\nexports.lnot = lnot;\nexports.epsilon_float = epsilon_float;\nexports.classify_float = classify_float;\nexports.char_of_int = char_of_int;\nexports.string_of_bool = string_of_bool;\nexports.bool_of_string = bool_of_string;\nexports.string_of_float = string_of_float;\nexports.$at = $at;\nexports.stdin = stdin;\nexports.stdout = stdout;\nexports.stderr = stderr;\nexports.print_char = print_char;\nexports.print_string = print_string;\nexports.print_bytes = print_bytes;\nexports.print_int = print_int;\nexports.print_float = print_float;\nexports.print_newline = print_newline;\nexports.prerr_char = prerr_char;\nexports.prerr_string = prerr_string;\nexports.prerr_bytes = prerr_bytes;\nexports.prerr_int = prerr_int;\nexports.prerr_float = prerr_float;\nexports.prerr_newline = prerr_newline;\nexports.read_line = read_line;\nexports.read_int = read_int;\nexports.read_float = read_float;\nexports.open_out = open_out;\nexports.open_out_bin = open_out_bin;\nexports.open_out_gen = open_out_gen;\nexports.flush = flush;\nexports.flush_all = flush_all;\nexports.output_char = output_char;\nexports.output_string = output_string;\nexports.output_bytes = output_bytes;\nexports.output = output;\nexports.output_substring = output_substring;\nexports.output_byte = output_byte;\nexports.output_binary_int = output_binary_int;\nexports.output_value = output_value;\nexports.seek_out = seek_out;\nexports.pos_out = pos_out;\nexports.out_channel_length = out_channel_length;\nexports.close_out = close_out;\nexports.close_out_noerr = close_out_noerr;\nexports.set_binary_mode_out = set_binary_mode_out;\nexports.open_in = open_in;\nexports.open_in_bin = open_in_bin;\nexports.open_in_gen = open_in_gen;\nexports.input_char = input_char;\nexports.input_line = input_line;\nexports.input = input;\nexports.really_input = really_input;\nexports.really_input_string = really_input_string;\nexports.input_byte = input_byte;\nexports.input_binary_int = input_binary_int;\nexports.input_value = input_value;\nexports.seek_in = seek_in;\nexports.pos_in = pos_in;\nexports.in_channel_length = in_channel_length;\nexports.close_in = close_in;\nexports.close_in_noerr = close_in_noerr;\nexports.set_binary_mode_in = set_binary_mode_in;\nexports.LargeFile = LargeFile;\nexports.string_of_format = string_of_format;\nexports.$caret$caret = $caret$caret;\nexports.exit = exit;\nexports.at_exit = at_exit;\nexports.valid_float_lexem = valid_float_lexem;\nexports.unsafe_really_input = unsafe_really_input;\nexports.do_at_exit = do_at_exit;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/pervasives.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/string.js":
/*!***************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/string.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar List = __webpack_require__(/*! ./list.js */ \"./node_modules/bs-platform/lib/js/list.js\");\nvar Bytes = __webpack_require__(/*! ./bytes.js */ \"./node_modules/bs-platform/lib/js/bytes.js\");\nvar Caml_bytes = __webpack_require__(/*! ./caml_bytes.js */ \"./node_modules/bs-platform/lib/js/caml_bytes.js\");\nvar Caml_int32 = __webpack_require__(/*! ./caml_int32.js */ \"./node_modules/bs-platform/lib/js/caml_int32.js\");\nvar Caml_primitive = __webpack_require__(/*! ./caml_primitive.js */ \"./node_modules/bs-platform/lib/js/caml_primitive.js\");\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction make(n, c) {\n  return Caml_bytes.bytes_to_string(Bytes.make(n, c));\n}\n\nfunction init(n, f) {\n  return Caml_bytes.bytes_to_string(Bytes.init(n, f));\n}\n\nfunction copy(s) {\n  return Caml_bytes.bytes_to_string(Bytes.copy(Caml_bytes.bytes_of_string(s)));\n}\n\nfunction sub(s, ofs, len) {\n  return Caml_bytes.bytes_to_string(Bytes.sub(Caml_bytes.bytes_of_string(s), ofs, len));\n}\n\nfunction concat(sep, l) {\n  if (l) {\n    var hd = l[0];\n    var num = /* record */[/* contents */0];\n    var len = /* record */[/* contents */0];\n    List.iter((function (s) {\n            num[0] = num[0] + 1 | 0;\n            len[0] = len[0] + s.length | 0;\n            return /* () */0;\n          }), l);\n    var r = Caml_bytes.caml_create_bytes(len[0] + Caml_int32.imul(sep.length, num[0] - 1 | 0) | 0);\n    Caml_bytes.caml_blit_string(hd, 0, r, 0, hd.length);\n    var pos = /* record */[/* contents */hd.length];\n    List.iter((function (s) {\n            Caml_bytes.caml_blit_string(sep, 0, r, pos[0], sep.length);\n            pos[0] = pos[0] + sep.length | 0;\n            Caml_bytes.caml_blit_string(s, 0, r, pos[0], s.length);\n            pos[0] = pos[0] + s.length | 0;\n            return /* () */0;\n          }), l[1]);\n    return Caml_bytes.bytes_to_string(r);\n  } else {\n    return \"\";\n  }\n}\n\nfunction iter(f, s) {\n  return Bytes.iter(f, Caml_bytes.bytes_of_string(s));\n}\n\nfunction iteri(f, s) {\n  return Bytes.iteri(f, Caml_bytes.bytes_of_string(s));\n}\n\nfunction map(f, s) {\n  return Caml_bytes.bytes_to_string(Bytes.map(f, Caml_bytes.bytes_of_string(s)));\n}\n\nfunction mapi(f, s) {\n  return Caml_bytes.bytes_to_string(Bytes.mapi(f, Caml_bytes.bytes_of_string(s)));\n}\n\nfunction is_space(param) {\n  var switcher = param - 9 | 0;\n  if (switcher > 4 || switcher < 0) {\n    return switcher === 23;\n  } else {\n    return switcher !== 2;\n  }\n}\n\nfunction trim(s) {\n  if (s === \"\" || !(is_space(s.charCodeAt(0)) || is_space(s.charCodeAt(s.length - 1 | 0)))) {\n    return s;\n  } else {\n    return Caml_bytes.bytes_to_string(Bytes.trim(Caml_bytes.bytes_of_string(s)));\n  }\n}\n\nfunction escaped(s) {\n  var needs_escape = function (_i) {\n    while(true) {\n      var i = _i;\n      if (i >= s.length) {\n        return false;\n      } else {\n        var match = s.charCodeAt(i);\n        if (match >= 32) {\n          var switcher = match - 34 | 0;\n          if (switcher > 58 || switcher < 0) {\n            if (switcher >= 93) {\n              return true;\n            } else {\n              _i = i + 1 | 0;\n              continue ;\n            }\n          } else if (switcher > 57 || switcher < 1) {\n            return true;\n          } else {\n            _i = i + 1 | 0;\n            continue ;\n          }\n        } else {\n          return true;\n        }\n      }\n    };\n  };\n  if (needs_escape(0)) {\n    return Caml_bytes.bytes_to_string(Bytes.escaped(Caml_bytes.bytes_of_string(s)));\n  } else {\n    return s;\n  }\n}\n\nfunction index_rec(s, lim, _i, c) {\n  while(true) {\n    var i = _i;\n    if (i >= lim) {\n      throw Caml_builtin_exceptions.not_found;\n    } else if (s.charCodeAt(i) === c) {\n      return i;\n    } else {\n      _i = i + 1 | 0;\n      continue ;\n    }\n  };\n}\n\nfunction index(s, c) {\n  return index_rec(s, s.length, 0, c);\n}\n\nfunction index_from(s, i, c) {\n  var l = s.length;\n  if (i < 0 || i > l) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.index_from / Bytes.index_from\"\n        ];\n  } else {\n    return index_rec(s, l, i, c);\n  }\n}\n\nfunction rindex_rec(s, _i, c) {\n  while(true) {\n    var i = _i;\n    if (i < 0) {\n      throw Caml_builtin_exceptions.not_found;\n    } else if (s.charCodeAt(i) === c) {\n      return i;\n    } else {\n      _i = i - 1 | 0;\n      continue ;\n    }\n  };\n}\n\nfunction rindex(s, c) {\n  return rindex_rec(s, s.length - 1 | 0, c);\n}\n\nfunction rindex_from(s, i, c) {\n  if (i < -1 || i >= s.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.rindex_from / Bytes.rindex_from\"\n        ];\n  } else {\n    return rindex_rec(s, i, c);\n  }\n}\n\nfunction contains_from(s, i, c) {\n  var l = s.length;\n  if (i < 0 || i > l) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.contains_from / Bytes.contains_from\"\n        ];\n  } else {\n    try {\n      index_rec(s, l, i, c);\n      return true;\n    }\n    catch (exn){\n      if (exn === Caml_builtin_exceptions.not_found) {\n        return false;\n      } else {\n        throw exn;\n      }\n    }\n  }\n}\n\nfunction contains(s, c) {\n  return contains_from(s, 0, c);\n}\n\nfunction rcontains_from(s, i, c) {\n  if (i < 0 || i >= s.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.rcontains_from / Bytes.rcontains_from\"\n        ];\n  } else {\n    try {\n      rindex_rec(s, i, c);\n      return true;\n    }\n    catch (exn){\n      if (exn === Caml_builtin_exceptions.not_found) {\n        return false;\n      } else {\n        throw exn;\n      }\n    }\n  }\n}\n\nfunction uppercase(s) {\n  return Caml_bytes.bytes_to_string(Bytes.uppercase(Caml_bytes.bytes_of_string(s)));\n}\n\nfunction lowercase(s) {\n  return Caml_bytes.bytes_to_string(Bytes.lowercase(Caml_bytes.bytes_of_string(s)));\n}\n\nfunction capitalize(s) {\n  return Caml_bytes.bytes_to_string(Bytes.capitalize(Caml_bytes.bytes_of_string(s)));\n}\n\nfunction uncapitalize(s) {\n  return Caml_bytes.bytes_to_string(Bytes.uncapitalize(Caml_bytes.bytes_of_string(s)));\n}\n\nvar compare = Caml_primitive.caml_string_compare;\n\nvar fill = Bytes.fill;\n\nvar blit = Bytes.blit_string;\n\nexports.make = make;\nexports.init = init;\nexports.copy = copy;\nexports.sub = sub;\nexports.fill = fill;\nexports.blit = blit;\nexports.concat = concat;\nexports.iter = iter;\nexports.iteri = iteri;\nexports.map = map;\nexports.mapi = mapi;\nexports.trim = trim;\nexports.escaped = escaped;\nexports.index = index;\nexports.rindex = rindex;\nexports.index_from = index_from;\nexports.rindex_from = rindex_from;\nexports.contains = contains;\nexports.contains_from = contains_from;\nexports.rcontains_from = rcontains_from;\nexports.uppercase = uppercase;\nexports.lowercase = lowercase;\nexports.capitalize = capitalize;\nexports.uncapitalize = uncapitalize;\nexports.compare = compare;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/string.js?");

/***/ }),

/***/ "./node_modules/bs-webapi/src/dom/DomTypesRe.js":
/*!******************************************************!*\
  !*** ./node_modules/bs-webapi/src/dom/DomTypesRe.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Caml_builtin_exceptions = __webpack_require__(/*! bs-platform/lib/js/caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction encodeCompareHow(param) {\n  return param;\n}\n\nfunction decodeCompareResult(param) {\n  var switcher = param + 1 | 0;\n  if (switcher > 2 || switcher < 0) {\n    return /* Unknown */3;\n  } else {\n    return switcher;\n  }\n}\n\nfunction decodeCompatMode(param) {\n  switch (param) {\n    case \"BackCompat\" : \n        return /* BackCompat */0;\n    case \"CSS1Compat\" : \n        return /* CSS1Compat */1;\n    default:\n      return /* Unknown */2;\n  }\n}\n\nfunction encodeContentEditable(param) {\n  switch (param) {\n    case 0 : \n        return \"true\";\n    case 1 : \n        return \"false\";\n    case 2 : \n        return \"inherit\";\n    case 3 : \n        return \"\";\n    \n  }\n}\n\nfunction decodeContentEditable(param) {\n  switch (param) {\n    case \"false\" : \n        return /* False */1;\n    case \"inherit\" : \n        return /* Inherit */2;\n    case \"true\" : \n        return /* True */0;\n    default:\n      return /* Unknown */3;\n  }\n}\n\nfunction decodeDeltaMode(param) {\n  if (param > 2 || param < 0) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"invalid deltaMode\"\n        ];\n  } else {\n    return param;\n  }\n}\n\nfunction encodeDesignMode(param) {\n  switch (param) {\n    case 0 : \n        return \"on\";\n    case 1 : \n        return \"off\";\n    case 2 : \n        return \"\";\n    \n  }\n}\n\nfunction decodeDesignMode(param) {\n  switch (param) {\n    case \"off\" : \n        return /* Off */1;\n    case \"on\" : \n        return /* On */0;\n    default:\n      return /* Unknown */2;\n  }\n}\n\nfunction encodeDir(param) {\n  switch (param) {\n    case 0 : \n        return \"ltr\";\n    case 1 : \n        return \"rtl\";\n    case 2 : \n        return \"\";\n    \n  }\n}\n\nfunction decodeDir(param) {\n  switch (param) {\n    case \"ltr\" : \n        return /* Ltr */0;\n    case \"rtl\" : \n        return /* Rtl */1;\n    default:\n      return /* Unknown */2;\n  }\n}\n\nfunction decodeEventPhase(param) {\n  if (param > 3 || param < 0) {\n    return /* Unknown */4;\n  } else {\n    return param;\n  }\n}\n\nfunction encodeFilterAction(param) {\n  return param + 1 | 0;\n}\n\nfunction encodeInsertPosition(param) {\n  switch (param) {\n    case 0 : \n        return \"beforebegin\";\n    case 1 : \n        return \"afterbegin\";\n    case 2 : \n        return \"beforeend\";\n    case 3 : \n        return \"afterend\";\n    \n  }\n}\n\nfunction encodeModifierKey(param) {\n  switch (param) {\n    case 0 : \n        return \"Alt\";\n    case 1 : \n        return \"AltGraph\";\n    case 2 : \n        return \"CapsLock\";\n    case 3 : \n        return \"Control\";\n    case 4 : \n        return \"Fn\";\n    case 5 : \n        return \"FnLock\";\n    case 6 : \n        return \"Hyper\";\n    case 7 : \n        return \"Meta\";\n    case 8 : \n        return \"NumLock\";\n    case 9 : \n        return \"ScrollLock\";\n    case 10 : \n        return \"Shift\";\n    case 11 : \n        return \"Super\";\n    case 12 : \n        return \"Symbol\";\n    case 13 : \n        return \"SymbolLock\";\n    \n  }\n}\n\nfunction decodeNodeType(param) {\n  var switcher = param - 1 | 0;\n  if (switcher > 11 || switcher < 0) {\n    return /* Unknown */12;\n  } else {\n    return switcher;\n  }\n}\n\nfunction decodePointerType(param) {\n  switch (param) {\n    case \"mouse\" : \n        return /* Mouse */0;\n    case \"pen\" : \n        return /* Pen */1;\n    case \"touch|\" : \n        return /* Touch */2;\n    default:\n      return /* Unknown */3;\n  }\n}\n\nfunction decodeReadyState(param) {\n  switch (param) {\n    case \"complete\" : \n        return /* Complete */2;\n    case \"interactive\" : \n        return /* Interactive */1;\n    case \"loading\" : \n        return /* Loading */0;\n    default:\n      return /* Unknown */3;\n  }\n}\n\nfunction decodeShadowRootMode(param) {\n  switch (param) {\n    case \"closed\" : \n        return /* Closed */1;\n    case \"open\" : \n        return /* Open */0;\n    default:\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"Unknown shadowRootMode\"\n          ];\n  }\n}\n\nfunction decodeVisibilityState(param) {\n  switch (param) {\n    case \"hidden\" : \n        return /* Hidden */1;\n    case \"prerender\" : \n        return /* Prerender */2;\n    case \"unloaded\" : \n        return /* Unloaded */3;\n    case \"visible\" : \n        return /* Visible */0;\n    default:\n      return /* Unknown */4;\n  }\n}\n\nfunction many(param) {\n  if (param) {\n    return param[0] | many(param[1]);\n  } else {\n    return 0;\n  }\n}\n\nvar WhatToShow = /* module */[\n  /* _All */-1,\n  /* _Element */1,\n  /* _Attribute */2,\n  /* _Text */4,\n  /* _CDATASection */8,\n  /* _EntityReference */16,\n  /* _Entity */32,\n  /* _ProcessingInstruction */64,\n  /* _Comment */128,\n  /* _Document */256,\n  /* _DocumentType */512,\n  /* _DocumentFragment */1024,\n  /* _Notation */2048,\n  /* many */many\n];\n\nexports.encodeCompareHow = encodeCompareHow;\nexports.decodeCompareResult = decodeCompareResult;\nexports.decodeCompatMode = decodeCompatMode;\nexports.encodeContentEditable = encodeContentEditable;\nexports.decodeContentEditable = decodeContentEditable;\nexports.decodeDeltaMode = decodeDeltaMode;\nexports.encodeDesignMode = encodeDesignMode;\nexports.decodeDesignMode = decodeDesignMode;\nexports.encodeDir = encodeDir;\nexports.decodeDir = decodeDir;\nexports.decodeEventPhase = decodeEventPhase;\nexports.encodeFilterAction = encodeFilterAction;\nexports.encodeInsertPosition = encodeInsertPosition;\nexports.encodeModifierKey = encodeModifierKey;\nexports.decodeNodeType = decodeNodeType;\nexports.decodePointerType = decodePointerType;\nexports.decodeReadyState = decodeReadyState;\nexports.decodeShadowRootMode = decodeShadowRootMode;\nexports.decodeVisibilityState = decodeVisibilityState;\nexports.WhatToShow = WhatToShow;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-webapi/src/dom/DomTypesRe.js?");

/***/ }),

/***/ "./node_modules/bs-webapi/src/dom/events/EventTargetRe.js":
/*!****************************************************************!*\
  !*** ./node_modules/bs-webapi/src/dom/events/EventTargetRe.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n\nfunction Impl(T) {\n  return /* module */[];\n}\n\nexports.Impl = Impl;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-webapi/src/dom/events/EventTargetRe.js?");

/***/ }),

/***/ "./node_modules/bs-webapi/src/dom/nodes/ChildNodeRe.js":
/*!*************************************************************!*\
  !*** ./node_modules/bs-webapi/src/dom/nodes/ChildNodeRe.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n\nfunction Impl(T) {\n  return /* module */[];\n}\n\nexports.Impl = Impl;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-webapi/src/dom/nodes/ChildNodeRe.js?");

/***/ }),

/***/ "./node_modules/bs-webapi/src/dom/nodes/ElementRe.js":
/*!***********************************************************!*\
  !*** ./node_modules/bs-webapi/src/dom/nodes/ElementRe.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Curry = __webpack_require__(/*! bs-platform/lib/js/curry.js */ \"./node_modules/bs-platform/lib/js/curry.js\");\nvar NodeRe = __webpack_require__(/*! ./NodeRe.js */ \"./node_modules/bs-webapi/src/dom/nodes/NodeRe.js\");\nvar DomTypesRe = __webpack_require__(/*! ../DomTypesRe.js */ \"./node_modules/bs-webapi/src/dom/DomTypesRe.js\");\nvar SlotableRe = __webpack_require__(/*! ./SlotableRe.js */ \"./node_modules/bs-webapi/src/dom/nodes/SlotableRe.js\");\nvar Caml_option = __webpack_require__(/*! bs-platform/lib/js/caml_option.js */ \"./node_modules/bs-platform/lib/js/caml_option.js\");\nvar ChildNodeRe = __webpack_require__(/*! ./ChildNodeRe.js */ \"./node_modules/bs-webapi/src/dom/nodes/ChildNodeRe.js\");\nvar ParentNodeRe = __webpack_require__(/*! ./ParentNodeRe.js */ \"./node_modules/bs-webapi/src/dom/nodes/ParentNodeRe.js\");\nvar EventTargetRe = __webpack_require__(/*! ../events/EventTargetRe.js */ \"./node_modules/bs-webapi/src/dom/events/EventTargetRe.js\");\nvar NonDocumentTypeChildNodeRe = __webpack_require__(/*! ./NonDocumentTypeChildNodeRe.js */ \"./node_modules/bs-webapi/src/dom/nodes/NonDocumentTypeChildNodeRe.js\");\n\nfunction ofNode(node) {\n  var match = NodeRe.nodeType(node) === /* Element */0;\n  if (match) {\n    return Caml_option.some(node);\n  }\n  \n}\n\nfunction Impl(T) {\n  var asHtmlElement = (\n    function (element) {\n      // BEWARE: Assumes \"contentEditable\" uniquely identifies an HTMLELement\n      return element.contentEditable !== undefined ?  element : null;\n    }\n  );\n  var asHtmlElement$1 = function (self) {\n    return Caml_option.null_to_opt(Curry._1(asHtmlElement, self));\n  };\n  var insertAdjacentElement = function (position, element, self) {\n    self.insertAdjacentElement(DomTypesRe.encodeInsertPosition(position), element);\n    return /* () */0;\n  };\n  var insertAdjacentHTML = function (position, text, self) {\n    self.insertAdjacentHTML(DomTypesRe.encodeInsertPosition(position), text);\n    return /* () */0;\n  };\n  var insertAdjacentText = function (position, text, self) {\n    self.insertAdjacentText(DomTypesRe.encodeInsertPosition(position), text);\n    return /* () */0;\n  };\n  return /* module */[\n          /* asHtmlElement */asHtmlElement$1,\n          /* ofNode */ofNode,\n          /* insertAdjacentElement */insertAdjacentElement,\n          /* insertAdjacentHTML */insertAdjacentHTML,\n          /* insertAdjacentText */insertAdjacentText\n        ];\n}\n\nvar include = NodeRe.Impl(/* module */[]);\n\nEventTargetRe.Impl(/* module */[]);\n\nParentNodeRe.Impl(/* module */[]);\n\nNonDocumentTypeChildNodeRe.Impl(/* module */[]);\n\nChildNodeRe.Impl(/* module */[]);\n\nSlotableRe.Impl(/* module */[]);\n\nvar asHtmlElement = (\n    function (element) {\n      // BEWARE: Assumes \"contentEditable\" uniquely identifies an HTMLELement\n      return element.contentEditable !== undefined ?  element : null;\n    }\n  );\n\nfunction asHtmlElement$1(self) {\n  return Caml_option.null_to_opt(Curry._1(asHtmlElement, self));\n}\n\nfunction insertAdjacentElement(position, element, self) {\n  self.insertAdjacentElement(DomTypesRe.encodeInsertPosition(position), element);\n  return /* () */0;\n}\n\nfunction insertAdjacentHTML(position, text, self) {\n  self.insertAdjacentHTML(DomTypesRe.encodeInsertPosition(position), text);\n  return /* () */0;\n}\n\nfunction insertAdjacentText(position, text, self) {\n  self.insertAdjacentText(DomTypesRe.encodeInsertPosition(position), text);\n  return /* () */0;\n}\n\nvar nodeType = include[0];\n\nexports.Impl = Impl;\nexports.nodeType = nodeType;\nexports.asHtmlElement = asHtmlElement$1;\nexports.ofNode = ofNode;\nexports.insertAdjacentElement = insertAdjacentElement;\nexports.insertAdjacentHTML = insertAdjacentHTML;\nexports.insertAdjacentText = insertAdjacentText;\n/* include Not a pure module */\n\n\n//# sourceURL=webpack:///./node_modules/bs-webapi/src/dom/nodes/ElementRe.js?");

/***/ }),

/***/ "./node_modules/bs-webapi/src/dom/nodes/NodeRe.js":
/*!********************************************************!*\
  !*** ./node_modules/bs-webapi/src/dom/nodes/NodeRe.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar DomTypesRe = __webpack_require__(/*! ../DomTypesRe.js */ \"./node_modules/bs-webapi/src/dom/DomTypesRe.js\");\nvar EventTargetRe = __webpack_require__(/*! ../events/EventTargetRe.js */ \"./node_modules/bs-webapi/src/dom/events/EventTargetRe.js\");\n\nfunction Impl(T) {\n  var nodeType = function (self) {\n    return DomTypesRe.decodeNodeType(self.nodeType);\n  };\n  return /* module */[/* nodeType */nodeType];\n}\n\nEventTargetRe.Impl(/* module */[]);\n\nfunction nodeType(self) {\n  return DomTypesRe.decodeNodeType(self.nodeType);\n}\n\nexports.Impl = Impl;\nexports.nodeType = nodeType;\n/*  Not a pure module */\n\n\n//# sourceURL=webpack:///./node_modules/bs-webapi/src/dom/nodes/NodeRe.js?");

/***/ }),

/***/ "./node_modules/bs-webapi/src/dom/nodes/NonDocumentTypeChildNodeRe.js":
/*!****************************************************************************!*\
  !*** ./node_modules/bs-webapi/src/dom/nodes/NonDocumentTypeChildNodeRe.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n\nfunction Impl(T) {\n  return /* module */[];\n}\n\nexports.Impl = Impl;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-webapi/src/dom/nodes/NonDocumentTypeChildNodeRe.js?");

/***/ }),

/***/ "./node_modules/bs-webapi/src/dom/nodes/ParentNodeRe.js":
/*!**************************************************************!*\
  !*** ./node_modules/bs-webapi/src/dom/nodes/ParentNodeRe.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n\nfunction Impl(T) {\n  return /* module */[];\n}\n\nexports.Impl = Impl;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-webapi/src/dom/nodes/ParentNodeRe.js?");

/***/ }),

/***/ "./node_modules/bs-webapi/src/dom/nodes/SlotableRe.js":
/*!************************************************************!*\
  !*** ./node_modules/bs-webapi/src/dom/nodes/SlotableRe.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n\nfunction Impl(T) {\n  return /* module */[];\n}\n\nexports.Impl = Impl;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-webapi/src/dom/nodes/SlotableRe.js?");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack:///./node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/re-debouncer/src/Debouncer.bs.js":
/*!*******************************************************!*\
  !*** ./node_modules/re-debouncer/src/Debouncer.bs.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Generated by BUCKLESCRIPT VERSION 5.0.2, PLEASE EDIT WITH CARE\n\n\nvar Curry = __webpack_require__(/*! bs-platform/lib/js/curry.js */ \"./node_modules/bs-platform/lib/js/curry.js\");\nvar Belt_Option = __webpack_require__(/*! bs-platform/lib/js/belt_Option.js */ \"./node_modules/bs-platform/lib/js/belt_Option.js\");\nvar Caml_option = __webpack_require__(/*! bs-platform/lib/js/caml_option.js */ \"./node_modules/bs-platform/lib/js/caml_option.js\");\n\nfunction makeCancelable($staropt$star, fn) {\n  var wait = $staropt$star !== undefined ? $staropt$star : 100;\n  var timerId = /* record */[/* contents */undefined];\n  var lastArg = /* record */[/* contents */undefined];\n  var lastCallTime = /* record */[/* contents */undefined];\n  var shouldInvoke = function (time) {\n    var match = lastCallTime[0];\n    if (match !== undefined) {\n      var timeSinceLastCall = time - match | 0;\n      if (timeSinceLastCall >= wait) {\n        return true;\n      } else {\n        return timeSinceLastCall < 0;\n      }\n    } else {\n      return true;\n    }\n  };\n  var remainingWait = function (time) {\n    var match = lastCallTime[0];\n    if (match !== undefined) {\n      var timeSinceLastCall = time - match | 0;\n      return wait - timeSinceLastCall | 0;\n    } else {\n      return wait;\n    }\n  };\n  var timerExpired = function (param) {\n    var match = timerId[0];\n    if (match !== undefined) {\n      clearTimeout(Caml_option.valFromOption(match));\n    }\n    var time = Date.now() | 0;\n    if (shouldInvoke(time)) {\n      var x = lastArg[0];\n      if (x !== undefined) {\n        lastArg[0] = undefined;\n        timerId[0] = undefined;\n        return Curry._1(fn, Caml_option.valFromOption(x));\n      } else {\n        timerId[0] = undefined;\n        return /* () */0;\n      }\n    } else {\n      timerId[0] = Caml_option.some(setTimeout(timerExpired, remainingWait(time)));\n      return /* () */0;\n    }\n  };\n  var schedule = function (x) {\n    var time = Date.now() | 0;\n    lastArg[0] = Caml_option.some(x);\n    lastCallTime[0] = time;\n    timerId[0] = Caml_option.some(setTimeout(timerExpired, wait));\n    return /* () */0;\n  };\n  var scheduled = function (param) {\n    return Belt_Option.isSome(timerId[0]);\n  };\n  var cancel = function (param) {\n    var match = timerId[0];\n    if (match !== undefined) {\n      clearTimeout(Caml_option.valFromOption(match));\n      timerId[0] = undefined;\n      lastArg[0] = undefined;\n      lastCallTime[0] = undefined;\n      return /* () */0;\n    } else {\n      return /* () */0;\n    }\n  };\n  var now = function (x) {\n    cancel(/* () */0);\n    return Curry._1(fn, x);\n  };\n  return /* record */[\n          /* invoke */now,\n          /* schedule */schedule,\n          /* scheduled */scheduled,\n          /* cancel */cancel\n        ];\n}\n\nfunction make(wait, fn) {\n  return makeCancelable(wait, fn)[/* schedule */1];\n}\n\nexports.make = make;\nexports.makeCancelable = makeCancelable;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/re-debouncer/src/Debouncer.bs.js?");

/***/ }),

/***/ "./src/Hash.bs.js":
/*!************************!*\
  !*** ./src/Hash.bs.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Generated by BUCKLESCRIPT VERSION 5.0.2, PLEASE EDIT WITH CARE\n\n\nvar Caml_array = __webpack_require__(/*! bs-platform/lib/js/caml_array.js */ \"./node_modules/bs-platform/lib/js/caml_array.js\");\nvar Caml_js_exceptions = __webpack_require__(/*! bs-platform/lib/js/caml_js_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_js_exceptions.js\");\nvar SubtleCrypto$QueerLoop = __webpack_require__(/*! ./SubtleCrypto.bs.js */ \"./src/SubtleCrypto.bs.js\");\nvar Caml_builtin_exceptions = __webpack_require__(/*! bs-platform/lib/js/caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction abToStr (buf){\n  return String.fromCharCode.apply(null, new Uint8Array(buf));\n     };\n\nfunction abToHexAndBase64Str (buf){\n     var uint8 = new Uint8Array(buf);\n     var b64 = window.btoa(String.fromCharCode.apply(null, uint8));\n     var hex = Array.prototype.map.call(uint8, x => ('00' + x.toString(16)).slice(-2)).join('');\n     return [hex, b64];\n     };\n\nfunction abToHexStr (buf){\n     return Array.prototype.map.call(new Uint8Array(buf), x => ('00' + x.toString(16)).slice(-2)).join('');\n     };\n\nfunction str2ab (str){\n    var buf = new ArrayBuffer(str.length);\n    var bufView = new Uint8Array(buf);\n    for (var i=0, strLen=str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n      return buf;\n     };\n\nfunction b64ToAB(s) {\n  return str2ab(atob(s));\n}\n\nfunction abToB64(ab) {\n  return btoa(abToStr(ab));\n}\n\nfunction digest(algorithm, input) {\n  return window.crypto.subtle.digest(algorithm, str2ab(input)).then((function (output) {\n                return Promise.resolve(abToStr(output));\n              }));\n}\n\nfunction hexDigest(algorithm, input) {\n  return window.crypto.subtle.digest(algorithm, str2ab(input)).then((function (output) {\n                return Promise.resolve(abToHexStr(output));\n              }));\n}\n\nfunction hexAndBase64Digest(algorithm, input) {\n  return window.crypto.subtle.digest(algorithm, str2ab(input)).then((function (output) {\n                return Promise.resolve(abToHexAndBase64Str(output));\n              }));\n}\n\nfunction hmacSign(data) {\n  return SubtleCrypto$QueerLoop.defaultHmacKey.then((function (key) {\n                  var buf = str2ab(data);\n                  return Promise.all(/* tuple */[\n                              window.crypto.subtle.sign(SubtleCrypto$QueerLoop.defaultHmac, key, buf),\n                              Promise.resolve(buf)\n                            ]);\n                })).then((function (param) {\n                return Promise.resolve(btoa(abToStr(param[0])) + (\"|\" + btoa(abToStr(param[1]))));\n              }));\n}\n\nfunction hmacVerify(input) {\n  return SubtleCrypto$QueerLoop.defaultHmacKey.then((function (key) {\n                  var parts = input.split(\"|\");\n                  if (parts.length !== 2) {\n                    Promise.reject([\n                          Caml_builtin_exceptions.invalid_argument,\n                          input\n                        ]);\n                  }\n                  var exit = 0;\n                  var val;\n                  var val$1;\n                  try {\n                    val = str2ab(atob(Caml_array.caml_array_get(parts, 0)));\n                    val$1 = str2ab(atob(Caml_array.caml_array_get(parts, 1)));\n                    exit = 1;\n                  }\n                  catch (raw_e){\n                    var e = Caml_js_exceptions.internalToOCamlException(raw_e);\n                    console.log(parts);\n                    return Promise.reject(e);\n                  }\n                  if (exit === 1) {\n                    return Promise.all(/* tuple */[\n                                window.crypto.subtle.verify(SubtleCrypto$QueerLoop.defaultHmac, key, val, val$1),\n                                Promise.resolve(abToHexStr(val)),\n                                Promise.resolve(abToStr(val$1))\n                              ]);\n                  }\n                  \n                })).then((function (param) {\n                if (param[0]) {\n                  return Promise.resolve(/* tuple */[\n                              param[1],\n                              param[2]\n                            ]);\n                } else {\n                  return Promise.reject([\n                              Caml_builtin_exceptions.invalid_argument,\n                              input\n                            ]);\n                }\n              }));\n}\n\nexports.abToStr = abToStr;\nexports.abToHexAndBase64Str = abToHexAndBase64Str;\nexports.abToHexStr = abToHexStr;\nexports.str2ab = str2ab;\nexports.b64ToAB = b64ToAB;\nexports.abToB64 = abToB64;\nexports.digest = digest;\nexports.hexDigest = hexDigest;\nexports.hexAndBase64Digest = hexAndBase64Digest;\nexports.hmacSign = hmacSign;\nexports.hmacVerify = hmacVerify;\n/* SubtleCrypto-QueerLoop Not a pure module */\n\n\n//# sourceURL=webpack:///./src/Hash.bs.js?");

/***/ }),

/***/ "./src/Index.bs.js":
/*!*************************!*\
  !*** ./src/Index.bs.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Generated by BUCKLESCRIPT VERSION 5.0.2, PLEASE EDIT WITH CARE\n\n\nvar $$Array = __webpack_require__(/*! bs-platform/lib/js/array.js */ \"./node_modules/bs-platform/lib/js/array.js\");\nvar Curry = __webpack_require__(/*! bs-platform/lib/js/curry.js */ \"./node_modules/bs-platform/lib/js/curry.js\");\nvar Debouncer = __webpack_require__(/*! re-debouncer/src/Debouncer.bs.js */ \"./node_modules/re-debouncer/src/Debouncer.bs.js\");\nvar ElementRe = __webpack_require__(/*! bs-webapi/src/dom/nodes/ElementRe.js */ \"./node_modules/bs-webapi/src/dom/nodes/ElementRe.js\");\nvar Caml_int32 = __webpack_require__(/*! bs-platform/lib/js/caml_int32.js */ \"./node_modules/bs-platform/lib/js/caml_int32.js\");\nvar Pervasives = __webpack_require__(/*! bs-platform/lib/js/pervasives.js */ \"./node_modules/bs-platform/lib/js/pervasives.js\");\nvar Belt_Option = __webpack_require__(/*! bs-platform/lib/js/belt_Option.js */ \"./node_modules/bs-platform/lib/js/belt_Option.js\");\nvar Caml_option = __webpack_require__(/*! bs-platform/lib/js/caml_option.js */ \"./node_modules/bs-platform/lib/js/caml_option.js\");\nvar Belt_SetString = __webpack_require__(/*! bs-platform/lib/js/belt_SetString.js */ \"./node_modules/bs-platform/lib/js/belt_SetString.js\");\nvar Hash$QueerLoop = __webpack_require__(/*! ./Hash.bs.js */ \"./src/Hash.bs.js\");\nvar Util$QueerLoop = __webpack_require__(/*! ./Util.bs.js */ \"./src/Util.bs.js\");\nvar Scanner$QueerLoop = __webpack_require__(/*! ./Scanner.bs.js */ \"./src/Scanner.bs.js\");\nvar QrCodeGen$QueerLoop = __webpack_require__(/*! ./QrCodeGen.bs.js */ \"./src/QrCodeGen.bs.js\");\nvar QueerCode$QueerLoop = __webpack_require__(/*! ./QueerCode.bs.js */ \"./src/QueerCode.bs.js\");\nvar UserMedia$QueerLoop = __webpack_require__(/*! ./UserMedia.bs.js */ \"./src/UserMedia.bs.js\");\n\nvar domain = \"qqq.lu\";\n\nfunction setBackground(selector, bgCss) {\n  return Util$QueerLoop.withQuerySelector(selector, (function (el) {\n                el.style.setProperty(\"background\", bgCss, \"\");\n                return /* () */0;\n              }));\n}\n\nvar codeRegex = new RegExp(\"https:\\\\/\\\\/qqq.lu\\\\/#(.+)\");\n\nvar defaultCode = QrCodeGen$QueerLoop.QrCode[/* _encodeText */0](\"https://qqq.lu\", QrCodeGen$QueerLoop.Ecc[/* low */0]);\n\nvar camerasRef = /* record */[/* contents : array */[]];\n\nvar cameraIndex = /* record */[/* contents */0];\n\nfunction cycleCameras(scanner) {\n  var n = camerasRef[0].length;\n  cameraIndex[0] = Caml_int32.mod_(cameraIndex[0] + 1 | 0, n);\n  return /* () */0;\n}\n\nfunction setSrc (img,src){\n     img.src = src;};\n\nvar previousCodes = /* record */[/* contents */Belt_SetString.empty];\n\nvar currentSignature = /* record */[/* contents */\"\"];\n\nvar canvasesRef = /* record */[/* contents : array */[]];\n\nfunction takeSnapshot(param) {\n  return Util$QueerLoop.withQuerySelectorDom(\"#snapshotCanvas\", (function (snapshotCanvas) {\n                var snapshotCtx = snapshotCanvas.getContext(\"2d\");\n                snapshotCtx.globalAlpha = 0.2;\n                $$Array.mapi((function (i, canvas) {\n                        var h = canvas.height;\n                        (canvas.width - h | 0) / 2 | 0;\n                        snapshotCtx.drawImage(canvas, 0, 0, canvas.width, canvas.height, 0, 0, snapshotCanvas.width, snapshotCanvas.height);\n                        return /* () */0;\n                      }), canvasesRef[0]);\n                return snapshotCanvas.toDataURL(\"image/jpeg\", 0.9);\n              }));\n}\n\nfunction addToPast(dataUrl) {\n  var img = document.createElement(\"img\");\n  setSrc(img, dataUrl);\n  Util$QueerLoop.withQuerySelector(\"#past\", (function (past) {\n          past.appendChild(img);\n          return /* () */0;\n        }));\n  return /* () */0;\n}\n\nfunction setCode(input) {\n  var match = takeSnapshot(/* () */0);\n  if (match !== undefined) {\n    var snapshotUrl = match;\n    var text = \"https://\" + (domain + (\"/#\" + input));\n    Hash$QueerLoop.hexDigest(\"SHA-1\", text).then((function (hash) {\n            setBackground(\"body\", \"#\" + hash.slice(0, 6));\n            var code = Belt_Option.getWithDefault(QrCodeGen$QueerLoop.QrCode[/* encodeText */1](text, QrCodeGen$QueerLoop.Ecc[/* medium */1]), defaultCode);\n            Util$QueerLoop.withQuerySelectorDom(\"#snapshotCanvas\", (function (snapshotCanvas) {\n                    return Util$QueerLoop.withQuerySelector(\"#current\", (function (img) {\n                                  previousCodes[0] = Belt_SetString.add(previousCodes[0], hash);\n                                  var match = currentSignature[0] !== \"\";\n                                  var url = QueerCode$QueerLoop.getSvgDataUri(code, match ? snapshotUrl : undefined);\n                                  setSrc(img, url);\n                                  if (currentSignature[0] !== \"\") {\n                                    addToPast(url);\n                                  }\n                                  currentSignature[0] = hash;\n                                  return /* () */0;\n                                }));\n                  }));\n            return Promise.resolve(/* () */0);\n          }));\n    return /* () */0;\n  } else {\n    return /* () */0;\n  }\n}\n\nfunction getHash(param) {\n  return window.location.hash;\n}\n\nfunction setHash(hash) {\n  window.location.hash = hash;\n  return /* () */0;\n}\n\nfunction onHashChange(param) {\n  var hash = window.location.hash.slice(1);\n  setCode(hash);\n  Util$QueerLoop.withQuerySelector(\"#codeContents\", (function (el) {\n          el.innerText = decodeURIComponent(hash);\n          return /* () */0;\n        }));\n  return /* () */0;\n}\n\nfunction setOpacity(elQuery, opacity) {\n  return Belt_Option.map(Belt_Option.flatMap(Caml_option.nullable_to_opt(document.querySelector(elQuery)), ElementRe.asHtmlElement), (function (body) {\n                body.style.setProperty(\"opacity\", Pervasives.string_of_float(opacity), \"\");\n                return /* () */0;\n              }));\n}\n\nfunction onTick(ts) {\n  var scaled = ts * 0.0005;\n  var codeOpacity = 0.5 + Math.pow(Math.sin(scaled), 2.0) * 0.5;\n  var maybeCanvas = document.querySelector(\"#codeCanvas\");\n  if (!(maybeCanvas == null)) {\n    var ctx = maybeCanvas.getContext(\"2d\");\n    ctx.globalAlpha = codeOpacity;\n  }\n  requestAnimationFrame(onTick);\n  return /* () */0;\n}\n\nfunction _onInput(param) {\n  Util$QueerLoop.withQuerySelector(\"#codeContents\", (function (el) {\n          var text = el.innerText;\n          return setHash(encodeURIComponent(text));\n        }));\n  return /* () */0;\n}\n\nvar onInput = Debouncer.make(200, _onInput);\n\nfunction init(param) {\n  Util$QueerLoop.withQuerySelectorDom(\"#snapshotCanvas\", (function (canvas) {\n          canvas.width = 480;\n          canvas.height = 480;\n          return /* () */0;\n        }));\n  var initialHash = window.location.hash;\n  if (initialHash === \"\") {\n    setHash(new Date().toISOString());\n  } else {\n    onHashChange(/* () */0);\n  }\n  Util$QueerLoop.withQuerySelector(\"#codeContents\", (function (el) {\n          el.addEventListener(\"input\", (function (evt) {\n                  return Curry._1(onInput, /* () */0);\n                }));\n          return /* () */0;\n        }));\n  var response = function (input) {\n    if (input !== \"\") {\n      Hash$QueerLoop.hexDigest(\"SHA-1\", input).then((function (hexHash) {\n              if (hexHash === currentSignature[0] || Belt_SetString.has(previousCodes[0], hexHash)) {\n                setHash(new Date().toISOString());\n              }\n              return Promise.resolve(/* () */0);\n            }));\n      return /* () */0;\n    } else {\n      return 0;\n    }\n  };\n  UserMedia$QueerLoop.getCameras(/* () */0).then((function (cameras) {\n              camerasRef[0] = cameras;\n              return Promise.all($$Array.map((function (camera) {\n                                var videoEl = document.createElement(\"video\");\n                                Util$QueerLoop.withQuerySelector(\"body\", (function (body) {\n                                        body.appendChild(videoEl);\n                                        return /* () */0;\n                                      }));\n                                return Scanner$QueerLoop.scanUsingDeviceId(videoEl, camera.deviceId, response);\n                              }), cameras));\n            })).then((function (canvases) {\n            canvasesRef[0] = canvases;\n            return Promise.resolve(/* () */0);\n          })).catch((function (err) {\n          console.error(\"getCameras failed\", err);\n          return Promise.resolve(/* () */0);\n        }));\n  return /* () */0;\n}\n\nwindow.addEventListener(\"load\", (function (param) {\n        return init(/* () */0);\n      }));\n\nwindow.addEventListener(\"hashchange\", (function (param) {\n        return onHashChange(/* () */0);\n      }));\n\nvar defaultHash = \"fff\";\n\nexports.domain = domain;\nexports.setBackground = setBackground;\nexports.codeRegex = codeRegex;\nexports.defaultCode = defaultCode;\nexports.defaultHash = defaultHash;\nexports.camerasRef = camerasRef;\nexports.cameraIndex = cameraIndex;\nexports.cycleCameras = cycleCameras;\nexports.setSrc = setSrc;\nexports.previousCodes = previousCodes;\nexports.currentSignature = currentSignature;\nexports.canvasesRef = canvasesRef;\nexports.takeSnapshot = takeSnapshot;\nexports.addToPast = addToPast;\nexports.setCode = setCode;\nexports.getHash = getHash;\nexports.setHash = setHash;\nexports.onHashChange = onHashChange;\nexports.setOpacity = setOpacity;\nexports.onTick = onTick;\nexports._onInput = _onInput;\nexports.onInput = onInput;\nexports.init = init;\n/* codeRegex Not a pure module */\n\n\n//# sourceURL=webpack:///./src/Index.bs.js?");

/***/ }),

/***/ "./src/QrCodeGen.bs.js":
/*!*****************************!*\
  !*** ./src/QrCodeGen.bs.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Generated by BUCKLESCRIPT VERSION 5.0.2, PLEASE EDIT WITH CARE\n\n\nvar Qrcodegen = __webpack_require__(/*! ./qrcodegen */ \"./src/qrcodegen.js\");\nvar Caml_option = __webpack_require__(/*! bs-platform/lib/js/caml_option.js */ \"./node_modules/bs-platform/lib/js/caml_option.js\");\n\nvar low = Qrcodegen.Ecc.LOW;\n\nvar medium = Qrcodegen.Ecc.MEDIUM;\n\nvar quartile = Qrcodegen.Ecc.QUARTILE;\n\nvar high = Qrcodegen.Ecc.HIGH;\n\nvar Ecc = /* module */[\n  /* low */low,\n  /* medium */medium,\n  /* quartile */quartile,\n  /* high */high\n];\n\nfunction _encodeText(prim, prim$1) {\n  return Qrcodegen.encodeText(prim, prim$1);\n}\n\nfunction encodeText(text, ecc) {\n  var exit = 0;\n  var code;\n  try {\n    code = Qrcodegen.encodeText(text, ecc);\n    exit = 1;\n  }\n  catch (exn){\n    return undefined;\n  }\n  if (exit === 1) {\n    return Caml_option.some(code);\n  }\n  \n}\n\nvar QrCode = /* module */[\n  /* _encodeText */_encodeText,\n  /* encodeText */encodeText\n];\n\nfunction _setSvg (t,el){\n     el.src = \"data:image/svg+xml;utf8,\" + encodeURIComponent(t);\n     };\n\nfunction setSvg(t, el) {\n  return _setSvg(t.toSvgString(4), el);\n}\n\nexports.Ecc = Ecc;\nexports.QrCode = QrCode;\nexports._setSvg = _setSvg;\nexports.setSvg = setSvg;\n/* low Not a pure module */\n\n\n//# sourceURL=webpack:///./src/QrCodeGen.bs.js?");

/***/ }),

/***/ "./src/QueerCode.bs.js":
/*!*****************************!*\
  !*** ./src/QueerCode.bs.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Generated by BUCKLESCRIPT VERSION 5.0.2, PLEASE EDIT WITH CARE\n\n\nvar List = __webpack_require__(/*! bs-platform/lib/js/list.js */ \"./node_modules/bs-platform/lib/js/list.js\");\nvar $$Array = __webpack_require__(/*! bs-platform/lib/js/array.js */ \"./node_modules/bs-platform/lib/js/array.js\");\nvar $$String = __webpack_require__(/*! bs-platform/lib/js/string.js */ \"./node_modules/bs-platform/lib/js/string.js\");\nvar Caml_array = __webpack_require__(/*! bs-platform/lib/js/caml_array.js */ \"./node_modules/bs-platform/lib/js/caml_array.js\");\nvar Caml_int32 = __webpack_require__(/*! bs-platform/lib/js/caml_int32.js */ \"./node_modules/bs-platform/lib/js/caml_int32.js\");\n\nfunction boolToHex(b) {\n  if (b) {\n    return \"f\";\n  } else {\n    return \"0\";\n  }\n}\n\nfunction moduleArrayToRgbHex(modules) {\n  var width = modules.length;\n  var height = Caml_array.caml_array_get(modules, 0).length;\n  var rgbModules = $$Array.make_matrix(width, height, \"#fff\");\n  var rgbWidth = width / 3 | 0;\n  for(var i = 0 ,i_finish = rgbWidth - 1 | 0; i <= i_finish; ++i){\n    for(var j = 0 ,j_finish = height - 1 | 0; j <= j_finish; ++j){\n      var x = Caml_int32.imul(i, 3);\n      var r = Caml_array.caml_array_get(Caml_array.caml_array_get(modules, j), x);\n      var match = (x + 1 | 0) < rgbWidth;\n      var g = match ? Caml_array.caml_array_get(Caml_array.caml_array_get(modules, j), x + 1 | 0) : false;\n      var match$1 = (x + 2 | 0) < rgbWidth;\n      var b = match$1 ? Caml_array.caml_array_get(Caml_array.caml_array_get(modules, j), x + 2 | 0) : false;\n      Caml_array.caml_array_set(Caml_array.caml_array_get(rgbModules, i), j, \"#\" + $$String.concat(\"\", List.map(boolToHex, /* :: */[\n                    r,\n                    /* :: */[\n                      g,\n                      /* :: */[\n                        b,\n                        /* [] */0\n                      ]\n                    ]\n                  ])));\n    }\n  }\n  return rgbModules;\n}\n\nfunction rgbModulesToSvgString (modules){\n\n     var border = 4;\n     var width = modules[0].length;\n     var height = modules.length;\n\n\t\t if (border < 0)\n\t\t throw \"Border must be non-negative\";\n\t\t var rects = [];\n\t\t for (var y = 0; y < height; y++) {\n\t\t for (var x = 0; x < width; x++) {\n     rects.push(\n       '<rect width=\"1\" height=\"1\" fill=\"' + modules[x][y] +\n       '\" x=\"' + (x + border) + '\" y=\"' + (y + border) +  '\" />');\n\n\t\t }\n\t\t }\n\t\t return '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n' +\n\t\t '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n' +\n\t\t '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 ' +\n\t\t (width + border * 2) + ' ' + (height + border * 2) + '\" stroke=\"none\">\\n' +\n\t\t '<rect width=\"100%\" height=\"100%\" fill=\"#FFFFFF\"/>\\n' +\n     rects.join(\" \") +\n\t\t '</svg>\\n';\n     };\n\nfunction getPathString(code) {\n  var size = code.size;\n  var modules = code.getModules();\n  var parts = /* array */[];\n  for(var y = 0 ,y_finish = size - 1 | 0; y <= y_finish; ++y){\n    for(var x = 0 ,x_finish = size - 1 | 0; x <= x_finish; ++x){\n      if (Caml_array.caml_array_get(Caml_array.caml_array_get(modules, y), x)) {\n        parts.push(\"M\" + (String(x + 4 | 0) + (\",\" + (String(y + 4 | 0) + \"h1v1h-1z\"))));\n      }\n      \n    }\n  }\n  return parts.join(\" \");\n}\n\nfunction modulesToSvgString (modules,foreignCodes){\n     var border = 4;\n     var size = modules.length;\n\n\t\t if (border < 0)\n\t\t throw \"Border must be non-negative\";\n\t\t var parts = [];\n     var n = ~~((size + (border * 2)) / 2);\n     var meta = foreignCodes.map((code, i) => {\n       var x = i % n;\n       var y = ~~(i / n);\n       return '<image href=\"' + code + '\" x=\"' + x * 2 + '\" y=\"' + y * 2 + '\" width=\"2\" height=\"2\" />'\n     });\n\t\t for (var y = 0; y < size; y++) {\n\t\t for (var x = 0; x < size; x++) {\n\n     if (modules[y][x]) {\n\t\t parts.push(\"M\" + (x + border) + \",\" + (y + border) + \"h1v1h-1z\");\n     }\n\t\t }\n\t\t }\n\t\t return '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n' +\n\t\t '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n' +\n\t\t '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 ' +\n\t\t (size + border * 2) + ' ' + (size + border * 2) + '\" stroke=\"none\">' +\n     '<symbol id=\"code\"><path d=\"' + parts.join(\" \") + '\" /></symbol>' +\n     '<defs>' +\n     '<mask id=\"mask\">' +\n     '<rect width=\"100%\" height=\"100%\" fill=\"#FFFFFF\" />\\n' +\n     '<use href=\"#code\" fill=\"#000000\" />' +\n     '</mask>' +\n     '<linearGradient id=\"rainbow\">' +\n     '<stop offset=\"0.000%\" stop-color=\"#ffb5b5\" />' +\n     '<stop offset=\"14.286%\" stop-color=\"#fcdc85\" />' +\n     '<stop offset=\"28.571%\" stop-color=\"#caf79c\" />' +\n     '<stop offset=\"42.857%\" stop-color=\"#a8fdbf\" />' +\n     '<stop offset=\"57.143%\" stop-color=\"#70feff\" />' +\n     '<stop offset=\"71.429%\" stop-color=\"#a8bffd\" />' +\n     '<stop offset=\"85.714%\" stop-color=\"#ca9cf7\" />' +\n     '<stop offset=\"100.000%\" stop-color=\"#fc85dc\" />' +\n     '</linearGradient></defs>' +\n     '<rect width=\"100%\" height=\"100%\" fill=\"url(#rainbow)\" mask=\"url(#mask)\" />\\n' +\n     '<use href=\"#code\" fill=\"#000000\" />' +\n     '<g>' + meta.join(\"\") + '</g>' +\n\t\t '</svg>';\n     };\n\nfunction _getSvgDataUri(code, foreignCodes) {\n  var moduleArray = code.getModules();\n  var svg = modulesToSvgString(moduleArray, foreignCodes);\n  return \"data:image/svg+xml;utf8,\" + encodeURIComponent(svg);\n}\n\nfunction getSvgDataUri(code, maybePastUrl) {\n  var pathString = getPathString(code);\n  var sizeWithBorder = code.size + 8 | 0;\n  var pastData = maybePastUrl !== undefined ? \"<image href=\\\"\" + (String(maybePastUrl) + (\"\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"\" + (String(sizeWithBorder) + (\"\\\" height=\\\"\" + (String(sizeWithBorder) + \"\\\" />\"))))) : \"\";\n  var svg = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 \" + (String(sizeWithBorder) + (\" \" + (String(sizeWithBorder) + (\"\\\" stroke=\\\"none\\\">\\n     <defs>\\n     <linearGradient id=\\\"rainbow\\\">\\n     <stop offset=\\\"0.000%\\\" stop-color=\\\"#ffb5b5\\\" />\\n     <stop offset=\\\"14.286%\\\" stop-color=\\\"#fcdc85\\\" />\\n     <stop offset=\\\"28.571%\\\" stop-color=\\\"#caf79c\\\" />\\n     <stop offset=\\\"42.857%\\\" stop-color=\\\"#a8fdbf\\\" />\\n     <stop offset=\\\"57.143%\\\" stop-color=\\\"#70feff\\\" />\\n     <stop offset=\\\"71.429%\\\" stop-color=\\\"#a8bffd\\\" />\\n     <stop offset=\\\"85.714%\\\" stop-color=\\\"#ca9cf7\\\" />\\n     <stop offset=\\\"100.000%\\\" stop-color=\\\"#fc85dc\\\" />\\n     </linearGradient></defs>\\n     \" + (String(pastData) + (\"\\n     <rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"url(#rainbow)\\\" fill-opacity=\\\"0.5\\\" />\\n     <path d=\\\"\" + (String(pathString) + \"\\\" fill=\\\"black\\\" />\\n     </svg>\")))))));\n  return \"data:image/svg+xml;utf8,\" + encodeURIComponent(svg);\n}\n\nfunction drawCanvas(canvas, code) {\n  var size = code.size;\n  var width = size + 4 | 0;\n  if (canvas.width !== width) {\n    canvas.width = width;\n    canvas.height = width;\n  }\n  var ctx = canvas.getContext(\"2d\");\n  ctx.globalCompositeOperation = \"difference\";\n  ctx.fillStyle = \"#FFFFFF\";\n  for(var y = -2 ,y_finish = size + 2 | 0; y <= y_finish; ++y){\n    for(var x = -2 ,x_finish = size + 2 | 0; x <= x_finish; ++x){\n      if (code.getModule(x, y)) {\n        ctx.fillRect(x + 2 | 0, y + 2 | 0, 1, 1);\n      }\n      \n    }\n  }\n  return /* () */0;\n}\n\nexports.boolToHex = boolToHex;\nexports.moduleArrayToRgbHex = moduleArrayToRgbHex;\nexports.rgbModulesToSvgString = rgbModulesToSvgString;\nexports.getPathString = getPathString;\nexports.modulesToSvgString = modulesToSvgString;\nexports._getSvgDataUri = _getSvgDataUri;\nexports.getSvgDataUri = getSvgDataUri;\nexports.drawCanvas = drawCanvas;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./src/QueerCode.bs.js?");

/***/ }),

/***/ "./src/Scanner.bs.js":
/*!***************************!*\
  !*** ./src/Scanner.bs.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Generated by BUCKLESCRIPT VERSION 5.0.2, PLEASE EDIT WITH CARE\n\n\nvar Curry = __webpack_require__(/*! bs-platform/lib/js/curry.js */ \"./node_modules/bs-platform/lib/js/curry.js\");\nvar Caml_option = __webpack_require__(/*! bs-platform/lib/js/caml_option.js */ \"./node_modules/bs-platform/lib/js/caml_option.js\");\nvar Util$QueerLoop = __webpack_require__(/*! ./Util.bs.js */ \"./src/Util.bs.js\");\nvar UserMedia$QueerLoop = __webpack_require__(/*! ./UserMedia.bs.js */ \"./src/UserMedia.bs.js\");\n\nfunction scanUsingDeviceId(videoEl, deviceId, scanCallback) {\n  return UserMedia$QueerLoop.initStreamByDeviceId(videoEl, deviceId).then((function (video) {\n                var canvas = document.createElement(\"canvas\");\n                Util$QueerLoop.withQuerySelector(\"body\", (function (body) {\n                        body.appendChild(canvas);\n                        return /* () */0;\n                      }));\n                var worker = new Worker(\"worker.js\");\n                var msgBackHandler = function (e) {\n                  var maybeCode = e.data;\n                  if (maybeCode !== undefined) {\n                    Curry._1(scanCallback, Caml_option.valFromOption(maybeCode).data);\n                  }\n                  return /* () */0;\n                };\n                worker.onmessage = msgBackHandler;\n                var frameCount = /* record */[/* contents */0];\n                var onTick = function (param) {\n                  if (video.readyState === 4) {\n                    var width = video.videoWidth;\n                    var height = video.videoHeight;\n                    if (canvas.width !== width) {\n                      canvas.width = width;\n                      canvas.height = height;\n                    }\n                    if (frameCount[0] % 5 === 0) {\n                      var ctx = canvas.getContext(\"2d\");\n                      ctx.drawImage(video, 0, 0);\n                      var imageData = ctx.getImageData(0, 0, width, height);\n                      worker.postMessage(/* tuple */[\n                            imageData.data,\n                            width,\n                            height\n                          ]);\n                    }\n                    \n                  }\n                  frameCount[0] = frameCount[0] + 1 | 0;\n                  requestAnimationFrame(onTick);\n                  return /* () */0;\n                };\n                requestAnimationFrame(onTick);\n                return Promise.resolve(canvas);\n              }));\n}\n\nexports.scanUsingDeviceId = scanUsingDeviceId;\n/* Util-QueerLoop Not a pure module */\n\n\n//# sourceURL=webpack:///./src/Scanner.bs.js?");

/***/ }),

/***/ "./src/SubtleCrypto.bs.js":
/*!********************************!*\
  !*** ./src/SubtleCrypto.bs.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Generated by BUCKLESCRIPT VERSION 5.0.2, PLEASE EDIT WITH CARE\n\n\n\nvar defaultHmac = {\n  name: \"HMAC\",\n  hash: \"SHA-256\"\n};\n\nfunction exportKeyJWK(key) {\n  return window.crypto.subtle.exportKey(\"jwk\", key).then((function (t) {\n                return Promise.resolve(JSON.stringify(t));\n              }));\n}\n\nfunction importKeyJWK(json) {\n  var parsed = JSON.parse(json);\n  return window.crypto.subtle.importKey(\"jwk\", parsed, defaultHmac, true, /* array */[\n              \"sign\",\n              \"verify\"\n            ]);\n}\n\nfunction generateHmac(param) {\n  return window.crypto.subtle.generateKey(defaultHmac, true, /* array */[\n              \"sign\",\n              \"verify\"\n            ]);\n}\n\nvar defaultHmacKeyJSON = \"{\\\"alg\\\":\\\"HS256\\\",\\\"ext\\\":true,\\\"k\\\":\\\"A-cS_q7opsDHm5vusaNtzSbaJcI153rl-2VVPXyliu2G5nKicquFkf-rcFNCyQkC50CDjzFdDhIh9WzzWSXXHw\\\",\\\"key_ops\\\":[\\\"sign\\\",\\\"verify\\\"],\\\"kty\\\":\\\"oct\\\"}\";\n\nvar defaultHmacKey = importKeyJWK(defaultHmacKeyJSON);\n\nexports.defaultHmac = defaultHmac;\nexports.exportKeyJWK = exportKeyJWK;\nexports.importKeyJWK = importKeyJWK;\nexports.generateHmac = generateHmac;\nexports.defaultHmacKeyJSON = defaultHmacKeyJSON;\nexports.defaultHmacKey = defaultHmacKey;\n/* defaultHmacKey Not a pure module */\n\n\n//# sourceURL=webpack:///./src/SubtleCrypto.bs.js?");

/***/ }),

/***/ "./src/UserMedia.bs.js":
/*!*****************************!*\
  !*** ./src/UserMedia.bs.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Generated by BUCKLESCRIPT VERSION 5.0.2, PLEASE EDIT WITH CARE\n\n\nvar ElementRe = __webpack_require__(/*! bs-webapi/src/dom/nodes/ElementRe.js */ \"./node_modules/bs-webapi/src/dom/nodes/ElementRe.js\");\nvar Belt_Array = __webpack_require__(/*! bs-platform/lib/js/belt_Array.js */ \"./node_modules/bs-platform/lib/js/belt_Array.js\");\nvar Caml_option = __webpack_require__(/*! bs-platform/lib/js/caml_option.js */ \"./node_modules/bs-platform/lib/js/caml_option.js\");\n\nfunction getCameras(param) {\n  return window.navigator.mediaDevices.enumerateDevices().then((function (devices) {\n                return Promise.resolve(Belt_Array.keep(devices, (function (x) {\n                                  return x.kind === \"videoinput\";\n                                })));\n              }));\n}\n\nfunction initStreamByDeviceId(videoEl, deviceId) {\n  return window.navigator.mediaDevices.getUserMedia({\n                video: {\n                  deviceId: deviceId\n                }\n              }).then((function (stream) {\n                videoEl.srcObject = stream;\n                var match = ElementRe.asHtmlElement(videoEl);\n                if (match !== undefined) {\n                  Caml_option.valFromOption(match).setAttribute(\"playsinline\", \"true\");\n                }\n                videoEl.play();\n                return Promise.resolve(videoEl);\n              }));\n}\n\nexports.getCameras = getCameras;\nexports.initStreamByDeviceId = initStreamByDeviceId;\n/* ElementRe Not a pure module */\n\n\n//# sourceURL=webpack:///./src/UserMedia.bs.js?");

/***/ }),

/***/ "./src/Util.bs.js":
/*!************************!*\
  !*** ./src/Util.bs.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Generated by BUCKLESCRIPT VERSION 5.0.2, PLEASE EDIT WITH CARE\n\n\nvar $$Array = __webpack_require__(/*! bs-platform/lib/js/array.js */ \"./node_modules/bs-platform/lib/js/array.js\");\nvar ElementRe = __webpack_require__(/*! bs-webapi/src/dom/nodes/ElementRe.js */ \"./node_modules/bs-webapi/src/dom/nodes/ElementRe.js\");\nvar Belt_Option = __webpack_require__(/*! bs-platform/lib/js/belt_Option.js */ \"./node_modules/bs-platform/lib/js/belt_Option.js\");\nvar Caml_option = __webpack_require__(/*! bs-platform/lib/js/caml_option.js */ \"./node_modules/bs-platform/lib/js/caml_option.js\");\n\nfunction withQuerySelectorDom(query, f) {\n  return Belt_Option.map(Caml_option.nullable_to_opt(document.querySelector(query)), f);\n}\n\nfunction withQuerySelector(query, f) {\n  return Belt_Option.map(Belt_Option.flatMap(Caml_option.nullable_to_opt(document.querySelector(query)), ElementRe.asHtmlElement), f);\n}\n\nfunction withQuerySelectorAll(query, f) {\n  return $$Array.map(f, Array.prototype.slice.call(document.querySelectorAll(query)));\n}\n\nexports.withQuerySelectorDom = withQuerySelectorDom;\nexports.withQuerySelector = withQuerySelector;\nexports.withQuerySelectorAll = withQuerySelectorAll;\n/* ElementRe Not a pure module */\n\n\n//# sourceURL=webpack:///./src/Util.bs.js?");

/***/ }),

/***/ "./src/qrcodegen.js":
/*!**************************!*\
  !*** ./src/qrcodegen.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n(function (root, factory) {\n    if (true) {\n        // AMD. Register as an anonymous module.\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {}\n}(typeof self !== 'undefined' ? self : this, function (exports) {\n\n\n/*\n * QR Code generator library (JavaScript)\n * \n * Copyright (c) Project Nayuki. (MIT License)\n * https://www.nayuki.io/page/qr-code-generator-library\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n * - The above copyright notice and this permission notice shall be included in\n *   all copies or substantial portions of the Software.\n * - The Software is provided \"as is\", without warranty of any kind, express or\n *   implied, including but not limited to the warranties of merchantability,\n *   fitness for a particular purpose and noninfringement. In no event shall the\n *   authors or copyright holders be liable for any claim, damages or other\n *   liability, whether in an action of contract, tort or otherwise, arising from,\n *   out of or in connection with the Software or the use or other dealings in the\n *   Software.\n */\n\n\n\n/* \n * Module \"qrcodegen\", public members:\n * - Class QrCode:\n *   - Function encodeText(str text, QrCode.Ecc ecl) -> QrCode\n *   - Function encodeBinary(list<byte> data, QrCode.Ecc ecl) -> QrCode\n *   - Function encodeSegments(list<QrSegment> segs, QrCode.Ecc ecl,\n *         int minVersion=1, int maxVersion=40, mask=-1, boostEcl=true) -> QrCode\n *   - Constants int MIN_VERSION, MAX_VERSION\n *   - Constructor QrCode(int version, QrCode.Ecc ecl, list<byte> dataCodewords, int mask)\n *   - Fields int version, size, mask\n *   - Field QrCode.Ecc errorCorrectionLevel\n *   - Method getModule(int x, int y) -> bool\n *   - Method drawCanvas(int scale, int border, HTMLCanvasElement canvas) -> void\n *   - Method toSvgString(int border) -> str\n *   - Enum Ecc:\n *     - Constants LOW, MEDIUM, QUARTILE, HIGH\n *     - Field int ordinal\n * - Class QrSegment:\n *   - Function makeBytes(list<byte> data) -> QrSegment\n *   - Function makeNumeric(str data) -> QrSegment\n *   - Function makeAlphanumeric(str data) -> QrSegment\n *   - Function makeSegments(str text) -> list<QrSegment>\n *   - Function makeEci(int assignVal) -> QrSegment\n *   - Constructor QrSegment(QrSegment.Mode mode, int numChars, list<int> bitData)\n *   - Field QrSegment.Mode mode\n *   - Field int numChars\n *   - Method getData() -> list<int>\n *   - Constants RegExp NUMERIC_REGEX, ALPHANUMERIC_REGEX\n *   - Enum Mode:\n *     - Constants NUMERIC, ALPHANUMERIC, BYTE, KANJI, ECI\n */\nvar qrcodegen = new function() {\n\t\n\t/*---- QR Code symbol class ----*/\n\t\n\t/* \n\t * A class that represents a QR Code symbol, which is a type of two-dimension barcode.\n\t * Invented by Denso Wave and described in the ISO/IEC 18004 standard.\n\t * Instances of this class represent an immutable square grid of black and white cells.\n\t * The class provides static factory functions to create a QR Code from text or binary data.\n\t * The class covers the QR Code Model 2 specification, supporting all versions (sizes)\n\t * from 1 to 40, all 4 error correction levels, and 4 character encoding modes.\n\t * \n\t * Ways to create a QR Code object:\n\t * - High level: Take the payload data and call QrCode.encodeText() or QrCode.encodeBinary().\n\t * - Mid level: Custom-make the list of segments and call QrCode.encodeSegments().\n\t * - Low level: Custom-make the array of data codeword bytes (including\n\t *   segment headers and final padding, excluding error correction codewords),\n\t *   supply the appropriate version number, and call the QrCode() constructor.\n\t * (Note that all ways require supplying the desired error correction level.)\n\t * \n\t * This constructor creates a new QR Code with the given version number,\n\t * error correction level, data codeword bytes, and mask number.\n\t * This is a low-level API that most users should not use directly.\n\t * A mid-level API is the encodeSegments() function.\n\t */\n\tthis.QrCode = function(version, errCorLvl, dataCodewords, mask) {\n\t\t\n\t\t/*---- Constructor (low level) ----*/\n\t\t\n\t\t// Check scalar arguments\n\t\tif (version < MIN_VERSION || version > MAX_VERSION)\n\t\t\tthrow \"Version value out of range\";\n\t\tif (mask < -1 || mask > 7)\n\t\t\tthrow \"Mask value out of range\";\n\t\tif (!(errCorLvl instanceof Ecc))\n\t\t\tthrow \"QrCode.Ecc expected\";\n\t\tvar size = version * 4 + 17;\n\t\t\n\t\t// Initialize both grids to be size*size arrays of Boolean false\n\t\tvar row = [];\n\t\tfor (var i = 0; i < size; i++)\n\t\t\trow.push(false);\n\t\tvar modules    = [];  // Initially all white\n\t\tvar isFunction = [];\n\t\tfor (var i = 0; i < size; i++) {\n\t\t\tmodules   .push(row.slice());\n\t\t\tisFunction.push(row.slice());\n\t\t}\n\t\t\n\t\t// Compute ECC, draw modules\n\t\tdrawFunctionPatterns();\n\t\tvar allCodewords = addEccAndInterleave(dataCodewords);\n\t\tdrawCodewords(allCodewords);\n\t\t\n\t\t// Do masking\n\t\tif (mask == -1) {  // Automatically choose best mask\n\t\t\tvar minPenalty = Infinity;\n\t\t\tfor (var i = 0; i < 8; i++) {\n\t\t\t\tapplyMask(i);\n\t\t\t\tdrawFormatBits(i);\n\t\t\t\tvar penalty = getPenaltyScore();\n\t\t\t\tif (penalty < minPenalty) {\n\t\t\t\t\tmask = i;\n\t\t\t\t\tminPenalty = penalty;\n\t\t\t\t}\n\t\t\t\tapplyMask(i);  // Undoes the mask due to XOR\n\t\t\t}\n\t\t}\n\t\tif (mask < 0 || mask > 7)\n\t\t\tthrow \"Assertion error\";\n\t\tapplyMask(mask);  // Apply the final choice of mask\n\t\tdrawFormatBits(mask);  // Overwrite old format bits\n\t\t\n\t\tisFunction = null;\n\t\t\n\t\t\n\t\t/*---- Read-only instance properties ----*/\n\t\t\n\t\t// The version number of this QR Code, which is between 1 and 40 (inclusive).\n\t\t// This determines the size of this barcode.\n\t\tObject.defineProperty(this, \"version\", {value:version});\n\t\t\n\t\t// The width and height of this QR Code, measured in modules, between\n\t\t// 21 and 177 (inclusive). This is equal to version * 4 + 17.\n\t\tObject.defineProperty(this, \"size\", {value:size});\n\t\t\n\t\t// The error correction level used in this QR Code.\n\t\tObject.defineProperty(this, \"errorCorrectionLevel\", {value:errCorLvl});\n\t\t\n\t\t// The index of the mask pattern used in this QR Code, which is between 0 and 7 (inclusive).\n\t\t// Even if a QR Code is created with automatic masking requested (mask = -1),\n\t\t// the resulting object still has a mask value between 0 and 7.\n\t\tObject.defineProperty(this, \"mask\", {value:mask});\n\t\t\n\t\t\n\t\t/*---- Accessor methods ----*/\n\t\t\n\t\t// Returns the color of the module (pixel) at the given coordinates, which is false\n\t\t// for white or true for black. The top left corner has the coordinates (x=0, y=0).\n\t\t// If the given coordinates are out of bounds, then false (white) is returned.\n\t\tthis.getModule = function(x, y) {\n\t\t\treturn 0 <= x && x < size && 0 <= y && y < size && modules[y][x];\n\t\t};\n\n    this.getModules = function () { return modules; }\n\t\t\n\t\t\n\t\t/*---- Public instance methods ----*/\n\t\t\n\t\t// Draws this QR Code, with the given module scale and border modules, onto the given HTML\n\t\t// canvas element. The canvas's width and height is resized to (this.size + border * 2) * scale.\n\t\t// The drawn image is be purely black and white, and fully opaque.\n\t\t// The scale must be a positive integer and the border must be a non-negative integer.\n\t\tthis.drawCanvas = function(scale, border, canvas) {\n\t\t\tif (scale <= 0 || border < 0)\n\t\t\t\tthrow \"Value out of range\";\n\t\t\tvar width = (size + border * 2) * scale;\n      if (canvas.width != width) {\n          canvas.width = width;\n          canvas.height = width;\n      };\n      var ctx = canvas.getContext(\"2d\");\n\t\t\tfor (var y = -border; y < size + border; y++) {\n\t\t\t\tfor (var x = -border; x < size + border; x++) {\n\t\t\t\t\tctx.fillStyle = this.getModule(x, y) ? \"#000000\" : \"#FFFFFF\";\n\t\t\t\t\tctx.fillRect((x + border) * scale, (y + border) * scale, scale, scale);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\t// Returns a string of SVG code for an image depicting this QR Code, with the given number\n\t\t// of border modules. The string always uses Unix newlines (\\n), regardless of the platform.\n\t\tthis.toSvgString = function(border) {\n\t\t\tif (border < 0)\n\t\t\t\tthrow \"Border must be non-negative\";\n\t\t\tvar parts = [];\n\t\t\tfor (var y = 0; y < size; y++) {\n\t\t\t\tfor (var x = 0; x < size; x++) {\n\t\t\t\t\tif (this.getModule(x, y))\n\t\t\t\t\t\tparts.push(\"M\" + (x + border) + \",\" + (y + border) + \"h1v1h-1z\");\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n' +\n\t\t\t\t'<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n' +\n\t\t\t\t'<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 ' +\n\t\t\t\t\t(size + border * 2) + ' ' + (size + border * 2) + '\" stroke=\"none\">\\n' +\n\t\t\t\t'\\t<rect width=\"100%\" height=\"100%\" fill=\"#FFFFFF\"/>\\n' +\n\t\t\t\t'\\t<path d=\"' + parts.join(\" \") + '\" fill=\"#000000\"/>\\n' +\n\t\t\t\t'</svg>\\n';\n\t\t};\n\t\t\n\t\t\n\t\t/*---- Private helper methods for constructor: Drawing function modules ----*/\n\t\t\n\t\t// Reads this object's version field, and draws and marks all function modules.\n\t\tfunction drawFunctionPatterns() {\n\t\t\t// Draw horizontal and vertical timing patterns\n\t\t\tfor (var i = 0; i < size; i++) {\n\t\t\t\tsetFunctionModule(6, i, i % 2 == 0);\n\t\t\t\tsetFunctionModule(i, 6, i % 2 == 0);\n\t\t\t}\n\t\t\t\n\t\t\t// Draw 3 finder patterns (all corners except bottom right; overwrites some timing modules)\n\t\t\tdrawFinderPattern(3, 3);\n\t\t\tdrawFinderPattern(size - 4, 3);\n\t\t\tdrawFinderPattern(3, size - 4);\n\t\t\t\n\t\t\t// Draw numerous alignment patterns\n\t\t\tvar alignPatPos = getAlignmentPatternPositions();\n\t\t\tvar numAlign = alignPatPos.length;\n\t\t\tfor (var i = 0; i < numAlign; i++) {\n\t\t\t\tfor (var j = 0; j < numAlign; j++) {\n\t\t\t\t\t// Don't draw on the three finder corners\n\t\t\t\t\tif (!(i == 0 && j == 0 || i == 0 && j == numAlign - 1 || i == numAlign - 1 && j == 0))\n\t\t\t\t\t\tdrawAlignmentPattern(alignPatPos[i], alignPatPos[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Draw configuration data\n\t\t\tdrawFormatBits(0);  // Dummy mask value; overwritten later in the constructor\n\t\t\tdrawVersion();\n\t\t}\n\t\t\n\t\t\n\t\t// Draws two copies of the format bits (with its own error correction code)\n\t\t// based on the given mask and this object's error correction level field.\n\t\tfunction drawFormatBits(mask) {\n\t\t\t// Calculate error correction code and pack bits\n\t\t\tvar data = errCorLvl.formatBits << 3 | mask;  // errCorrLvl is uint2, mask is uint3\n\t\t\tvar rem = data;\n\t\t\tfor (var i = 0; i < 10; i++)\n\t\t\t\trem = (rem << 1) ^ ((rem >>> 9) * 0x537);\n\t\t\tvar bits = (data << 10 | rem) ^ 0x5412;  // uint15\n\t\t\tif (bits >>> 15 != 0)\n\t\t\t\tthrow \"Assertion error\";\n\t\t\t\n\t\t\t// Draw first copy\n\t\t\tfor (var i = 0; i <= 5; i++)\n\t\t\t\tsetFunctionModule(8, i, getBit(bits, i));\n\t\t\tsetFunctionModule(8, 7, getBit(bits, 6));\n\t\t\tsetFunctionModule(8, 8, getBit(bits, 7));\n\t\t\tsetFunctionModule(7, 8, getBit(bits, 8));\n\t\t\tfor (var i = 9; i < 15; i++)\n\t\t\t\tsetFunctionModule(14 - i, 8, getBit(bits, i));\n\t\t\t\n\t\t\t// Draw second copy\n\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\tsetFunctionModule(size - 1 - i, 8, getBit(bits, i));\n\t\t\tfor (var i = 8; i < 15; i++)\n\t\t\t\tsetFunctionModule(8, size - 15 + i, getBit(bits, i));\n\t\t\tsetFunctionModule(8, size - 8, true);  // Always black\n\t\t}\n\t\t\n\t\t\n\t\t// Draws two copies of the version bits (with its own error correction code),\n\t\t// based on this object's version field, iff 7 <= version <= 40.\n\t\tfunction drawVersion() {\n\t\t\tif (version < 7)\n\t\t\t\treturn;\n\t\t\t\n\t\t\t// Calculate error correction code and pack bits\n\t\t\tvar rem = version;  // version is uint6, in the range [7, 40]\n\t\t\tfor (var i = 0; i < 12; i++)\n\t\t\t\trem = (rem << 1) ^ ((rem >>> 11) * 0x1F25);\n\t\t\tvar bits = version << 12 | rem;  // uint18\n\t\t\tif (bits >>> 18 != 0)\n\t\t\t\tthrow \"Assertion error\";\n\t\t\t\n\t\t\t// Draw two copies\n\t\t\tfor (var i = 0; i < 18; i++) {\n\t\t\t\tvar bit = getBit(bits, i);\n\t\t\t\tvar a = size - 11 + i % 3;\n\t\t\t\tvar b = Math.floor(i / 3);\n\t\t\t\tsetFunctionModule(a, b, bit);\n\t\t\t\tsetFunctionModule(b, a, bit);\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t// Draws a 9*9 finder pattern including the border separator,\n\t\t// with the center module at (x, y). Modules can be out of bounds.\n\t\tfunction drawFinderPattern(x, y) {\n\t\t\tfor (var dy = -4; dy <= 4; dy++) {\n\t\t\t\tfor (var dx = -4; dx <= 4; dx++) {\n\t\t\t\t\tvar dist = Math.max(Math.abs(dx), Math.abs(dy));  // Chebyshev/infinity norm\n\t\t\t\t\tvar xx = x + dx, yy = y + dy;\n\t\t\t\t\tif (0 <= xx && xx < size && 0 <= yy && yy < size)\n\t\t\t\t\t\tsetFunctionModule(xx, yy, dist != 2 && dist != 4);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t// Draws a 5*5 alignment pattern, with the center module\n\t\t// at (x, y). All modules must be in bounds.\n\t\tfunction drawAlignmentPattern(x, y) {\n\t\t\tfor (var dy = -2; dy <= 2; dy++) {\n\t\t\t\tfor (var dx = -2; dx <= 2; dx++)\n\t\t\t\t\tsetFunctionModule(x + dx, y + dy, Math.max(Math.abs(dx), Math.abs(dy)) != 1);\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t// Sets the color of a module and marks it as a function module.\n\t\t// Only used by the constructor. Coordinates must be in bounds.\n\t\tfunction setFunctionModule(x, y, isBlack) {\n\t\t\tmodules[y][x] = isBlack;\n\t\t\tisFunction[y][x] = true;\n\t\t}\n\t\t\n\t\t\n\t\t/*---- Private helper methods for constructor: Codewords and masking ----*/\n\t\t\n\t\t// Returns a new byte string representing the given data with the appropriate error correction\n\t\t// codewords appended to it, based on this object's version and error correction level.\n\t\tfunction addEccAndInterleave(data) {\n\t\t\tif (data.length != QrCode.getNumDataCodewords(version, errCorLvl))\n\t\t\t\tthrow \"Invalid argument\";\n\t\t\t\n\t\t\t// Calculate parameter numbers\n\t\t\tvar numBlocks = QrCode.NUM_ERROR_CORRECTION_BLOCKS[errCorLvl.ordinal][version];\n\t\t\tvar blockEccLen = QrCode.ECC_CODEWORDS_PER_BLOCK  [errCorLvl.ordinal][version];\n\t\t\tvar rawCodewords = Math.floor(QrCode.getNumRawDataModules(version) / 8);\n\t\t\tvar numShortBlocks = numBlocks - rawCodewords % numBlocks;\n\t\t\tvar shortBlockLen = Math.floor(rawCodewords / numBlocks);\n\t\t\t\n\t\t\t// Split data into blocks and append ECC to each block\n\t\t\tvar blocks = [];\n\t\t\tvar rs = new ReedSolomonGenerator(blockEccLen);\n\t\t\tfor (var i = 0, k = 0; i < numBlocks; i++) {\n\t\t\t\tvar dat = data.slice(k, k + shortBlockLen - blockEccLen + (i < numShortBlocks ? 0 : 1));\n\t\t\t\tk += dat.length;\n\t\t\t\tvar ecc = rs.getRemainder(dat);\n\t\t\t\tif (i < numShortBlocks)\n\t\t\t\t\tdat.push(0);\n\t\t\t\tblocks.push(dat.concat(ecc));\n\t\t\t}\n\t\t\t\n\t\t\t// Interleave (not concatenate) the bytes from every block into a single sequence\n\t\t\tvar result = [];\n\t\t\tfor (var i = 0; i < blocks[0].length; i++) {\n\t\t\t\tfor (var j = 0; j < blocks.length; j++) {\n\t\t\t\t\t// Skip the padding byte in short blocks\n\t\t\t\t\tif (i != shortBlockLen - blockEccLen || j >= numShortBlocks)\n\t\t\t\t\t\tresult.push(blocks[j][i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (result.length != rawCodewords)\n\t\t\t\tthrow \"Assertion error\";\n\t\t\treturn result;\n\t\t}\n\t\t\n\t\t\n\t\t// Draws the given sequence of 8-bit codewords (data and error correction) onto the entire\n\t\t// data area of this QR Code. Function modules need to be marked off before this is called.\n\t\tfunction drawCodewords(data) {\n\t\t\tif (data.length != Math.floor(QrCode.getNumRawDataModules(version) / 8))\n\t\t\t\tthrow \"Invalid argument\";\n\t\t\tvar i = 0;  // Bit index into the data\n\t\t\t// Do the funny zigzag scan\n\t\t\tfor (var right = size - 1; right >= 1; right -= 2) {  // Index of right column in each column pair\n\t\t\t\tif (right == 6)\n\t\t\t\t\tright = 5;\n\t\t\t\tfor (var vert = 0; vert < size; vert++) {  // Vertical counter\n\t\t\t\t\tfor (var j = 0; j < 2; j++) {\n\t\t\t\t\t\tvar x = right - j;  // Actual x coordinate\n\t\t\t\t\t\tvar upward = ((right + 1) & 2) == 0;\n\t\t\t\t\t\tvar y = upward ? size - 1 - vert : vert;  // Actual y coordinate\n\t\t\t\t\t\tif (!isFunction[y][x] && i < data.length * 8) {\n\t\t\t\t\t\t\tmodules[y][x] = getBit(data[i >>> 3], 7 - (i & 7));\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// If this QR Code has any remainder bits (0 to 7), they were assigned as\n\t\t\t\t\t\t// 0/false/white by the constructor and are left unchanged by this method\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (i != data.length * 8)\n\t\t\t\tthrow \"Assertion error\";\n\t\t}\n\t\t\n\t\t\n\t\t// XORs the codeword modules in this QR Code with the given mask pattern.\n\t\t// The function modules must be marked and the codeword bits must be drawn\n\t\t// before masking. Due to the arithmetic of XOR, calling applyMask() with\n\t\t// the same mask value a second time will undo the mask. A final well-formed\n\t\t// QR Code needs exactly one (not zero, two, etc.) mask applied.\n\t\tfunction applyMask(mask) {\n\t\t\tif (mask < 0 || mask > 7)\n\t\t\t\tthrow \"Mask value out of range\";\n\t\t\tfor (var y = 0; y < size; y++) {\n\t\t\t\tfor (var x = 0; x < size; x++) {\n\t\t\t\t\tvar invert;\n\t\t\t\t\tswitch (mask) {\n\t\t\t\t\t\tcase 0:  invert = (x + y) % 2 == 0;                                  break;\n\t\t\t\t\t\tcase 1:  invert = y % 2 == 0;                                        break;\n\t\t\t\t\t\tcase 2:  invert = x % 3 == 0;                                        break;\n\t\t\t\t\t\tcase 3:  invert = (x + y) % 3 == 0;                                  break;\n\t\t\t\t\t\tcase 4:  invert = (Math.floor(x / 3) + Math.floor(y / 2)) % 2 == 0;  break;\n\t\t\t\t\t\tcase 5:  invert = x * y % 2 + x * y % 3 == 0;                        break;\n\t\t\t\t\t\tcase 6:  invert = (x * y % 2 + x * y % 3) % 2 == 0;                  break;\n\t\t\t\t\t\tcase 7:  invert = ((x + y) % 2 + x * y % 3) % 2 == 0;                break;\n\t\t\t\t\t\tdefault:  throw \"Assertion error\";\n\t\t\t\t\t}\n\t\t\t\t\tif (!isFunction[y][x] && invert)\n\t\t\t\t\t\tmodules[y][x] = !modules[y][x];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t// Calculates and returns the penalty score based on state of this QR Code's current modules.\n\t\t// This is used by the automatic mask choice algorithm to find the mask pattern that yields the lowest score.\n\t\tfunction getPenaltyScore() {\n\t\t\tvar result = 0;\n\t\t\t\n\t\t\t// Adjacent modules in row having same color, and finder-like patterns\n\t\t\tfor (var y = 0; y < size; y++) {\n\t\t\t\tvar runHistory = [0,0,0,0,0,0,0];\n\t\t\t\tvar color = false;\n\t\t\t\tvar runX = 0;\n\t\t\t\tfor (var x = 0; x < size; x++) {\n\t\t\t\t\tif (modules[y][x] == color) {\n\t\t\t\t\t\trunX++;\n\t\t\t\t\t\tif (runX == 5)\n\t\t\t\t\t\t\tresult += QrCode.PENALTY_N1;\n\t\t\t\t\t\telse if (runX > 5)\n\t\t\t\t\t\t\tresult++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tQrCode.addRunToHistory(runX, runHistory);\n\t\t\t\t\t\tif (!color && QrCode.hasFinderLikePattern(runHistory))\n\t\t\t\t\t\t\tresult += QrCode.PENALTY_N3;\n\t\t\t\t\t\tcolor = modules[y][x];\n\t\t\t\t\t\trunX = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tQrCode.addRunToHistory(runX, runHistory);\n\t\t\t\tif (color)\n\t\t\t\t\tQrCode.addRunToHistory(0, runHistory);  // Dummy run of white\n\t\t\t\tif (QrCode.hasFinderLikePattern(runHistory))\n\t\t\t\t\tresult += QrCode.PENALTY_N3;\n\t\t\t}\n\t\t\t// Adjacent modules in column having same color, and finder-like patterns\n\t\t\tfor (var x = 0; x < size; x++) {\n\t\t\t\tvar runHistory = [0,0,0,0,0,0,0];\n\t\t\t\tvar color = false;\n\t\t\t\tvar runY = 0;\n\t\t\t\tfor (var y = 0; y < size; y++) {\n\t\t\t\t\tif (modules[y][x] == color) {\n\t\t\t\t\t\trunY++;\n\t\t\t\t\t\tif (runY == 5)\n\t\t\t\t\t\t\tresult += QrCode.PENALTY_N1;\n\t\t\t\t\t\telse if (runY > 5)\n\t\t\t\t\t\t\tresult++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tQrCode.addRunToHistory(runY, runHistory);\n\t\t\t\t\t\tif (!color && QrCode.hasFinderLikePattern(runHistory))\n\t\t\t\t\t\t\tresult += QrCode.PENALTY_N3;\n\t\t\t\t\t\tcolor = modules[y][x];\n\t\t\t\t\t\trunY = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tQrCode.addRunToHistory(runY, runHistory);\n\t\t\t\tif (color)\n\t\t\t\t\tQrCode.addRunToHistory(0, runHistory);  // Dummy run of white\n\t\t\t\tif (QrCode.hasFinderLikePattern(runHistory))\n\t\t\t\t\tresult += QrCode.PENALTY_N3;\n\t\t\t}\n\t\t\t\n\t\t\t// 2*2 blocks of modules having same color\n\t\t\tfor (var y = 0; y < size - 1; y++) {\n\t\t\t\tfor (var x = 0; x < size - 1; x++) {\n\t\t\t\t\tvar   color = modules[y][x];\n\t\t\t\t\tif (  color == modules[y][x + 1] &&\n\t\t\t\t\t      color == modules[y + 1][x] &&\n\t\t\t\t\t      color == modules[y + 1][x + 1])\n\t\t\t\t\t\tresult += QrCode.PENALTY_N2;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Balance of black and white modules\n\t\t\tvar black = 0;\n\t\t\tmodules.forEach(function(row) {\n\t\t\t\trow.forEach(function(color) {\n\t\t\t\t\tif (color)\n\t\t\t\t\t\tblack++;\n\t\t\t\t});\n\t\t\t});\n\t\t\tvar total = size * size;  // Note that size is odd, so black/total != 1/2\n\t\t\t// Compute the smallest integer k >= 0 such that (45-5k)% <= black/total <= (55+5k)%\n\t\t\tvar k = Math.ceil(Math.abs(black * 20 - total * 10) / total) - 1;\n\t\t\tresult += k * QrCode.PENALTY_N4;\n\t\t\treturn result;\n\t\t}\n\t\t\n\t\t\n\t\t// Returns an ascending list of positions of alignment patterns for this version number.\n\t\t// Each position is in the range [0,177), and are used on both the x and y axes.\n\t\t// This could be implemented as lookup table of 40 variable-length lists of integers.\n\t\tfunction getAlignmentPatternPositions() {\n\t\t\tif (version == 1)\n\t\t\t\treturn [];\n\t\t\telse {\n\t\t\t\tvar numAlign = Math.floor(version / 7) + 2;\n\t\t\t\tvar step = (version == 32) ? 26 :\n\t\t\t\t\tMath.ceil((size - 13) / (numAlign*2 - 2)) * 2;\n\t\t\t\tvar result = [6];\n\t\t\t\tfor (var pos = size - 7; result.length < numAlign; pos -= step)\n\t\t\t\t\tresult.splice(1, 0, pos);\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t// Returns true iff the i'th bit of x is set to 1.\n\t\tfunction getBit(x, i) {\n\t\t\treturn ((x >>> i) & 1) != 0;\n\t\t}\n\t};\n\t\n\t\n\t/*---- Static factory functions (high level) for QrCode ----*/\n\t\n\t/* \n\t * Returns a QR Code representing the given Unicode text string at the given error correction level.\n\t * As a conservative upper bound, this function is guaranteed to succeed for strings that have 738 or fewer\n\t * Unicode code points (not UTF-16 code units) if the low error correction level is used. The smallest possible\n\t * QR Code version is automatically chosen for the output. The ECC level of the result may be higher than the\n\t * ecl argument if it can be done without increasing the version.\n\t */\n\tthis.QrCode.encodeText = function(text, ecl) {\n\t\tvar segs = qrcodegen.QrSegment.makeSegments(text);\n\t\treturn this.encodeSegments(segs, ecl);\n\t};\n\t\n\t\n\t/* \n\t * Returns a QR Code representing the given binary data at the given error correction level.\n\t * This function always encodes using the binary segment mode, not any text mode. The maximum number of\n\t * bytes allowed is 2953. The smallest possible QR Code version is automatically chosen for the output.\n\t * The ECC level of the result may be higher than the ecl argument if it can be done without increasing the version.\n\t */\n\tthis.QrCode.encodeBinary = function(data, ecl) {\n\t\tvar seg = qrcodegen.QrSegment.makeBytes(data);\n\t\treturn this.encodeSegments([seg], ecl);\n\t};\n\t\n\t\n\t/*---- Static factory functions (mid level) for QrCode ----*/\n\t\n\t/* \n\t * Returns a QR Code representing the given segments with the given encoding parameters.\n\t * The smallest possible QR Code version within the given range is automatically\n\t * chosen for the output. Iff boostEcl is true, then the ECC level of the result\n\t * may be higher than the ecl argument if it can be done without increasing the\n\t * version. The mask number is either between 0 to 7 (inclusive) to force that\n\t * mask, or -1 to automatically choose an appropriate mask (which may be slow).\n\t * This function allows the user to create a custom sequence of segments that switches\n\t * between modes (such as alphanumeric and byte) to encode text in less space.\n\t * This is a mid-level API; the high-level API is encodeText() and encodeBinary().\n\t */\n\tthis.QrCode.encodeSegments = function(segs, ecl, minVersion, maxVersion, mask, boostEcl) {\n\t\tif (minVersion == undefined) minVersion = MIN_VERSION;\n\t\tif (maxVersion == undefined) maxVersion = MAX_VERSION;\n\t\tif (mask == undefined) mask = -1;\n\t\tif (boostEcl == undefined) boostEcl = true;\n\t\tif (!(MIN_VERSION <= minVersion && minVersion <= maxVersion && maxVersion <= MAX_VERSION) || mask < -1 || mask > 7)\n\t\t\tthrow \"Invalid value\";\n\t\t\n\t\t// Find the minimal version number to use\n\t\tvar version, dataUsedBits;\n\t\tfor (version = minVersion; ; version++) {\n\t\t\tvar dataCapacityBits = QrCode.getNumDataCodewords(version, ecl) * 8;  // Number of data bits available\n\t\t\tdataUsedBits = qrcodegen.QrSegment.getTotalBits(segs, version);\n\t\t\tif (dataUsedBits <= dataCapacityBits)\n\t\t\t\tbreak;  // This version number is found to be suitable\n\t\t\tif (version >= maxVersion)  // All versions in the range could not fit the given data\n\t\t\t\tthrow \"Data too long\";\n\t\t}\n\t\t\n\t\t// Increase the error correction level while the data still fits in the current version number\n\t\t[this.Ecc.MEDIUM, this.Ecc.QUARTILE, this.Ecc.HIGH].forEach(function(newEcl) {  // From low to high\n\t\t\tif (boostEcl && dataUsedBits <= QrCode.getNumDataCodewords(version, newEcl) * 8)\n\t\t\t\tecl = newEcl;\n\t\t});\n\t\t\n\t\t// Concatenate all segments to create the data bit string\n\t\tvar bb = new BitBuffer();\n\t\tsegs.forEach(function(seg) {\n\t\t\tbb.appendBits(seg.mode.modeBits, 4);\n\t\t\tbb.appendBits(seg.numChars, seg.mode.numCharCountBits(version));\n\t\t\tseg.getData().forEach(function(bit) {\n\t\t\t\tbb.push(bit);\n\t\t\t});\n\t\t});\n\t\tif (bb.length != dataUsedBits)\n\t\t\tthrow \"Assertion error\";\n\t\t\n\t\t// Add terminator and pad up to a byte if applicable\n\t\tvar dataCapacityBits = QrCode.getNumDataCodewords(version, ecl) * 8;\n\t\tif (bb.length > dataCapacityBits)\n\t\t\tthrow \"Assertion error\";\n\t\tbb.appendBits(0, Math.min(4, dataCapacityBits - bb.length));\n\t\tbb.appendBits(0, (8 - bb.length % 8) % 8);\n\t\tif (bb.length % 8 != 0)\n\t\t\tthrow \"Assertion error\";\n\t\t\n\t\t// Pad with alternating bytes until data capacity is reached\n\t\tfor (var padByte = 0xEC; bb.length < dataCapacityBits; padByte ^= 0xEC ^ 0x11)\n\t\t\tbb.appendBits(padByte, 8);\n\t\t\n\t\t// Pack bits into bytes in big endian\n\t\tvar dataCodewords = [];\n\t\twhile (dataCodewords.length * 8 < bb.length)\n\t\t\tdataCodewords.push(0);\n\t\tbb.forEach(function(bit, i) {\n\t\t\tdataCodewords[i >>> 3] |= bit << (7 - (i & 7));\n\t\t});\n\t\t\n\t\t// Create the QR Code object\n\t\treturn new this(version, ecl, dataCodewords, mask);\n\t};\n\t\n\t\n\t/*---- Private static helper functions for QrCode ----*/\n\t\n\tvar QrCode = {};  // Private object to assign properties to. Not the same object as 'this.QrCode'.\n\t\n\t\n\t// Returns the number of data bits that can be stored in a QR Code of the given version number, after\n\t// all function modules are excluded. This includes remainder bits, so it might not be a multiple of 8.\n\t// The result is in the range [208, 29648]. This could be implemented as a 40-entry lookup table.\n\tQrCode.getNumRawDataModules = function(ver) {\n\t\tif (ver < MIN_VERSION || ver > MAX_VERSION)\n\t\t\tthrow \"Version number out of range\";\n\t\tvar result = (16 * ver + 128) * ver + 64;\n\t\tif (ver >= 2) {\n\t\t\tvar numAlign = Math.floor(ver / 7) + 2;\n\t\t\tresult -= (25 * numAlign - 10) * numAlign - 55;\n\t\t\tif (ver >= 7)\n\t\t\t\tresult -= 36;\n\t\t}\n\t\treturn result;\n\t};\n\t\n\t\n\t// Returns the number of 8-bit data (i.e. not error correction) codewords contained in any\n\t// QR Code of the given version number and error correction level, with remainder bits discarded.\n\t// This stateless pure function could be implemented as a (40*4)-cell lookup table.\n\tQrCode.getNumDataCodewords = function(ver, ecl) {\n\t\treturn Math.floor(QrCode.getNumRawDataModules(ver) / 8) -\n\t\t\tQrCode.ECC_CODEWORDS_PER_BLOCK    [ecl.ordinal][ver] *\n\t\t\tQrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n\t};\n\t\n\t\n\t// Inserts the given value to the front of the given array, which shifts over the\n\t// existing values and deletes the last value. A helper function for getPenaltyScore().\n\tQrCode.addRunToHistory = function(run, history) {\n\t\thistory.pop();\n\t\thistory.unshift(run);\n\t};\n\t\n\t\n\t// Tests whether the given run history has the pattern of ratio 1:1:3:1:1 in the middle, and\n\t// surrounded by at least 4 on either or both ends. A helper function for getPenaltyScore().\n\t// Must only be called immediately after a run of white modules has ended.\n\tQrCode.hasFinderLikePattern = function(runHistory) {\n\t\tvar n = runHistory[1];\n\t\treturn n > 0 && runHistory[2] == n && runHistory[4] == n && runHistory[5] == n\n\t\t\t&& runHistory[3] == n * 3 && Math.max(runHistory[0], runHistory[6]) >= n * 4;\n\t};\n\t\n\t\n\t/*---- Constants and tables for QrCode ----*/\n\t\n\tvar MIN_VERSION =  1;  // The minimum version number supported in the QR Code Model 2 standard\n\tvar MAX_VERSION = 40;  // The maximum version number supported in the QR Code Model 2 standard\n\tObject.defineProperty(this.QrCode, \"MIN_VERSION\", {value:MIN_VERSION});\n\tObject.defineProperty(this.QrCode, \"MAX_VERSION\", {value:MAX_VERSION});\n\t\n\t// For use in getPenaltyScore(), when evaluating which mask is best.\n\tQrCode.PENALTY_N1 =  3;\n\tQrCode.PENALTY_N2 =  3;\n\tQrCode.PENALTY_N3 = 40;\n\tQrCode.PENALTY_N4 = 10;\n\t\n\tQrCode.ECC_CODEWORDS_PER_BLOCK = [\n\t\t// Version: (note that index 0 is for padding, and is set to an illegal value)\n\t\t//  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40    Error correction level\n\t\t[null,  7, 10, 15, 20, 26, 18, 20, 24, 30, 18, 20, 24, 26, 30, 22, 24, 28, 30, 28, 28, 28, 28, 30, 30, 26, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],  // Low\n\t\t[null, 10, 16, 26, 18, 24, 16, 18, 22, 22, 26, 30, 22, 22, 24, 24, 28, 28, 26, 26, 26, 26, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28],  // Medium\n\t\t[null, 13, 22, 18, 26, 18, 24, 18, 22, 20, 24, 28, 26, 24, 20, 30, 24, 28, 28, 26, 30, 28, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],  // Quartile\n\t\t[null, 17, 28, 22, 16, 22, 28, 26, 26, 24, 28, 24, 28, 22, 24, 24, 30, 28, 28, 26, 28, 30, 24, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],  // High\n\t];\n\t\n\tQrCode.NUM_ERROR_CORRECTION_BLOCKS = [\n\t\t// Version: (note that index 0 is for padding, and is set to an illegal value)\n\t\t//  0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40    Error correction level\n\t\t[null, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4,  4,  4,  4,  4,  6,  6,  6,  6,  7,  8,  8,  9,  9, 10, 12, 12, 12, 13, 14, 15, 16, 17, 18, 19, 19, 20, 21, 22, 24, 25],  // Low\n\t\t[null, 1, 1, 1, 2, 2, 4, 4, 4, 5, 5,  5,  8,  9,  9, 10, 10, 11, 13, 14, 16, 17, 17, 18, 20, 21, 23, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 43, 45, 47, 49],  // Medium\n\t\t[null, 1, 1, 2, 2, 4, 4, 6, 6, 8, 8,  8, 10, 12, 16, 12, 17, 16, 18, 21, 20, 23, 23, 25, 27, 29, 34, 34, 35, 38, 40, 43, 45, 48, 51, 53, 56, 59, 62, 65, 68],  // Quartile\n\t\t[null, 1, 1, 2, 4, 4, 4, 5, 6, 8, 8, 11, 11, 16, 16, 18, 16, 19, 21, 25, 25, 25, 34, 30, 32, 35, 37, 40, 42, 45, 48, 51, 54, 57, 60, 63, 66, 70, 74, 77, 81],  // High\n\t];\n\t\n\t\n\t/*---- Public helper enumeration ----*/\n\t\n\t/* \n\t * The error correction level in a QR Code symbol. Immutable.\n\t */\n\tthis.QrCode.Ecc = {\n\t\tLOW     : new Ecc(0, 1),  // The QR Code can tolerate about  7% erroneous codewords\n\t\tMEDIUM  : new Ecc(1, 0),  // The QR Code can tolerate about 15% erroneous codewords\n\t\tQUARTILE: new Ecc(2, 3),  // The QR Code can tolerate about 25% erroneous codewords\n\t\tHIGH    : new Ecc(3, 2),  // The QR Code can tolerate about 30% erroneous codewords\n\t};\n\t\n\t\n\t// Private constructor.\n\tfunction Ecc(ord, fb) {\n\t\t// (Public) In the range 0 to 3 (unsigned 2-bit integer)\n\t\tObject.defineProperty(this, \"ordinal\", {value:ord});\n\t\t\n\t\t// (Package-private) In the range 0 to 3 (unsigned 2-bit integer)\n\t\tObject.defineProperty(this, \"formatBits\", {value:fb});\n\t}\n\t\n\t\n\t\n\t/*---- Data segment class ----*/\n\t\n\t/* \n\t * A segment of character/binary/control data in a QR Code symbol.\n\t * Instances of this class are immutable.\n\t * The mid-level way to create a segment is to take the payload data\n\t * and call a static factory function such as QrSegment.makeNumeric().\n\t * The low-level way to create a segment is to custom-make the bit buffer\n\t * and call the QrSegment() constructor with appropriate values.\n\t * This segment class imposes no length restrictions, but QR Codes have restrictions.\n\t * Even in the most favorable conditions, a QR Code can only hold 7089 characters of data.\n\t * Any segment longer than this is meaningless for the purpose of generating QR Codes.\n\t * This constructor creates a QR Code segment with the given attributes and data.\n\t * The character count (numChars) must agree with the mode and the bit buffer length,\n\t * but the constraint isn't checked. The given bit buffer is cloned and stored.\n\t */\n\tthis.QrSegment = function(mode, numChars, bitData) {\n\t\t/*---- Constructor (low level) ----*/\n\t\tif (numChars < 0 || !(mode instanceof Mode))\n\t\t\tthrow \"Invalid argument\";\n\t\t\n\t\t// The data bits of this segment. Accessed through getData().\n\t\tbitData = bitData.slice();  // Make defensive copy\n\t\t\n\t\t// The mode indicator of this segment.\n\t\tObject.defineProperty(this, \"mode\", {value:mode});\n\t\t\n\t\t// The length of this segment's unencoded data. Measured in characters for\n\t\t// numeric/alphanumeric/kanji mode, bytes for byte mode, and 0 for ECI mode.\n\t\t// Always zero or positive. Not the same as the data's bit length.\n\t\tObject.defineProperty(this, \"numChars\", {value:numChars});\n\t\t\n\t\t// Returns a new copy of the data bits of this segment.\n\t\tthis.getData = function() {\n\t\t\treturn bitData.slice();  // Make defensive copy\n\t\t};\n\t};\n\t\n\t\n\t/*---- Static factory functions (mid level) for QrSegment ----*/\n\t\n\t/* \n\t * Returns a segment representing the given binary data encoded in\n\t * byte mode. All input byte arrays are acceptable. Any text string\n\t * can be converted to UTF-8 bytes and encoded as a byte mode segment.\n\t */\n\tthis.QrSegment.makeBytes = function(data) {\n\t\tvar bb = new BitBuffer();\n\t\tdata.forEach(function(b) {\n\t\t\tbb.appendBits(b, 8);\n\t\t});\n\t\treturn new this(this.Mode.BYTE, data.length, bb);\n\t};\n\t\n\t\n\t/* \n\t * Returns a segment representing the given string of decimal digits encoded in numeric mode.\n\t */\n\tthis.QrSegment.makeNumeric = function(digits) {\n\t\tif (!this.NUMERIC_REGEX.test(digits))\n\t\t\tthrow \"String contains non-numeric characters\";\n\t\tvar bb = new BitBuffer();\n\t\tfor (var i = 0; i < digits.length; ) {  // Consume up to 3 digits per iteration\n\t\t\tvar n = Math.min(digits.length - i, 3);\n\t\t\tbb.appendBits(parseInt(digits.substring(i, i + n), 10), n * 3 + 1);\n\t\t\ti += n;\n\t\t}\n\t\treturn new this(this.Mode.NUMERIC, digits.length, bb);\n\t};\n\t\n\t\n\t/* \n\t * Returns a segment representing the given text string encoded in alphanumeric mode.\n\t * The characters allowed are: 0 to 9, A to Z (uppercase only), space,\n\t * dollar, percent, asterisk, plus, hyphen, period, slash, colon.\n\t */\n\tthis.QrSegment.makeAlphanumeric = function(text) {\n\t\tif (!this.ALPHANUMERIC_REGEX.test(text))\n\t\t\tthrow \"String contains unencodable characters in alphanumeric mode\";\n\t\tvar bb = new BitBuffer();\n\t\tvar i;\n\t\tfor (i = 0; i + 2 <= text.length; i += 2) {  // Process groups of 2\n\t\t\tvar temp = QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)) * 45;\n\t\t\ttemp += QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i + 1));\n\t\t\tbb.appendBits(temp, 11);\n\t\t}\n\t\tif (i < text.length)  // 1 character remaining\n\t\t\tbb.appendBits(QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)), 6);\n\t\treturn new this(this.Mode.ALPHANUMERIC, text.length, bb);\n\t};\n\t\n\t\n\t/* \n\t * Returns a new mutable list of zero or more segments to represent the given Unicode text string.\n\t * The result may use various segment modes and switch modes to optimize the length of the bit stream.\n\t */\n\tthis.QrSegment.makeSegments = function(text) {\n\t\t// Select the most efficient segment encoding automatically\n\t\tif (text == \"\")\n\t\t\treturn [];\n\t\telse if (this.NUMERIC_REGEX.test(text))\n\t\t\treturn [this.makeNumeric(text)];\n\t\telse if (this.ALPHANUMERIC_REGEX.test(text))\n\t\t\treturn [this.makeAlphanumeric(text)];\n\t\telse\n\t\t\treturn [this.makeBytes(toUtf8ByteArray(text))];\n\t};\n\t\n\t\n\t/* \n\t * Returns a segment representing an Extended Channel Interpretation\n\t * (ECI) designator with the given assignment value.\n\t */\n\tthis.QrSegment.makeEci = function(assignVal) {\n\t\tvar bb = new BitBuffer();\n\t\tif (assignVal < 0)\n\t\t\tthrow \"ECI assignment value out of range\";\n\t\telse if (assignVal < (1 << 7))\n\t\t\tbb.appendBits(assignVal, 8);\n\t\telse if (assignVal < (1 << 14)) {\n\t\t\tbb.appendBits(2, 2);\n\t\t\tbb.appendBits(assignVal, 14);\n\t\t} else if (assignVal < 1000000) {\n\t\t\tbb.appendBits(6, 3);\n\t\t\tbb.appendBits(assignVal, 21);\n\t\t} else\n\t\t\tthrow \"ECI assignment value out of range\";\n\t\treturn new this(this.Mode.ECI, 0, bb);\n\t};\n\t\n\t\n\t// (Package-private) Calculates and returns the number of bits needed to encode the given segments at the\n\t// given version. The result is infinity if a segment has too many characters to fit its length field.\n\tthis.QrSegment.getTotalBits = function(segs, version) {\n\t\tvar result = 0;\n\t\tfor (var i = 0; i < segs.length; i++) {\n\t\t\tvar seg = segs[i];\n\t\t\tvar ccbits = seg.mode.numCharCountBits(version);\n\t\t\tif (seg.numChars >= (1 << ccbits))\n\t\t\t\treturn Infinity;  // The segment's length doesn't fit the field's bit width\n\t\t\tresult += 4 + ccbits + seg.getData().length;\n\t\t}\n\t\treturn result;\n\t};\n\t\n\t\n\t/*---- Constants for QrSegment ----*/\n\t\n\tvar QrSegment = {};  // Private object to assign properties to. Not the same object as 'this.QrSegment'.\n\t\n\t// (Public) Describes precisely all strings that are encodable in numeric mode.\n\t// To test whether a string s is encodable: var ok = NUMERIC_REGEX.test(s);\n\t// A string is encodable iff each character is in the range 0 to 9.\n\tthis.QrSegment.NUMERIC_REGEX = /^[0-9]*$/;\n\t\n\t// (Public) Describes precisely all strings that are encodable in alphanumeric mode.\n\t// To test whether a string s is encodable: var ok = ALPHANUMERIC_REGEX.test(s);\n\t// A string is encodable iff each character is in the following set: 0 to 9, A to Z\n\t// (uppercase only), space, dollar, percent, asterisk, plus, hyphen, period, slash, colon.\n\tthis.QrSegment.ALPHANUMERIC_REGEX = /^[A-Z0-9 $%*+.\\/:-]*$/;\n\t\n\t// (Private) The set of all legal characters in alphanumeric mode,\n\t// where each character value maps to the index in the string.\n\tQrSegment.ALPHANUMERIC_CHARSET = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:\";\n\t\n\t\n\t/*---- Public helper enumeration ----*/\n\t\n\t/* \n\t * Describes how a segment's data bits are interpreted. Immutable.\n\t */\n\tthis.QrSegment.Mode = {  // Constants\n\t\tNUMERIC     : new Mode(0x1, [10, 12, 14]),\n\t\tALPHANUMERIC: new Mode(0x2, [ 9, 11, 13]),\n\t\tBYTE        : new Mode(0x4, [ 8, 16, 16]),\n\t\tKANJI       : new Mode(0x8, [ 8, 10, 12]),\n\t\tECI         : new Mode(0x7, [ 0,  0,  0]),\n\t};\n\t\n\t\n\t// Private constructor.\n\tfunction Mode(mode, ccbits) {\n\t\t// (Package-private) The mode indicator bits, which is a uint4 value (range 0 to 15).\n\t\tObject.defineProperty(this, \"modeBits\", {value:mode});\n\t\t\n\t\t// (Package-private) Returns the bit width of the character count field for a segment in\n\t\t// this mode in a QR Code at the given version number. The result is in the range [0, 16].\n\t\tthis.numCharCountBits = function(ver) {\n\t\t\treturn ccbits[Math.floor((ver + 7) / 17)];\n\t\t};\n\t}\n\t\n\t\n\t\n\t/*---- Private helper functions and classes ----*/\n\t\n\t// Returns a new array of bytes representing the given string encoded in UTF-8.\n\tfunction toUtf8ByteArray(str) {\n\t\tstr = encodeURI(str);\n\t\tvar result = [];\n\t\tfor (var i = 0; i < str.length; i++) {\n\t\t\tif (str.charAt(i) != \"%\")\n\t\t\t\tresult.push(str.charCodeAt(i));\n\t\t\telse {\n\t\t\t\tresult.push(parseInt(str.substring(i + 1, i + 3), 16));\n\t\t\t\ti += 2;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t\n\t\n\t/* \n\t * A private helper class that computes the Reed-Solomon error correction codewords for a sequence of\n\t * data codewords at a given degree. Objects are immutable, and the state only depends on the degree.\n\t * This class exists because each data block in a QR Code shares the same the divisor polynomial.\n\t * This constructor creates a Reed-Solomon ECC generator for the given degree. This could be implemented\n\t * as a lookup table over all possible parameter values, instead of as an algorithm.\n\t */\n\tfunction ReedSolomonGenerator(degree) {\n\t\tif (degree < 1 || degree > 255)\n\t\t\tthrow \"Degree out of range\";\n\t\t\n\t\t// Coefficients of the divisor polynomial, stored from highest to lowest power, excluding the leading term which\n\t\t// is always 1. For example the polynomial x^3 + 255x^2 + 8x + 93 is stored as the uint8 array {255, 8, 93}.\n\t\tvar coefficients = [];\n\t\t\n\t\t// Start with the monomial x^0\n\t\tfor (var i = 0; i < degree - 1; i++)\n\t\t\tcoefficients.push(0);\n\t\tcoefficients.push(1);\n\t\t\n\t\t// Compute the product polynomial (x - r^0) * (x - r^1) * (x - r^2) * ... * (x - r^{degree-1}),\n\t\t// drop the highest term, and store the rest of the coefficients in order of descending powers.\n\t\t// Note that r = 0x02, which is a generator element of this field GF(2^8/0x11D).\n\t\tvar root = 1;\n\t\tfor (var i = 0; i < degree; i++) {\n\t\t\t// Multiply the current product by (x - r^i)\n\t\t\tfor (var j = 0; j < coefficients.length; j++) {\n\t\t\t\tcoefficients[j] = ReedSolomonGenerator.multiply(coefficients[j], root);\n\t\t\t\tif (j + 1 < coefficients.length)\n\t\t\t\t\tcoefficients[j] ^= coefficients[j + 1];\n\t\t\t}\n\t\t\troot = ReedSolomonGenerator.multiply(root, 0x02);\n\t\t}\n\t\t\n\t\t// Computes and returns the Reed-Solomon error correction codewords for the given\n\t\t// sequence of data codewords. The returned object is always a new byte array.\n\t\t// This method does not alter this object's state (because it is immutable).\n\t\tthis.getRemainder = function(data) {\n\t\t\t// Compute the remainder by performing polynomial division\n\t\t\tvar result = coefficients.map(function() { return 0; });\n\t\t\tdata.forEach(function(b) {\n\t\t\t\tvar factor = b ^ result.shift();\n\t\t\t\tresult.push(0);\n\t\t\t\tcoefficients.forEach(function(coef, i) {\n\t\t\t\t\tresult[i] ^= ReedSolomonGenerator.multiply(coef, factor);\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn result;\n\t\t};\n\t}\n\t\n\t// This static function returns the product of the two given field elements modulo GF(2^8/0x11D). The arguments and\n\t// result are unsigned 8-bit integers. This could be implemented as a lookup table of 256*256 entries of uint8.\n\tReedSolomonGenerator.multiply = function(x, y) {\n\t\tif (x >>> 8 != 0 || y >>> 8 != 0)\n\t\t\tthrow \"Byte out of range\";\n\t\t// Russian peasant multiplication\n\t\tvar z = 0;\n\t\tfor (var i = 7; i >= 0; i--) {\n\t\t\tz = (z << 1) ^ ((z >>> 7) * 0x11D);\n\t\t\tz ^= ((y >>> i) & 1) * x;\n\t\t}\n\t\tif (z >>> 8 != 0)\n\t\t\tthrow \"Assertion error\";\n\t\treturn z;\n\t};\n\t\n\t\n\t\n\t/* \n\t * A private helper class that represents an appendable sequence of bits (0s and 1s).\n\t * Mainly used by QrSegment. This constructor creates an empty bit buffer (length 0).\n\t */\n\tfunction BitBuffer() {\n\t\tArray.call(this);\n\t\t\n\t\t// Appends the given number of low-order bits of the given value\n\t\t// to this buffer. Requires 0 <= len <= 31 and 0 <= val < 2^len.\n\t\tthis.appendBits = function(val, len) {\n\t\t\tif (len < 0 || len > 31 || val >>> len != 0)\n\t\t\t\tthrow \"Value out of range\";\n\t\tfor (var i = len - 1; i >= 0; i--)  // Append bit by bit\n\t\t\t\tthis.push((val >>> i) & 1);\n\t\t};\n\t}\n\t\n\tBitBuffer.prototype = Object.create(Array.prototype);\n\tBitBuffer.prototype.constructor = BitBuffer;\n\t\n};\n\n    exports.QrCode = qrcodegen.QrCode;\n    exports.encodeSegments = function() {\n        return qrcodegen.QrCode.encodeSegments.apply(qrcodegen.QrCode, arguments);\n    };\n    exports.encodeText = qrcodegen.QrCode.encodeText;\n    exports.Ecc = qrcodegen.QrCode.Ecc;\n    exports.QrSegment = qrcodegen.QrSegment;\n}));\n\n\n//# sourceURL=webpack:///./src/qrcodegen.js?");

/***/ })

/******/ });